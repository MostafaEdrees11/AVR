
ADC_Driver.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .text         000011de  00000000  00000000  00000094  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  1 .data         0000000c  00800060  000011de  00001272  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  2 .bss          00000011  0080006c  0080006c  0000127e  2**0
                  ALLOC
  3 .comment      0000005c  00000000  00000000  0000127e  2**0
                  CONTENTS, READONLY
  4 .note.gnu.avr.deviceinfo 0000003c  00000000  00000000  000012dc  2**2
                  CONTENTS, READONLY
  5 .debug_aranges 00000210  00000000  00000000  00001318  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_info   00002071  00000000  00000000  00001528  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_abbrev 00000d3e  00000000  00000000  00003599  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_line   000015b3  00000000  00000000  000042d7  2**0
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_frame  000004d4  00000000  00000000  0000588c  2**2
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_str    000009b3  00000000  00000000  00005d60  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_loc    00001838  00000000  00000000  00006713  2**0
                  CONTENTS, READONLY, DEBUGGING
 12 .debug_ranges 000001b0  00000000  00000000  00007f4b  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
       0:	0c 94 32 00 	jmp	0x64	; 0x64 <__ctors_end>
       4:	0c 94 6e 05 	jmp	0xadc	; 0xadc <__vector_1>
       8:	0c 94 9b 05 	jmp	0xb36	; 0xb36 <__vector_2>
       c:	0c 94 c8 05 	jmp	0xb90	; 0xb90 <__vector_3>
      10:	0c 94 4f 00 	jmp	0x9e	; 0x9e <__bad_interrupt>
      14:	0c 94 4f 00 	jmp	0x9e	; 0x9e <__bad_interrupt>
      18:	0c 94 4f 00 	jmp	0x9e	; 0x9e <__bad_interrupt>
      1c:	0c 94 4f 00 	jmp	0x9e	; 0x9e <__bad_interrupt>
      20:	0c 94 4f 00 	jmp	0x9e	; 0x9e <__bad_interrupt>
      24:	0c 94 4f 00 	jmp	0x9e	; 0x9e <__bad_interrupt>
      28:	0c 94 4f 00 	jmp	0x9e	; 0x9e <__bad_interrupt>
      2c:	0c 94 4f 00 	jmp	0x9e	; 0x9e <__bad_interrupt>
      30:	0c 94 4f 00 	jmp	0x9e	; 0x9e <__bad_interrupt>
      34:	0c 94 4f 00 	jmp	0x9e	; 0x9e <__bad_interrupt>
      38:	0c 94 4f 00 	jmp	0x9e	; 0x9e <__bad_interrupt>
      3c:	0c 94 4f 00 	jmp	0x9e	; 0x9e <__bad_interrupt>
      40:	0c 94 f9 02 	jmp	0x5f2	; 0x5f2 <__vector_16>
      44:	0c 94 4f 00 	jmp	0x9e	; 0x9e <__bad_interrupt>
      48:	0c 94 4f 00 	jmp	0x9e	; 0x9e <__bad_interrupt>
      4c:	0c 94 4f 00 	jmp	0x9e	; 0x9e <__bad_interrupt>
      50:	0c 94 4f 00 	jmp	0x9e	; 0x9e <__bad_interrupt>
      54:	8e 02       	muls	r24, r30
      56:	99 02       	muls	r25, r25
      58:	a4 02       	muls	r26, r20
      5a:	af 02       	muls	r26, r31
      5c:	ba 02       	muls	r27, r26
      5e:	c5 02       	muls	r28, r21
      60:	d0 02       	muls	r29, r16
      62:	db 02       	muls	r29, r27

00000064 <__ctors_end>:
      64:	11 24       	eor	r1, r1
      66:	1f be       	out	0x3f, r1	; 63
      68:	cf e5       	ldi	r28, 0x5F	; 95
      6a:	d8 e0       	ldi	r29, 0x08	; 8
      6c:	de bf       	out	0x3e, r29	; 62
      6e:	cd bf       	out	0x3d, r28	; 61

00000070 <__do_copy_data>:
      70:	10 e0       	ldi	r17, 0x00	; 0
      72:	a0 e6       	ldi	r26, 0x60	; 96
      74:	b0 e0       	ldi	r27, 0x00	; 0
      76:	ee ed       	ldi	r30, 0xDE	; 222
      78:	f1 e1       	ldi	r31, 0x11	; 17
      7a:	02 c0       	rjmp	.+4      	; 0x80 <__do_copy_data+0x10>
      7c:	05 90       	lpm	r0, Z+
      7e:	0d 92       	st	X+, r0
      80:	ac 36       	cpi	r26, 0x6C	; 108
      82:	b1 07       	cpc	r27, r17
      84:	d9 f7       	brne	.-10     	; 0x7c <__do_copy_data+0xc>

00000086 <__do_clear_bss>:
      86:	20 e0       	ldi	r18, 0x00	; 0
      88:	ac e6       	ldi	r26, 0x6C	; 108
      8a:	b0 e0       	ldi	r27, 0x00	; 0
      8c:	01 c0       	rjmp	.+2      	; 0x90 <.do_clear_bss_start>

0000008e <.do_clear_bss_loop>:
      8e:	1d 92       	st	X+, r1

00000090 <.do_clear_bss_start>:
      90:	ad 37       	cpi	r26, 0x7D	; 125
      92:	b2 07       	cpc	r27, r18
      94:	e1 f7       	brne	.-8      	; 0x8e <.do_clear_bss_loop>
      96:	0e 94 f4 01 	call	0x3e8	; 0x3e8 <main>
      9a:	0c 94 ed 08 	jmp	0x11da	; 0x11da <_exit>

0000009e <__bad_interrupt>:
      9e:	0c 94 00 00 	jmp	0	; 0x0 <__vectors>

000000a2 <LCD_enuLatch>:
		return ES_NULL_POINTER;
	}
	
	Local_enuErrorState = ES_OK;
	return Local_enuErrorState;
}
      a2:	cf 93       	push	r28
      a4:	c8 2f       	mov	r28, r24
      a6:	40 e0       	ldi	r20, 0x00	; 0
      a8:	66 e0       	ldi	r22, 0x06	; 6
      aa:	80 e0       	ldi	r24, 0x00	; 0
      ac:	0e 94 cc 03 	call	0x798	; 0x798 <DIO_enuSetPinVal>
      b0:	81 11       	cpse	r24, r1
      b2:	60 c0       	rjmp	.+192    	; 0x174 <LCD_enuLatch+0xd2>
      b4:	41 e0       	ldi	r20, 0x01	; 1
      b6:	67 e0       	ldi	r22, 0x07	; 7
      b8:	0e 94 cc 03 	call	0x798	; 0x798 <DIO_enuSetPinVal>
      bc:	81 11       	cpse	r24, r1
      be:	5a c0       	rjmp	.+180    	; 0x174 <LCD_enuLatch+0xd2>
      c0:	4c 2f       	mov	r20, r28
      c2:	44 1f       	adc	r20, r20
      c4:	44 27       	eor	r20, r20
      c6:	44 1f       	adc	r20, r20
      c8:	67 e0       	ldi	r22, 0x07	; 7
      ca:	81 e0       	ldi	r24, 0x01	; 1
      cc:	0e 94 cc 03 	call	0x798	; 0x798 <DIO_enuSetPinVal>
      d0:	81 11       	cpse	r24, r1
      d2:	50 c0       	rjmp	.+160    	; 0x174 <LCD_enuLatch+0xd2>
      d4:	c6 fb       	bst	r28, 6
      d6:	44 27       	eor	r20, r20
      d8:	40 f9       	bld	r20, 0
      da:	66 e0       	ldi	r22, 0x06	; 6
      dc:	81 e0       	ldi	r24, 0x01	; 1
      de:	0e 94 cc 03 	call	0x798	; 0x798 <DIO_enuSetPinVal>
      e2:	81 11       	cpse	r24, r1
      e4:	47 c0       	rjmp	.+142    	; 0x174 <LCD_enuLatch+0xd2>
      e6:	c5 fb       	bst	r28, 5
      e8:	44 27       	eor	r20, r20
      ea:	40 f9       	bld	r20, 0
      ec:	65 e0       	ldi	r22, 0x05	; 5
      ee:	81 e0       	ldi	r24, 0x01	; 1
      f0:	0e 94 cc 03 	call	0x798	; 0x798 <DIO_enuSetPinVal>
      f4:	81 11       	cpse	r24, r1
      f6:	3e c0       	rjmp	.+124    	; 0x174 <LCD_enuLatch+0xd2>
      f8:	c4 fb       	bst	r28, 4
      fa:	44 27       	eor	r20, r20
      fc:	40 f9       	bld	r20, 0
      fe:	64 e0       	ldi	r22, 0x04	; 4
     100:	81 e0       	ldi	r24, 0x01	; 1
     102:	0e 94 cc 03 	call	0x798	; 0x798 <DIO_enuSetPinVal>
     106:	81 11       	cpse	r24, r1
     108:	35 c0       	rjmp	.+106    	; 0x174 <LCD_enuLatch+0xd2>
     10a:	c3 fb       	bst	r28, 3
     10c:	44 27       	eor	r20, r20
     10e:	40 f9       	bld	r20, 0
     110:	63 e0       	ldi	r22, 0x03	; 3
     112:	81 e0       	ldi	r24, 0x01	; 1
     114:	0e 94 cc 03 	call	0x798	; 0x798 <DIO_enuSetPinVal>
     118:	81 11       	cpse	r24, r1
     11a:	2c c0       	rjmp	.+88     	; 0x174 <LCD_enuLatch+0xd2>
     11c:	c2 fb       	bst	r28, 2
     11e:	44 27       	eor	r20, r20
     120:	40 f9       	bld	r20, 0
     122:	62 e0       	ldi	r22, 0x02	; 2
     124:	81 e0       	ldi	r24, 0x01	; 1
     126:	0e 94 cc 03 	call	0x798	; 0x798 <DIO_enuSetPinVal>
     12a:	81 11       	cpse	r24, r1
     12c:	23 c0       	rjmp	.+70     	; 0x174 <LCD_enuLatch+0xd2>
     12e:	c1 fb       	bst	r28, 1
     130:	44 27       	eor	r20, r20
     132:	40 f9       	bld	r20, 0
     134:	61 e0       	ldi	r22, 0x01	; 1
     136:	81 e0       	ldi	r24, 0x01	; 1
     138:	0e 94 cc 03 	call	0x798	; 0x798 <DIO_enuSetPinVal>
     13c:	81 11       	cpse	r24, r1
     13e:	1a c0       	rjmp	.+52     	; 0x174 <LCD_enuLatch+0xd2>
     140:	4c 2f       	mov	r20, r28
     142:	41 70       	andi	r20, 0x01	; 1
     144:	60 e0       	ldi	r22, 0x00	; 0
     146:	81 e0       	ldi	r24, 0x01	; 1
     148:	0e 94 cc 03 	call	0x798	; 0x798 <DIO_enuSetPinVal>
     14c:	81 11       	cpse	r24, r1
     14e:	12 c0       	rjmp	.+36     	; 0x174 <LCD_enuLatch+0xd2>
     150:	89 ef       	ldi	r24, 0xF9	; 249
     152:	90 e0       	ldi	r25, 0x00	; 0
     154:	01 97       	sbiw	r24, 0x01	; 1
     156:	f1 f7       	brne	.-4      	; 0x154 <LCD_enuLatch+0xb2>
     158:	00 c0       	rjmp	.+0      	; 0x15a <LCD_enuLatch+0xb8>
     15a:	00 00       	nop
     15c:	40 e0       	ldi	r20, 0x00	; 0
     15e:	67 e0       	ldi	r22, 0x07	; 7
     160:	80 e0       	ldi	r24, 0x00	; 0
     162:	0e 94 cc 03 	call	0x798	; 0x798 <DIO_enuSetPinVal>
     166:	89 ef       	ldi	r24, 0xF9	; 249
     168:	90 e0       	ldi	r25, 0x00	; 0
     16a:	01 97       	sbiw	r24, 0x01	; 1
     16c:	f1 f7       	brne	.-4      	; 0x16a <LCD_enuLatch+0xc8>
     16e:	00 c0       	rjmp	.+0      	; 0x170 <LCD_enuLatch+0xce>
     170:	00 00       	nop
     172:	80 e0       	ldi	r24, 0x00	; 0
     174:	cf 91       	pop	r28
     176:	08 95       	ret

00000178 <LCD_inlenuSendCommand>:
     178:	cf 93       	push	r28
     17a:	c8 2f       	mov	r28, r24
     17c:	40 e0       	ldi	r20, 0x00	; 0
     17e:	65 e0       	ldi	r22, 0x05	; 5
     180:	80 e0       	ldi	r24, 0x00	; 0
     182:	0e 94 cc 03 	call	0x798	; 0x798 <DIO_enuSetPinVal>
     186:	81 11       	cpse	r24, r1
     188:	03 c0       	rjmp	.+6      	; 0x190 <LCD_inlenuSendCommand+0x18>
     18a:	8c 2f       	mov	r24, r28
     18c:	0e 94 51 00 	call	0xa2	; 0xa2 <LCD_enuLatch>
     190:	cf 91       	pop	r28
     192:	08 95       	ret

00000194 <LCD_enuInit>:
     194:	41 e0       	ldi	r20, 0x01	; 1
     196:	65 e0       	ldi	r22, 0x05	; 5
     198:	80 e0       	ldi	r24, 0x00	; 0
     19a:	0e 94 5a 03 	call	0x6b4	; 0x6b4 <DIO_enuSetPinDirection>
     19e:	81 11       	cpse	r24, r1
     1a0:	77 c0       	rjmp	.+238    	; 0x290 <LCD_enuInit+0xfc>
     1a2:	41 e0       	ldi	r20, 0x01	; 1
     1a4:	66 e0       	ldi	r22, 0x06	; 6
     1a6:	0e 94 5a 03 	call	0x6b4	; 0x6b4 <DIO_enuSetPinDirection>
     1aa:	81 11       	cpse	r24, r1
     1ac:	71 c0       	rjmp	.+226    	; 0x290 <LCD_enuInit+0xfc>
     1ae:	41 e0       	ldi	r20, 0x01	; 1
     1b0:	67 e0       	ldi	r22, 0x07	; 7
     1b2:	0e 94 5a 03 	call	0x6b4	; 0x6b4 <DIO_enuSetPinDirection>
     1b6:	81 11       	cpse	r24, r1
     1b8:	6b c0       	rjmp	.+214    	; 0x290 <LCD_enuInit+0xfc>
     1ba:	41 e0       	ldi	r20, 0x01	; 1
     1bc:	67 e0       	ldi	r22, 0x07	; 7
     1be:	81 e0       	ldi	r24, 0x01	; 1
     1c0:	0e 94 5a 03 	call	0x6b4	; 0x6b4 <DIO_enuSetPinDirection>
     1c4:	81 11       	cpse	r24, r1
     1c6:	64 c0       	rjmp	.+200    	; 0x290 <LCD_enuInit+0xfc>
     1c8:	41 e0       	ldi	r20, 0x01	; 1
     1ca:	66 e0       	ldi	r22, 0x06	; 6
     1cc:	81 e0       	ldi	r24, 0x01	; 1
     1ce:	0e 94 5a 03 	call	0x6b4	; 0x6b4 <DIO_enuSetPinDirection>
     1d2:	81 11       	cpse	r24, r1
     1d4:	5d c0       	rjmp	.+186    	; 0x290 <LCD_enuInit+0xfc>
     1d6:	41 e0       	ldi	r20, 0x01	; 1
     1d8:	65 e0       	ldi	r22, 0x05	; 5
     1da:	81 e0       	ldi	r24, 0x01	; 1
     1dc:	0e 94 5a 03 	call	0x6b4	; 0x6b4 <DIO_enuSetPinDirection>
     1e0:	81 11       	cpse	r24, r1
     1e2:	56 c0       	rjmp	.+172    	; 0x290 <LCD_enuInit+0xfc>
     1e4:	41 e0       	ldi	r20, 0x01	; 1
     1e6:	64 e0       	ldi	r22, 0x04	; 4
     1e8:	81 e0       	ldi	r24, 0x01	; 1
     1ea:	0e 94 5a 03 	call	0x6b4	; 0x6b4 <DIO_enuSetPinDirection>
     1ee:	81 11       	cpse	r24, r1
     1f0:	4f c0       	rjmp	.+158    	; 0x290 <LCD_enuInit+0xfc>
     1f2:	8d e2       	ldi	r24, 0x2D	; 45
     1f4:	92 e2       	ldi	r25, 0x22	; 34
     1f6:	01 97       	sbiw	r24, 0x01	; 1
     1f8:	f1 f7       	brne	.-4      	; 0x1f6 <LCD_enuInit+0x62>
     1fa:	00 c0       	rjmp	.+0      	; 0x1fc <LCD_enuInit+0x68>
     1fc:	00 00       	nop
     1fe:	41 e0       	ldi	r20, 0x01	; 1
     200:	63 e0       	ldi	r22, 0x03	; 3
     202:	81 e0       	ldi	r24, 0x01	; 1
     204:	0e 94 5a 03 	call	0x6b4	; 0x6b4 <DIO_enuSetPinDirection>
     208:	81 11       	cpse	r24, r1
     20a:	42 c0       	rjmp	.+132    	; 0x290 <LCD_enuInit+0xfc>
     20c:	41 e0       	ldi	r20, 0x01	; 1
     20e:	62 e0       	ldi	r22, 0x02	; 2
     210:	81 e0       	ldi	r24, 0x01	; 1
     212:	0e 94 5a 03 	call	0x6b4	; 0x6b4 <DIO_enuSetPinDirection>
     216:	81 11       	cpse	r24, r1
     218:	3b c0       	rjmp	.+118    	; 0x290 <LCD_enuInit+0xfc>
     21a:	41 e0       	ldi	r20, 0x01	; 1
     21c:	61 e0       	ldi	r22, 0x01	; 1
     21e:	81 e0       	ldi	r24, 0x01	; 1
     220:	0e 94 5a 03 	call	0x6b4	; 0x6b4 <DIO_enuSetPinDirection>
     224:	81 11       	cpse	r24, r1
     226:	34 c0       	rjmp	.+104    	; 0x290 <LCD_enuInit+0xfc>
     228:	41 e0       	ldi	r20, 0x01	; 1
     22a:	60 e0       	ldi	r22, 0x00	; 0
     22c:	81 e0       	ldi	r24, 0x01	; 1
     22e:	0e 94 5a 03 	call	0x6b4	; 0x6b4 <DIO_enuSetPinDirection>
     232:	81 11       	cpse	r24, r1
     234:	2d c0       	rjmp	.+90     	; 0x290 <LCD_enuInit+0xfc>
     236:	88 e3       	ldi	r24, 0x38	; 56
     238:	0e 94 bc 00 	call	0x178	; 0x178 <LCD_inlenuSendCommand>
     23c:	81 11       	cpse	r24, r1
     23e:	28 c0       	rjmp	.+80     	; 0x290 <LCD_enuInit+0xfc>
     240:	89 ef       	ldi	r24, 0xF9	; 249
     242:	90 e0       	ldi	r25, 0x00	; 0
     244:	01 97       	sbiw	r24, 0x01	; 1
     246:	f1 f7       	brne	.-4      	; 0x244 <LCD_enuInit+0xb0>
     248:	00 c0       	rjmp	.+0      	; 0x24a <LCD_enuInit+0xb6>
     24a:	00 00       	nop
     24c:	8f e0       	ldi	r24, 0x0F	; 15
     24e:	0e 94 bc 00 	call	0x178	; 0x178 <LCD_inlenuSendCommand>
     252:	81 11       	cpse	r24, r1
     254:	1d c0       	rjmp	.+58     	; 0x290 <LCD_enuInit+0xfc>
     256:	89 ef       	ldi	r24, 0xF9	; 249
     258:	90 e0       	ldi	r25, 0x00	; 0
     25a:	01 97       	sbiw	r24, 0x01	; 1
     25c:	f1 f7       	brne	.-4      	; 0x25a <LCD_enuInit+0xc6>
     25e:	00 c0       	rjmp	.+0      	; 0x260 <LCD_enuInit+0xcc>
     260:	00 00       	nop
     262:	81 e0       	ldi	r24, 0x01	; 1
     264:	0e 94 bc 00 	call	0x178	; 0x178 <LCD_inlenuSendCommand>
     268:	81 11       	cpse	r24, r1
     26a:	12 c0       	rjmp	.+36     	; 0x290 <LCD_enuInit+0xfc>
     26c:	83 ef       	ldi	r24, 0xF3	; 243
     26e:	91 e0       	ldi	r25, 0x01	; 1
     270:	01 97       	sbiw	r24, 0x01	; 1
     272:	f1 f7       	brne	.-4      	; 0x270 <LCD_enuInit+0xdc>
     274:	00 c0       	rjmp	.+0      	; 0x276 <LCD_enuInit+0xe2>
     276:	00 00       	nop
     278:	86 e0       	ldi	r24, 0x06	; 6
     27a:	0e 94 bc 00 	call	0x178	; 0x178 <LCD_inlenuSendCommand>
     27e:	81 11       	cpse	r24, r1
     280:	07 c0       	rjmp	.+14     	; 0x290 <LCD_enuInit+0xfc>
     282:	89 ef       	ldi	r24, 0xF9	; 249
     284:	90 e0       	ldi	r25, 0x00	; 0
     286:	01 97       	sbiw	r24, 0x01	; 1
     288:	f1 f7       	brne	.-4      	; 0x286 <LCD_enuInit+0xf2>
     28a:	00 c0       	rjmp	.+0      	; 0x28c <LCD_enuInit+0xf8>
     28c:	00 00       	nop
     28e:	80 e0       	ldi	r24, 0x00	; 0
     290:	08 95       	ret

00000292 <LCD_enuGoToPosition>:
     292:	cf 93       	push	r28
     294:	df 93       	push	r29
     296:	60 31       	cpi	r22, 0x10	; 16
     298:	48 f5       	brcc	.+82     	; 0x2ec <LCD_enuGoToPosition+0x5a>
     29a:	c6 2f       	mov	r28, r22
     29c:	81 30       	cpi	r24, 0x01	; 1
     29e:	89 f4       	brne	.+34     	; 0x2c2 <LCD_enuGoToPosition+0x30>
     2a0:	d0 e8       	ldi	r29, 0x80	; 128
     2a2:	d6 0f       	add	r29, r22
     2a4:	40 e0       	ldi	r20, 0x00	; 0
     2a6:	65 e0       	ldi	r22, 0x05	; 5
     2a8:	80 e0       	ldi	r24, 0x00	; 0
     2aa:	0e 94 cc 03 	call	0x798	; 0x798 <DIO_enuSetPinVal>
     2ae:	81 11       	cpse	r24, r1
     2b0:	03 c0       	rjmp	.+6      	; 0x2b8 <LCD_enuGoToPosition+0x26>
     2b2:	8d 2f       	mov	r24, r29
     2b4:	0e 94 51 00 	call	0xa2	; 0xa2 <LCD_enuLatch>
     2b8:	81 11       	cpse	r24, r1
     2ba:	1b c0       	rjmp	.+54     	; 0x2f2 <LCD_enuGoToPosition+0x60>
     2bc:	c0 93 6c 00 	sts	0x006C, r28	; 0x80006c <__data_end>
     2c0:	18 c0       	rjmp	.+48     	; 0x2f2 <LCD_enuGoToPosition+0x60>
     2c2:	82 30       	cpi	r24, 0x02	; 2
     2c4:	a9 f4       	brne	.+42     	; 0x2f0 <LCD_enuGoToPosition+0x5e>
     2c6:	d0 ec       	ldi	r29, 0xC0	; 192
     2c8:	d6 0f       	add	r29, r22
     2ca:	40 e0       	ldi	r20, 0x00	; 0
     2cc:	65 e0       	ldi	r22, 0x05	; 5
     2ce:	80 e0       	ldi	r24, 0x00	; 0
     2d0:	0e 94 cc 03 	call	0x798	; 0x798 <DIO_enuSetPinVal>
     2d4:	81 11       	cpse	r24, r1
     2d6:	03 c0       	rjmp	.+6      	; 0x2de <LCD_enuGoToPosition+0x4c>
     2d8:	8d 2f       	mov	r24, r29
     2da:	0e 94 51 00 	call	0xa2	; 0xa2 <LCD_enuLatch>
     2de:	81 11       	cpse	r24, r1
     2e0:	08 c0       	rjmp	.+16     	; 0x2f2 <LCD_enuGoToPosition+0x60>
     2e2:	60 e1       	ldi	r22, 0x10	; 16
     2e4:	6c 0f       	add	r22, r28
     2e6:	60 93 6c 00 	sts	0x006C, r22	; 0x80006c <__data_end>
     2ea:	03 c0       	rjmp	.+6      	; 0x2f2 <LCD_enuGoToPosition+0x60>
     2ec:	80 e0       	ldi	r24, 0x00	; 0
     2ee:	01 c0       	rjmp	.+2      	; 0x2f2 <LCD_enuGoToPosition+0x60>
     2f0:	80 e0       	ldi	r24, 0x00	; 0
     2f2:	df 91       	pop	r29
     2f4:	cf 91       	pop	r28
     2f6:	08 95       	ret

000002f8 <LCD_vidCheckPosition>:
     2f8:	80 91 6c 00 	lds	r24, 0x006C	; 0x80006c <__data_end>
     2fc:	80 31       	cpi	r24, 0x10	; 16
     2fe:	51 f4       	brne	.+20     	; 0x314 <LCD_vidCheckPosition+0x1c>
     300:	60 e0       	ldi	r22, 0x00	; 0
     302:	82 e0       	ldi	r24, 0x02	; 2
     304:	0e 94 49 01 	call	0x292	; 0x292 <LCD_enuGoToPosition>
     308:	80 91 6c 00 	lds	r24, 0x006C	; 0x80006c <__data_end>
     30c:	8f 5f       	subi	r24, 0xFF	; 255
     30e:	80 93 6c 00 	sts	0x006C, r24	; 0x80006c <__data_end>
     312:	08 95       	ret
     314:	80 32       	cpi	r24, 0x20	; 32
     316:	89 f4       	brne	.+34     	; 0x33a <LCD_vidCheckPosition+0x42>
     318:	40 e0       	ldi	r20, 0x00	; 0
     31a:	65 e0       	ldi	r22, 0x05	; 5
     31c:	80 e0       	ldi	r24, 0x00	; 0
     31e:	0e 94 cc 03 	call	0x798	; 0x798 <DIO_enuSetPinVal>
     322:	81 11       	cpse	r24, r1
     324:	03 c0       	rjmp	.+6      	; 0x32c <LCD_vidCheckPosition+0x34>
     326:	81 e0       	ldi	r24, 0x01	; 1
     328:	0e 94 51 00 	call	0xa2	; 0xa2 <LCD_enuLatch>
     32c:	60 e0       	ldi	r22, 0x00	; 0
     32e:	81 e0       	ldi	r24, 0x01	; 1
     330:	0e 94 49 01 	call	0x292	; 0x292 <LCD_enuGoToPosition>
     334:	10 92 6c 00 	sts	0x006C, r1	; 0x80006c <__data_end>
     338:	08 95       	ret
     33a:	8f 5f       	subi	r24, 0xFF	; 255
     33c:	80 93 6c 00 	sts	0x006C, r24	; 0x80006c <__data_end>
     340:	08 95       	ret

00000342 <LCD_enuDisplayChar>:
     342:	cf 93       	push	r28
     344:	c8 2f       	mov	r28, r24
     346:	0e 94 7c 01 	call	0x2f8	; 0x2f8 <LCD_vidCheckPosition>
     34a:	41 e0       	ldi	r20, 0x01	; 1
     34c:	65 e0       	ldi	r22, 0x05	; 5
     34e:	80 e0       	ldi	r24, 0x00	; 0
     350:	0e 94 cc 03 	call	0x798	; 0x798 <DIO_enuSetPinVal>
     354:	81 11       	cpse	r24, r1
     356:	03 c0       	rjmp	.+6      	; 0x35e <LCD_enuDisplayChar+0x1c>
     358:	8c 2f       	mov	r24, r28
     35a:	0e 94 51 00 	call	0xa2	; 0xa2 <LCD_enuLatch>
     35e:	cf 91       	pop	r28
     360:	08 95       	ret

00000362 <LCD_enuWriteNumber>:
 * @retval		: ES_t --> it returns the state of excution of this function
 * @note		: none
 ******************************************************************************
**/
ES_t LCD_enuWriteNumber(int Copy_s32Number)
{
     362:	1f 93       	push	r17
     364:	cf 93       	push	r28
     366:	df 93       	push	r29
     368:	cd b7       	in	r28, 0x3d	; 61
     36a:	de b7       	in	r29, 0x3e	; 62
     36c:	60 97       	sbiw	r28, 0x10	; 16
     36e:	0f b6       	in	r0, 0x3f	; 63
     370:	f8 94       	cli
     372:	de bf       	out	0x3e, r29	; 62
     374:	0f be       	out	0x3f, r0	; 63
     376:	cd bf       	out	0x3d, r28	; 61
	ES_t Local_enuErrorState = ES_NOK;
	u8 Local_As8Container[16];
	u8 Local_u8Iterator;
	
	sprintf(Local_As8Container, "%d", Copy_s32Number);
     378:	9f 93       	push	r25
     37a:	8f 93       	push	r24
     37c:	89 e6       	ldi	r24, 0x69	; 105
     37e:	90 e0       	ldi	r25, 0x00	; 0
     380:	9f 93       	push	r25
     382:	8f 93       	push	r24
     384:	ce 01       	movw	r24, r28
     386:	01 96       	adiw	r24, 0x01	; 1
     388:	9f 93       	push	r25
     38a:	8f 93       	push	r24
     38c:	0e 94 03 06 	call	0xc06	; 0xc06 <sprintf>
	
	for(Local_u8Iterator = 0; Local_As8Container[Local_u8Iterator] != '\0'; Local_u8Iterator++)
     390:	0f 90       	pop	r0
     392:	0f 90       	pop	r0
     394:	0f 90       	pop	r0
     396:	0f 90       	pop	r0
     398:	0f 90       	pop	r0
     39a:	0f 90       	pop	r0
     39c:	10 e0       	ldi	r17, 0x00	; 0
 * @note		: none
 ******************************************************************************
**/
ES_t LCD_enuWriteNumber(int Copy_s32Number)
{
	ES_t Local_enuErrorState = ES_NOK;
     39e:	81 e0       	ldi	r24, 0x01	; 1
	u8 Local_As8Container[16];
	u8 Local_u8Iterator;
	
	sprintf(Local_As8Container, "%d", Copy_s32Number);
	
	for(Local_u8Iterator = 0; Local_As8Container[Local_u8Iterator] != '\0'; Local_u8Iterator++)
     3a0:	04 c0       	rjmp	.+8      	; 0x3aa <LCD_enuWriteNumber+0x48>
	{
		Local_enuErrorState = LCD_enuDisplayChar(Local_As8Container[Local_u8Iterator]);
     3a2:	89 2f       	mov	r24, r25
     3a4:	0e 94 a1 01 	call	0x342	; 0x342 <LCD_enuDisplayChar>
	u8 Local_As8Container[16];
	u8 Local_u8Iterator;
	
	sprintf(Local_As8Container, "%d", Copy_s32Number);
	
	for(Local_u8Iterator = 0; Local_As8Container[Local_u8Iterator] != '\0'; Local_u8Iterator++)
     3a8:	1f 5f       	subi	r17, 0xFF	; 255
     3aa:	e1 e0       	ldi	r30, 0x01	; 1
     3ac:	f0 e0       	ldi	r31, 0x00	; 0
     3ae:	ec 0f       	add	r30, r28
     3b0:	fd 1f       	adc	r31, r29
     3b2:	e1 0f       	add	r30, r17
     3b4:	f1 1d       	adc	r31, r1
     3b6:	90 81       	ld	r25, Z
     3b8:	91 11       	cpse	r25, r1
     3ba:	f3 cf       	rjmp	.-26     	; 0x3a2 <LCD_enuWriteNumber+0x40>
	{
		Local_enuErrorState = LCD_enuDisplayChar(Local_As8Container[Local_u8Iterator]);
	}
	
	return Local_enuErrorState;
     3bc:	60 96       	adiw	r28, 0x10	; 16
     3be:	0f b6       	in	r0, 0x3f	; 63
     3c0:	f8 94       	cli
     3c2:	de bf       	out	0x3e, r29	; 62
     3c4:	0f be       	out	0x3f, r0	; 63
     3c6:	cd bf       	out	0x3d, r28	; 61
     3c8:	df 91       	pop	r29
     3ca:	cf 91       	pop	r28
     3cc:	1f 91       	pop	r17
     3ce:	08 95       	ret

000003d0 <Read>:
		_delay_ms(3000);*/
    }
}

volatile void Read(void *ptr)
{
     3d0:	cf 93       	push	r28
     3d2:	df 93       	push	r29
     3d4:	ec 01       	movw	r28, r24
	ADC_enuReadADCValue(ptr);
     3d6:	0e 94 6b 02 	call	0x4d6	; 0x4d6 <ADC_enuReadADCValue>
	/*ADC_enuReadHighValue(ptr);*/
	LCD_enuWriteNumber(*((s32 *)ptr));
     3da:	88 81       	ld	r24, Y
     3dc:	99 81       	ldd	r25, Y+1	; 0x01
     3de:	0e 94 b1 01 	call	0x362	; 0x362 <LCD_enuWriteNumber>
     3e2:	df 91       	pop	r29
     3e4:	cf 91       	pop	r28
     3e6:	08 95       	ret

000003e8 <main>:
extern EXTI_Configuration_t EXTI_AStrEXTI_Config[MAX_NUM_EXTI];

volatile void Read(void *ptr);

int main(void)
{
     3e8:	cf 93       	push	r28
     3ea:	df 93       	push	r29
     3ec:	00 d0       	rcall	.+0      	; 0x3ee <main+0x6>
     3ee:	cd b7       	in	r28, 0x3d	; 61
     3f0:	de b7       	in	r29, 0x3e	; 62
	u16 ADC_Read = 0;
     3f2:	1a 82       	std	Y+2, r1	; 0x02
     3f4:	19 82       	std	Y+1, r1	; 0x01
	
	DIO_enuSetPinDirection(DIO_u8PORTA, DIO_u8PIN0, DIO_u8INPUT);
     3f6:	40 e0       	ldi	r20, 0x00	; 0
     3f8:	60 e0       	ldi	r22, 0x00	; 0
     3fa:	80 e0       	ldi	r24, 0x00	; 0
     3fc:	0e 94 5a 03 	call	0x6b4	; 0x6b4 <DIO_enuSetPinDirection>
	
	DIO_enuSetPinDirection(DIO_u8PORTD, DIO_u8PIN2, DIO_u8INPUT);
     400:	40 e0       	ldi	r20, 0x00	; 0
     402:	62 e0       	ldi	r22, 0x02	; 2
     404:	83 e0       	ldi	r24, 0x03	; 3
     406:	0e 94 5a 03 	call	0x6b4	; 0x6b4 <DIO_enuSetPinDirection>
	DIO_enuSetPinVal(DIO_u8PORTD, DIO_u8PIN2, DIO_u8PULL_UP);
     40a:	41 e0       	ldi	r20, 0x01	; 1
     40c:	62 e0       	ldi	r22, 0x02	; 2
     40e:	83 e0       	ldi	r24, 0x03	; 3
     410:	0e 94 cc 03 	call	0x798	; 0x798 <DIO_enuSetPinVal>
	
	EXTI_enuInit(EXTI_AStrEXTI_Config);
     414:	80 e6       	ldi	r24, 0x60	; 96
     416:	90 e0       	ldi	r25, 0x00	; 0
     418:	0e 94 3e 04 	call	0x87c	; 0x87c <EXTI_enuInit>
	EXTI_enuEnable(EXTI0);
     41c:	80 e0       	ldi	r24, 0x00	; 0
     41e:	0e 94 4a 05 	call	0xa94	; 0xa94 <EXTI_enuEnable>
	EXTI_enuChange_Control_State(EXTI0, FAILLING);
     422:	62 e0       	ldi	r22, 0x02	; 2
     424:	80 e0       	ldi	r24, 0x00	; 0
     426:	0e 94 ce 04 	call	0x99c	; 0x99c <EXTI_enuChange_Control_State>
	
	
	ADC_enuInit();
     42a:	0e 94 37 02 	call	0x46e	; 0x46e <ADC_enuInit>
	ADC_enuSelectChannel(ADC_CHANNEL_0);
     42e:	80 e0       	ldi	r24, 0x00	; 0
     430:	0e 94 5e 02 	call	0x4bc	; 0x4bc <ADC_enuSelectChannel>
	ADC_enuEnableTrigger(EXTI0_TRIG);
     434:	82 e0       	ldi	r24, 0x02	; 2
     436:	0e 94 7c 02 	call	0x4f8	; 0x4f8 <ADC_enuEnableTrigger>
	ADC_enuEnableInterrupt();
     43a:	0e 94 66 02 	call	0x4cc	; 0x4cc <ADC_enuEnableInterrupt>
	ADC_enuCallBack(&Read, &ADC_Read);
     43e:	be 01       	movw	r22, r28
     440:	6f 5f       	subi	r22, 0xFF	; 255
     442:	7f 4f       	sbci	r23, 0xFF	; 255
     444:	88 ee       	ldi	r24, 0xE8	; 232
     446:	91 e0       	ldi	r25, 0x01	; 1
     448:	0e 94 eb 02 	call	0x5d6	; 0x5d6 <ADC_enuCallBack>
	ADC_enuEnable();
     44c:	0e 94 54 02 	call	0x4a8	; 0x4a8 <ADC_enuEnable>
	ADC_enuStartConversion();
     450:	0e 94 59 02 	call	0x4b2	; 0x4b2 <ADC_enuStartConversion>
	
	LCD_enuInit();
     454:	0e 94 ca 00 	call	0x194	; 0x194 <LCD_enuInit>
	
	GIE_enuGloable_Interrupt_Enable();
     458:	0e 94 f5 05 	call	0xbea	; 0xbea <GIE_enuGloable_Interrupt_Enable>
	
	DIO_enuSetPortDirection(DIO_u8PORTC, 0xFF);
     45c:	6f ef       	ldi	r22, 0xFF	; 255
     45e:	82 e0       	ldi	r24, 0x02	; 2
     460:	0e 94 26 03 	call	0x64c	; 0x64c <DIO_enuSetPortDirection>
    /* Replace with your application code */
    while (1) 
    {
		/*ADC_enuStartConversion();
		ADC_enuReadADCValue(&ADC_Read);*/
		DIO_enuSetPortVal(DIO_u8PORTC, ADC_Read);
     464:	69 81       	ldd	r22, Y+1	; 0x01
     466:	82 e0       	ldi	r24, 0x02	; 2
     468:	0e 94 40 03 	call	0x680	; 0x680 <DIO_enuSetPortVal>
     46c:	fb cf       	rjmp	.-10     	; 0x464 <__EEPROM_REGION_LENGTH__+0x64>

0000046e <ADC_enuInit>:
	ES_t Local_enuErrorState = ES_NOK;
	
	ADCSRA &= ~(MASK_BIT << ADATE);
	
	return Local_enuErrorState;
}
     46e:	87 b1       	in	r24, 0x07	; 7
     470:	8f 73       	andi	r24, 0x3F	; 63
     472:	87 b9       	out	0x07, r24	; 7
     474:	87 b1       	in	r24, 0x07	; 7
     476:	8f 7b       	andi	r24, 0xBF	; 191
     478:	87 b9       	out	0x07, r24	; 7
     47a:	87 b1       	in	r24, 0x07	; 7
     47c:	8f 77       	andi	r24, 0x7F	; 127
     47e:	87 b9       	out	0x07, r24	; 7
     480:	87 b1       	in	r24, 0x07	; 7
     482:	8f 7d       	andi	r24, 0xDF	; 223
     484:	87 b9       	out	0x07, r24	; 7
     486:	87 b1       	in	r24, 0x07	; 7
     488:	8f 7d       	andi	r24, 0xDF	; 223
     48a:	87 b9       	out	0x07, r24	; 7
     48c:	86 b1       	in	r24, 0x06	; 6
     48e:	88 7f       	andi	r24, 0xF8	; 248
     490:	86 b9       	out	0x06, r24	; 6
     492:	86 b1       	in	r24, 0x06	; 6
     494:	81 60       	ori	r24, 0x01	; 1
     496:	86 b9       	out	0x06, r24	; 6
     498:	86 b1       	in	r24, 0x06	; 6
     49a:	82 60       	ori	r24, 0x02	; 2
     49c:	86 b9       	out	0x06, r24	; 6
     49e:	86 b1       	in	r24, 0x06	; 6
     4a0:	8b 7f       	andi	r24, 0xFB	; 251
     4a2:	86 b9       	out	0x06, r24	; 6
     4a4:	81 e0       	ldi	r24, 0x01	; 1
     4a6:	08 95       	ret

000004a8 <ADC_enuEnable>:
     4a8:	86 b1       	in	r24, 0x06	; 6
     4aa:	80 68       	ori	r24, 0x80	; 128
     4ac:	86 b9       	out	0x06, r24	; 6
     4ae:	81 e0       	ldi	r24, 0x01	; 1
     4b0:	08 95       	ret

000004b2 <ADC_enuStartConversion>:
     4b2:	86 b1       	in	r24, 0x06	; 6
     4b4:	80 64       	ori	r24, 0x40	; 64
     4b6:	86 b9       	out	0x06, r24	; 6
     4b8:	81 e0       	ldi	r24, 0x01	; 1
     4ba:	08 95       	ret

000004bc <ADC_enuSelectChannel>:
     4bc:	97 b1       	in	r25, 0x07	; 7
     4be:	90 7e       	andi	r25, 0xE0	; 224
     4c0:	97 b9       	out	0x07, r25	; 7
     4c2:	97 b1       	in	r25, 0x07	; 7
     4c4:	89 2b       	or	r24, r25
     4c6:	87 b9       	out	0x07, r24	; 7
     4c8:	81 e0       	ldi	r24, 0x01	; 1
     4ca:	08 95       	ret

000004cc <ADC_enuEnableInterrupt>:
     4cc:	86 b1       	in	r24, 0x06	; 6
     4ce:	88 60       	ori	r24, 0x08	; 8
     4d0:	86 b9       	out	0x06, r24	; 6
     4d2:	81 e0       	ldi	r24, 0x01	; 1
     4d4:	08 95       	ret

000004d6 <ADC_enuReadADCValue>:
     4d6:	fc 01       	movw	r30, r24
     4d8:	24 b1       	in	r18, 0x04	; 4
     4da:	42 2f       	mov	r20, r18
     4dc:	50 e0       	ldi	r21, 0x00	; 0
     4de:	51 83       	std	Z+1, r21	; 0x01
     4e0:	40 83       	st	Z, r20
     4e2:	95 b1       	in	r25, 0x05	; 5
     4e4:	29 2f       	mov	r18, r25
     4e6:	30 e0       	ldi	r19, 0x00	; 0
     4e8:	32 2f       	mov	r19, r18
     4ea:	22 27       	eor	r18, r18
     4ec:	24 2b       	or	r18, r20
     4ee:	35 2b       	or	r19, r21
     4f0:	31 83       	std	Z+1, r19	; 0x01
     4f2:	20 83       	st	Z, r18
     4f4:	81 e0       	ldi	r24, 0x01	; 1
     4f6:	08 95       	ret

000004f8 <ADC_enuEnableTrigger>:
     4f8:	e8 2f       	mov	r30, r24
     4fa:	86 b1       	in	r24, 0x06	; 6
     4fc:	8f 7d       	andi	r24, 0xDF	; 223
     4fe:	86 b9       	out	0x06, r24	; 6
     500:	80 b7       	in	r24, 0x30	; 48
     502:	8f 71       	andi	r24, 0x1F	; 31
     504:	80 bf       	out	0x30, r24	; 48
     506:	8e 2f       	mov	r24, r30
     508:	90 e0       	ldi	r25, 0x00	; 0
     50a:	88 30       	cpi	r24, 0x08	; 8
     50c:	91 05       	cpc	r25, r1
     50e:	08 f0       	brcs	.+2      	; 0x512 <ADC_enuEnableTrigger+0x1a>
     510:	5d c0       	rjmp	.+186    	; 0x5cc <ADC_enuEnableTrigger+0xd4>
     512:	fc 01       	movw	r30, r24
     514:	e6 5d       	subi	r30, 0xD6	; 214
     516:	ff 4f       	sbci	r31, 0xFF	; 255
     518:	0c 94 fd 05 	jmp	0xbfa	; 0xbfa <__tablejump2__>
     51c:	80 b7       	in	r24, 0x30	; 48
     51e:	8f 7d       	andi	r24, 0xDF	; 223
     520:	80 bf       	out	0x30, r24	; 48
     522:	80 b7       	in	r24, 0x30	; 48
     524:	8f 7b       	andi	r24, 0xBF	; 191
     526:	80 bf       	out	0x30, r24	; 48
     528:	80 b7       	in	r24, 0x30	; 48
     52a:	8f 77       	andi	r24, 0x7F	; 127
     52c:	80 bf       	out	0x30, r24	; 48
     52e:	81 e0       	ldi	r24, 0x01	; 1
     530:	4e c0       	rjmp	.+156    	; 0x5ce <ADC_enuEnableTrigger+0xd6>
     532:	80 b7       	in	r24, 0x30	; 48
     534:	80 62       	ori	r24, 0x20	; 32
     536:	80 bf       	out	0x30, r24	; 48
     538:	80 b7       	in	r24, 0x30	; 48
     53a:	8f 7b       	andi	r24, 0xBF	; 191
     53c:	80 bf       	out	0x30, r24	; 48
     53e:	80 b7       	in	r24, 0x30	; 48
     540:	8f 77       	andi	r24, 0x7F	; 127
     542:	80 bf       	out	0x30, r24	; 48
     544:	81 e0       	ldi	r24, 0x01	; 1
     546:	43 c0       	rjmp	.+134    	; 0x5ce <ADC_enuEnableTrigger+0xd6>
     548:	80 b7       	in	r24, 0x30	; 48
     54a:	8f 7d       	andi	r24, 0xDF	; 223
     54c:	80 bf       	out	0x30, r24	; 48
     54e:	80 b7       	in	r24, 0x30	; 48
     550:	80 64       	ori	r24, 0x40	; 64
     552:	80 bf       	out	0x30, r24	; 48
     554:	80 b7       	in	r24, 0x30	; 48
     556:	8f 77       	andi	r24, 0x7F	; 127
     558:	80 bf       	out	0x30, r24	; 48
     55a:	81 e0       	ldi	r24, 0x01	; 1
     55c:	38 c0       	rjmp	.+112    	; 0x5ce <ADC_enuEnableTrigger+0xd6>
     55e:	80 b7       	in	r24, 0x30	; 48
     560:	80 62       	ori	r24, 0x20	; 32
     562:	80 bf       	out	0x30, r24	; 48
     564:	80 b7       	in	r24, 0x30	; 48
     566:	80 64       	ori	r24, 0x40	; 64
     568:	80 bf       	out	0x30, r24	; 48
     56a:	80 b7       	in	r24, 0x30	; 48
     56c:	8f 77       	andi	r24, 0x7F	; 127
     56e:	80 bf       	out	0x30, r24	; 48
     570:	81 e0       	ldi	r24, 0x01	; 1
     572:	2d c0       	rjmp	.+90     	; 0x5ce <ADC_enuEnableTrigger+0xd6>
     574:	80 b7       	in	r24, 0x30	; 48
     576:	8f 7d       	andi	r24, 0xDF	; 223
     578:	80 bf       	out	0x30, r24	; 48
     57a:	80 b7       	in	r24, 0x30	; 48
     57c:	8f 7b       	andi	r24, 0xBF	; 191
     57e:	80 bf       	out	0x30, r24	; 48
     580:	80 b7       	in	r24, 0x30	; 48
     582:	80 68       	ori	r24, 0x80	; 128
     584:	80 bf       	out	0x30, r24	; 48
     586:	81 e0       	ldi	r24, 0x01	; 1
     588:	22 c0       	rjmp	.+68     	; 0x5ce <ADC_enuEnableTrigger+0xd6>
     58a:	80 b7       	in	r24, 0x30	; 48
     58c:	80 62       	ori	r24, 0x20	; 32
     58e:	80 bf       	out	0x30, r24	; 48
     590:	80 b7       	in	r24, 0x30	; 48
     592:	8f 7b       	andi	r24, 0xBF	; 191
     594:	80 bf       	out	0x30, r24	; 48
     596:	80 b7       	in	r24, 0x30	; 48
     598:	80 68       	ori	r24, 0x80	; 128
     59a:	80 bf       	out	0x30, r24	; 48
     59c:	81 e0       	ldi	r24, 0x01	; 1
     59e:	17 c0       	rjmp	.+46     	; 0x5ce <ADC_enuEnableTrigger+0xd6>
     5a0:	80 b7       	in	r24, 0x30	; 48
     5a2:	8f 7d       	andi	r24, 0xDF	; 223
     5a4:	80 bf       	out	0x30, r24	; 48
     5a6:	80 b7       	in	r24, 0x30	; 48
     5a8:	80 64       	ori	r24, 0x40	; 64
     5aa:	80 bf       	out	0x30, r24	; 48
     5ac:	80 b7       	in	r24, 0x30	; 48
     5ae:	80 68       	ori	r24, 0x80	; 128
     5b0:	80 bf       	out	0x30, r24	; 48
     5b2:	81 e0       	ldi	r24, 0x01	; 1
     5b4:	0c c0       	rjmp	.+24     	; 0x5ce <ADC_enuEnableTrigger+0xd6>
     5b6:	80 b7       	in	r24, 0x30	; 48
     5b8:	80 62       	ori	r24, 0x20	; 32
     5ba:	80 bf       	out	0x30, r24	; 48
     5bc:	80 b7       	in	r24, 0x30	; 48
     5be:	80 64       	ori	r24, 0x40	; 64
     5c0:	80 bf       	out	0x30, r24	; 48
     5c2:	80 b7       	in	r24, 0x30	; 48
     5c4:	80 68       	ori	r24, 0x80	; 128
     5c6:	80 bf       	out	0x30, r24	; 48
     5c8:	81 e0       	ldi	r24, 0x01	; 1
     5ca:	01 c0       	rjmp	.+2      	; 0x5ce <ADC_enuEnableTrigger+0xd6>
     5cc:	83 e0       	ldi	r24, 0x03	; 3
     5ce:	96 b1       	in	r25, 0x06	; 6
     5d0:	90 62       	ori	r25, 0x20	; 32
     5d2:	96 b9       	out	0x06, r25	; 6
     5d4:	08 95       	ret

000005d6 <ADC_enuCallBack>:

ES_t ADC_enuCallBack(volatile void (*Copy_PFunc)(void*), volatile void *Copy_PvidAppParameter)
{
	ES_t Local_enuErrorState = ES_NOK;
	
	if(Copy_PFunc != NULL)
     5d6:	00 97       	sbiw	r24, 0x00	; 0
     5d8:	51 f0       	breq	.+20     	; 0x5ee <ADC_enuCallBack+0x18>
	{
		ADC_PFuncISRFunc = Copy_PFunc;
     5da:	90 93 70 00 	sts	0x0070, r25	; 0x800070 <ADC_PFuncISRFunc+0x1>
     5de:	80 93 6f 00 	sts	0x006F, r24	; 0x80006f <ADC_PFuncISRFunc>
		ADC_PvidISRParameter = Copy_PvidAppParameter;
     5e2:	70 93 6e 00 	sts	0x006E, r23	; 0x80006e <ADC_PvidISRParameter+0x1>
     5e6:	60 93 6d 00 	sts	0x006D, r22	; 0x80006d <ADC_PvidISRParameter>
	return Local_enuErrorState;
}

ES_t ADC_enuCallBack(volatile void (*Copy_PFunc)(void*), volatile void *Copy_PvidAppParameter)
{
	ES_t Local_enuErrorState = ES_NOK;
     5ea:	81 e0       	ldi	r24, 0x01	; 1
     5ec:	08 95       	ret
		ADC_PFuncISRFunc = Copy_PFunc;
		ADC_PvidISRParameter = Copy_PvidAppParameter;
	}
	else
	{
		Local_enuErrorState = ES_NULL_POINTER;
     5ee:	82 e0       	ldi	r24, 0x02	; 2
	}
	return Local_enuErrorState;
}
     5f0:	08 95       	ret

000005f2 <__vector_16>:

ISR(VECT_ADC)
{
     5f2:	1f 92       	push	r1
     5f4:	0f 92       	push	r0
     5f6:	0f b6       	in	r0, 0x3f	; 63
     5f8:	0f 92       	push	r0
     5fa:	11 24       	eor	r1, r1
     5fc:	2f 93       	push	r18
     5fe:	3f 93       	push	r19
     600:	4f 93       	push	r20
     602:	5f 93       	push	r21
     604:	6f 93       	push	r22
     606:	7f 93       	push	r23
     608:	8f 93       	push	r24
     60a:	9f 93       	push	r25
     60c:	af 93       	push	r26
     60e:	bf 93       	push	r27
     610:	ef 93       	push	r30
     612:	ff 93       	push	r31
	if(ADC_PFuncISRFunc != NULL)
     614:	e0 91 6f 00 	lds	r30, 0x006F	; 0x80006f <ADC_PFuncISRFunc>
     618:	f0 91 70 00 	lds	r31, 0x0070	; 0x800070 <ADC_PFuncISRFunc+0x1>
     61c:	30 97       	sbiw	r30, 0x00	; 0
     61e:	29 f0       	breq	.+10     	; 0x62a <__vector_16+0x38>
	{
		ADC_PFuncISRFunc(ADC_PvidISRParameter);
     620:	80 91 6d 00 	lds	r24, 0x006D	; 0x80006d <ADC_PvidISRParameter>
     624:	90 91 6e 00 	lds	r25, 0x006E	; 0x80006e <ADC_PvidISRParameter+0x1>
     628:	09 95       	icall
	}
     62a:	ff 91       	pop	r31
     62c:	ef 91       	pop	r30
     62e:	bf 91       	pop	r27
     630:	af 91       	pop	r26
     632:	9f 91       	pop	r25
     634:	8f 91       	pop	r24
     636:	7f 91       	pop	r23
     638:	6f 91       	pop	r22
     63a:	5f 91       	pop	r21
     63c:	4f 91       	pop	r20
     63e:	3f 91       	pop	r19
     640:	2f 91       	pop	r18
     642:	0f 90       	pop	r0
     644:	0f be       	out	0x3f, r0	; 63
     646:	0f 90       	pop	r0
     648:	1f 90       	pop	r1
     64a:	18 95       	reti

0000064c <DIO_enuSetPortDirection>:
	{
		Local_enuErrorState = ES_OUT_OF_RANGE;
	}
	
	return Local_enuErrorState;
}
     64c:	84 30       	cpi	r24, 0x04	; 4
     64e:	a0 f4       	brcc	.+40     	; 0x678 <DIO_enuSetPortDirection+0x2c>
     650:	81 30       	cpi	r24, 0x01	; 1
     652:	49 f0       	breq	.+18     	; 0x666 <DIO_enuSetPortDirection+0x1a>
     654:	28 f0       	brcs	.+10     	; 0x660 <DIO_enuSetPortDirection+0x14>
     656:	82 30       	cpi	r24, 0x02	; 2
     658:	49 f0       	breq	.+18     	; 0x66c <DIO_enuSetPortDirection+0x20>
     65a:	83 30       	cpi	r24, 0x03	; 3
     65c:	51 f0       	breq	.+20     	; 0x672 <DIO_enuSetPortDirection+0x26>
     65e:	0e c0       	rjmp	.+28     	; 0x67c <DIO_enuSetPortDirection+0x30>
     660:	6a bb       	out	0x1a, r22	; 26
     662:	80 e0       	ldi	r24, 0x00	; 0
     664:	08 95       	ret
     666:	67 bb       	out	0x17, r22	; 23
     668:	80 e0       	ldi	r24, 0x00	; 0
     66a:	08 95       	ret
     66c:	64 bb       	out	0x14, r22	; 20
     66e:	80 e0       	ldi	r24, 0x00	; 0
     670:	08 95       	ret
     672:	61 bb       	out	0x11, r22	; 17
     674:	80 e0       	ldi	r24, 0x00	; 0
     676:	08 95       	ret
     678:	83 e0       	ldi	r24, 0x03	; 3
     67a:	08 95       	ret
     67c:	80 e0       	ldi	r24, 0x00	; 0
     67e:	08 95       	ret

00000680 <DIO_enuSetPortVal>:
     680:	84 30       	cpi	r24, 0x04	; 4
     682:	a0 f4       	brcc	.+40     	; 0x6ac <DIO_enuSetPortVal+0x2c>
     684:	81 30       	cpi	r24, 0x01	; 1
     686:	49 f0       	breq	.+18     	; 0x69a <DIO_enuSetPortVal+0x1a>
     688:	28 f0       	brcs	.+10     	; 0x694 <DIO_enuSetPortVal+0x14>
     68a:	82 30       	cpi	r24, 0x02	; 2
     68c:	49 f0       	breq	.+18     	; 0x6a0 <DIO_enuSetPortVal+0x20>
     68e:	83 30       	cpi	r24, 0x03	; 3
     690:	51 f0       	breq	.+20     	; 0x6a6 <DIO_enuSetPortVal+0x26>
     692:	0e c0       	rjmp	.+28     	; 0x6b0 <DIO_enuSetPortVal+0x30>
     694:	6b bb       	out	0x1b, r22	; 27
     696:	80 e0       	ldi	r24, 0x00	; 0
     698:	08 95       	ret
     69a:	68 bb       	out	0x18, r22	; 24
     69c:	80 e0       	ldi	r24, 0x00	; 0
     69e:	08 95       	ret
     6a0:	65 bb       	out	0x15, r22	; 21
     6a2:	80 e0       	ldi	r24, 0x00	; 0
     6a4:	08 95       	ret
     6a6:	62 bb       	out	0x12, r22	; 18
     6a8:	80 e0       	ldi	r24, 0x00	; 0
     6aa:	08 95       	ret
     6ac:	83 e0       	ldi	r24, 0x03	; 3
     6ae:	08 95       	ret
     6b0:	80 e0       	ldi	r24, 0x00	; 0
     6b2:	08 95       	ret

000006b4 <DIO_enuSetPinDirection>:
**/
ES_t DIO_enuSetPinDirection(u8 Copy_u8PortID, u8 Copy_u8PinID, u8 Copy_u8Value)
{
	ES_t Local_enuErrorState = ES_NOK;
	
	if(Copy_u8PortID <= DIO_PORTD && Copy_u8PinID <= DIO_PIN7 && Copy_u8Value <= OUTPUT)
     6b4:	84 30       	cpi	r24, 0x04	; 4
     6b6:	08 f0       	brcs	.+2      	; 0x6ba <DIO_enuSetPinDirection+0x6>
     6b8:	67 c0       	rjmp	.+206    	; 0x788 <DIO_enuSetPinDirection+0xd4>
     6ba:	68 30       	cpi	r22, 0x08	; 8
     6bc:	08 f0       	brcs	.+2      	; 0x6c0 <DIO_enuSetPinDirection+0xc>
     6be:	66 c0       	rjmp	.+204    	; 0x78c <DIO_enuSetPinDirection+0xd8>
     6c0:	42 30       	cpi	r20, 0x02	; 2
     6c2:	08 f0       	brcs	.+2      	; 0x6c6 <DIO_enuSetPinDirection+0x12>
     6c4:	65 c0       	rjmp	.+202    	; 0x790 <DIO_enuSetPinDirection+0xdc>
	{
		switch(Copy_u8PortID)
     6c6:	81 30       	cpi	r24, 0x01	; 1
     6c8:	e9 f0       	breq	.+58     	; 0x704 <DIO_enuSetPinDirection+0x50>
     6ca:	30 f0       	brcs	.+12     	; 0x6d8 <DIO_enuSetPinDirection+0x24>
     6cc:	82 30       	cpi	r24, 0x02	; 2
     6ce:	81 f1       	breq	.+96     	; 0x730 <DIO_enuSetPinDirection+0x7c>
     6d0:	83 30       	cpi	r24, 0x03	; 3
     6d2:	09 f4       	brne	.+2      	; 0x6d6 <DIO_enuSetPinDirection+0x22>
     6d4:	43 c0       	rjmp	.+134    	; 0x75c <DIO_enuSetPinDirection+0xa8>
     6d6:	5e c0       	rjmp	.+188    	; 0x794 <DIO_enuSetPinDirection+0xe0>
		{
			case DIO_PORTA:
			DDRA &= ~(DIO_MASK_BIT << Copy_u8PinID);
     6d8:	81 e0       	ldi	r24, 0x01	; 1
     6da:	90 e0       	ldi	r25, 0x00	; 0
     6dc:	06 2e       	mov	r0, r22
     6de:	02 c0       	rjmp	.+4      	; 0x6e4 <DIO_enuSetPinDirection+0x30>
     6e0:	88 0f       	add	r24, r24
     6e2:	99 1f       	adc	r25, r25
     6e4:	0a 94       	dec	r0
     6e6:	e2 f7       	brpl	.-8      	; 0x6e0 <DIO_enuSetPinDirection+0x2c>
     6e8:	80 95       	com	r24
     6ea:	2a b3       	in	r18, 0x1a	; 26
     6ec:	28 23       	and	r18, r24
			DDRA |=  (Copy_u8Value << Copy_u8PinID);
     6ee:	84 2f       	mov	r24, r20
     6f0:	90 e0       	ldi	r25, 0x00	; 0
     6f2:	02 c0       	rjmp	.+4      	; 0x6f8 <DIO_enuSetPinDirection+0x44>
     6f4:	88 0f       	add	r24, r24
     6f6:	99 1f       	adc	r25, r25
     6f8:	6a 95       	dec	r22
     6fa:	e2 f7       	brpl	.-8      	; 0x6f4 <DIO_enuSetPinDirection+0x40>
     6fc:	82 2b       	or	r24, r18
     6fe:	8a bb       	out	0x1a, r24	; 26
			case DIO_PORTD:
			DDRD &= ~(DIO_MASK_BIT << Copy_u8PinID);
			DDRD |=  (Copy_u8Value << Copy_u8PinID);
			break;
		}
		Local_enuErrorState = ES_OK;
     700:	80 e0       	ldi	r24, 0x00	; 0
		switch(Copy_u8PortID)
		{
			case DIO_PORTA:
			DDRA &= ~(DIO_MASK_BIT << Copy_u8PinID);
			DDRA |=  (Copy_u8Value << Copy_u8PinID);
			break;
     702:	08 95       	ret
			
			case DIO_PORTB:
			DDRB &= ~(DIO_MASK_BIT << Copy_u8PinID);
     704:	21 e0       	ldi	r18, 0x01	; 1
     706:	30 e0       	ldi	r19, 0x00	; 0
     708:	06 2e       	mov	r0, r22
     70a:	02 c0       	rjmp	.+4      	; 0x710 <DIO_enuSetPinDirection+0x5c>
     70c:	22 0f       	add	r18, r18
     70e:	33 1f       	adc	r19, r19
     710:	0a 94       	dec	r0
     712:	e2 f7       	brpl	.-8      	; 0x70c <DIO_enuSetPinDirection+0x58>
     714:	20 95       	com	r18
     716:	87 b3       	in	r24, 0x17	; 23
     718:	28 23       	and	r18, r24
			DDRB |=  (Copy_u8Value << Copy_u8PinID);
     71a:	84 2f       	mov	r24, r20
     71c:	90 e0       	ldi	r25, 0x00	; 0
     71e:	02 c0       	rjmp	.+4      	; 0x724 <DIO_enuSetPinDirection+0x70>
     720:	88 0f       	add	r24, r24
     722:	99 1f       	adc	r25, r25
     724:	6a 95       	dec	r22
     726:	e2 f7       	brpl	.-8      	; 0x720 <DIO_enuSetPinDirection+0x6c>
     728:	82 2b       	or	r24, r18
     72a:	87 bb       	out	0x17, r24	; 23
			case DIO_PORTD:
			DDRD &= ~(DIO_MASK_BIT << Copy_u8PinID);
			DDRD |=  (Copy_u8Value << Copy_u8PinID);
			break;
		}
		Local_enuErrorState = ES_OK;
     72c:	80 e0       	ldi	r24, 0x00	; 0
			break;
			
			case DIO_PORTB:
			DDRB &= ~(DIO_MASK_BIT << Copy_u8PinID);
			DDRB |=  (Copy_u8Value << Copy_u8PinID);
			break;
     72e:	08 95       	ret
			
			case DIO_PORTC:
			DDRC &= ~(DIO_MASK_BIT << Copy_u8PinID);
     730:	21 e0       	ldi	r18, 0x01	; 1
     732:	30 e0       	ldi	r19, 0x00	; 0
     734:	06 2e       	mov	r0, r22
     736:	02 c0       	rjmp	.+4      	; 0x73c <DIO_enuSetPinDirection+0x88>
     738:	22 0f       	add	r18, r18
     73a:	33 1f       	adc	r19, r19
     73c:	0a 94       	dec	r0
     73e:	e2 f7       	brpl	.-8      	; 0x738 <DIO_enuSetPinDirection+0x84>
     740:	20 95       	com	r18
     742:	84 b3       	in	r24, 0x14	; 20
     744:	28 23       	and	r18, r24
			DDRC |=  (Copy_u8Value << Copy_u8PinID);
     746:	84 2f       	mov	r24, r20
     748:	90 e0       	ldi	r25, 0x00	; 0
     74a:	02 c0       	rjmp	.+4      	; 0x750 <DIO_enuSetPinDirection+0x9c>
     74c:	88 0f       	add	r24, r24
     74e:	99 1f       	adc	r25, r25
     750:	6a 95       	dec	r22
     752:	e2 f7       	brpl	.-8      	; 0x74c <DIO_enuSetPinDirection+0x98>
     754:	82 2b       	or	r24, r18
     756:	84 bb       	out	0x14, r24	; 20
			case DIO_PORTD:
			DDRD &= ~(DIO_MASK_BIT << Copy_u8PinID);
			DDRD |=  (Copy_u8Value << Copy_u8PinID);
			break;
		}
		Local_enuErrorState = ES_OK;
     758:	80 e0       	ldi	r24, 0x00	; 0
			break;
			
			case DIO_PORTC:
			DDRC &= ~(DIO_MASK_BIT << Copy_u8PinID);
			DDRC |=  (Copy_u8Value << Copy_u8PinID);
			break;
     75a:	08 95       	ret
			
			case DIO_PORTD:
			DDRD &= ~(DIO_MASK_BIT << Copy_u8PinID);
     75c:	21 e0       	ldi	r18, 0x01	; 1
     75e:	30 e0       	ldi	r19, 0x00	; 0
     760:	06 2e       	mov	r0, r22
     762:	02 c0       	rjmp	.+4      	; 0x768 <DIO_enuSetPinDirection+0xb4>
     764:	22 0f       	add	r18, r18
     766:	33 1f       	adc	r19, r19
     768:	0a 94       	dec	r0
     76a:	e2 f7       	brpl	.-8      	; 0x764 <DIO_enuSetPinDirection+0xb0>
     76c:	20 95       	com	r18
     76e:	81 b3       	in	r24, 0x11	; 17
     770:	28 23       	and	r18, r24
			DDRD |=  (Copy_u8Value << Copy_u8PinID);
     772:	84 2f       	mov	r24, r20
     774:	90 e0       	ldi	r25, 0x00	; 0
     776:	02 c0       	rjmp	.+4      	; 0x77c <DIO_enuSetPinDirection+0xc8>
     778:	88 0f       	add	r24, r24
     77a:	99 1f       	adc	r25, r25
     77c:	6a 95       	dec	r22
     77e:	e2 f7       	brpl	.-8      	; 0x778 <DIO_enuSetPinDirection+0xc4>
     780:	82 2b       	or	r24, r18
     782:	81 bb       	out	0x11, r24	; 17
			break;
		}
		Local_enuErrorState = ES_OK;
     784:	80 e0       	ldi	r24, 0x00	; 0
			break;
			
			case DIO_PORTD:
			DDRD &= ~(DIO_MASK_BIT << Copy_u8PinID);
			DDRD |=  (Copy_u8Value << Copy_u8PinID);
			break;
     786:	08 95       	ret
		}
		Local_enuErrorState = ES_OK;
	}
	else
	{
		Local_enuErrorState = ES_OUT_OF_RANGE;
     788:	83 e0       	ldi	r24, 0x03	; 3
     78a:	08 95       	ret
     78c:	83 e0       	ldi	r24, 0x03	; 3
     78e:	08 95       	ret
     790:	83 e0       	ldi	r24, 0x03	; 3
     792:	08 95       	ret
			case DIO_PORTD:
			DDRD &= ~(DIO_MASK_BIT << Copy_u8PinID);
			DDRD |=  (Copy_u8Value << Copy_u8PinID);
			break;
		}
		Local_enuErrorState = ES_OK;
     794:	80 e0       	ldi	r24, 0x00	; 0
	{
		Local_enuErrorState = ES_OUT_OF_RANGE;
	}
	
	return Local_enuErrorState;
}
     796:	08 95       	ret

00000798 <DIO_enuSetPinVal>:
**/
ES_t DIO_enuSetPinVal(u8 Copy_u8PortID, u8 Copy_u8PinID, u8 Copy_u8Value)
{
	ES_t Local_enuErrorState = ES_NOK;
	
	if(Copy_u8PortID <= DIO_PORTD && Copy_u8PinID <= DIO_PIN7 && Copy_u8Value <= OUTPUT)
     798:	84 30       	cpi	r24, 0x04	; 4
     79a:	08 f0       	brcs	.+2      	; 0x79e <DIO_enuSetPinVal+0x6>
     79c:	67 c0       	rjmp	.+206    	; 0x86c <__stack+0xd>
     79e:	68 30       	cpi	r22, 0x08	; 8
     7a0:	08 f0       	brcs	.+2      	; 0x7a4 <DIO_enuSetPinVal+0xc>
     7a2:	66 c0       	rjmp	.+204    	; 0x870 <__stack+0x11>
     7a4:	42 30       	cpi	r20, 0x02	; 2
     7a6:	08 f0       	brcs	.+2      	; 0x7aa <DIO_enuSetPinVal+0x12>
     7a8:	65 c0       	rjmp	.+202    	; 0x874 <__stack+0x15>
	{
		switch(Copy_u8PortID)
     7aa:	81 30       	cpi	r24, 0x01	; 1
     7ac:	e9 f0       	breq	.+58     	; 0x7e8 <DIO_enuSetPinVal+0x50>
     7ae:	30 f0       	brcs	.+12     	; 0x7bc <DIO_enuSetPinVal+0x24>
     7b0:	82 30       	cpi	r24, 0x02	; 2
     7b2:	81 f1       	breq	.+96     	; 0x814 <__DATA_REGION_LENGTH__+0x14>
     7b4:	83 30       	cpi	r24, 0x03	; 3
     7b6:	09 f4       	brne	.+2      	; 0x7ba <DIO_enuSetPinVal+0x22>
     7b8:	43 c0       	rjmp	.+134    	; 0x840 <__DATA_REGION_LENGTH__+0x40>
     7ba:	5e c0       	rjmp	.+188    	; 0x878 <__stack+0x19>
		{
			case DIO_PORTA:
			PORTA &= ~(DIO_MASK_BIT << Copy_u8PinID);
     7bc:	81 e0       	ldi	r24, 0x01	; 1
     7be:	90 e0       	ldi	r25, 0x00	; 0
     7c0:	06 2e       	mov	r0, r22
     7c2:	02 c0       	rjmp	.+4      	; 0x7c8 <DIO_enuSetPinVal+0x30>
     7c4:	88 0f       	add	r24, r24
     7c6:	99 1f       	adc	r25, r25
     7c8:	0a 94       	dec	r0
     7ca:	e2 f7       	brpl	.-8      	; 0x7c4 <DIO_enuSetPinVal+0x2c>
     7cc:	80 95       	com	r24
     7ce:	2b b3       	in	r18, 0x1b	; 27
     7d0:	28 23       	and	r18, r24
			PORTA |=  (Copy_u8Value << Copy_u8PinID);
     7d2:	84 2f       	mov	r24, r20
     7d4:	90 e0       	ldi	r25, 0x00	; 0
     7d6:	02 c0       	rjmp	.+4      	; 0x7dc <DIO_enuSetPinVal+0x44>
     7d8:	88 0f       	add	r24, r24
     7da:	99 1f       	adc	r25, r25
     7dc:	6a 95       	dec	r22
     7de:	e2 f7       	brpl	.-8      	; 0x7d8 <DIO_enuSetPinVal+0x40>
     7e0:	82 2b       	or	r24, r18
     7e2:	8b bb       	out	0x1b, r24	; 27
			case DIO_PORTD:
			PORTD &= ~(DIO_MASK_BIT << Copy_u8PinID);
			PORTD |=  (Copy_u8Value << Copy_u8PinID);
			break;
		}
		Local_enuErrorState = ES_OK;
     7e4:	80 e0       	ldi	r24, 0x00	; 0
		switch(Copy_u8PortID)
		{
			case DIO_PORTA:
			PORTA &= ~(DIO_MASK_BIT << Copy_u8PinID);
			PORTA |=  (Copy_u8Value << Copy_u8PinID);
			break;
     7e6:	08 95       	ret
			
			case DIO_PORTB:
			PORTB &= ~(DIO_MASK_BIT << Copy_u8PinID);
     7e8:	21 e0       	ldi	r18, 0x01	; 1
     7ea:	30 e0       	ldi	r19, 0x00	; 0
     7ec:	06 2e       	mov	r0, r22
     7ee:	02 c0       	rjmp	.+4      	; 0x7f4 <DIO_enuSetPinVal+0x5c>
     7f0:	22 0f       	add	r18, r18
     7f2:	33 1f       	adc	r19, r19
     7f4:	0a 94       	dec	r0
     7f6:	e2 f7       	brpl	.-8      	; 0x7f0 <DIO_enuSetPinVal+0x58>
     7f8:	20 95       	com	r18
     7fa:	88 b3       	in	r24, 0x18	; 24
     7fc:	28 23       	and	r18, r24
			PORTB |=  (Copy_u8Value << Copy_u8PinID);
     7fe:	84 2f       	mov	r24, r20
     800:	90 e0       	ldi	r25, 0x00	; 0
     802:	02 c0       	rjmp	.+4      	; 0x808 <__DATA_REGION_LENGTH__+0x8>
     804:	88 0f       	add	r24, r24
     806:	99 1f       	adc	r25, r25
     808:	6a 95       	dec	r22
     80a:	e2 f7       	brpl	.-8      	; 0x804 <__DATA_REGION_LENGTH__+0x4>
     80c:	82 2b       	or	r24, r18
     80e:	88 bb       	out	0x18, r24	; 24
			case DIO_PORTD:
			PORTD &= ~(DIO_MASK_BIT << Copy_u8PinID);
			PORTD |=  (Copy_u8Value << Copy_u8PinID);
			break;
		}
		Local_enuErrorState = ES_OK;
     810:	80 e0       	ldi	r24, 0x00	; 0
			break;
			
			case DIO_PORTB:
			PORTB &= ~(DIO_MASK_BIT << Copy_u8PinID);
			PORTB |=  (Copy_u8Value << Copy_u8PinID);
			break;
     812:	08 95       	ret
			
			case DIO_PORTC:
			PORTC &= ~(DIO_MASK_BIT << Copy_u8PinID);
     814:	21 e0       	ldi	r18, 0x01	; 1
     816:	30 e0       	ldi	r19, 0x00	; 0
     818:	06 2e       	mov	r0, r22
     81a:	02 c0       	rjmp	.+4      	; 0x820 <__DATA_REGION_LENGTH__+0x20>
     81c:	22 0f       	add	r18, r18
     81e:	33 1f       	adc	r19, r19
     820:	0a 94       	dec	r0
     822:	e2 f7       	brpl	.-8      	; 0x81c <__DATA_REGION_LENGTH__+0x1c>
     824:	20 95       	com	r18
     826:	85 b3       	in	r24, 0x15	; 21
     828:	28 23       	and	r18, r24
			PORTC |=  (Copy_u8Value << Copy_u8PinID);
     82a:	84 2f       	mov	r24, r20
     82c:	90 e0       	ldi	r25, 0x00	; 0
     82e:	02 c0       	rjmp	.+4      	; 0x834 <__DATA_REGION_LENGTH__+0x34>
     830:	88 0f       	add	r24, r24
     832:	99 1f       	adc	r25, r25
     834:	6a 95       	dec	r22
     836:	e2 f7       	brpl	.-8      	; 0x830 <__DATA_REGION_LENGTH__+0x30>
     838:	82 2b       	or	r24, r18
     83a:	85 bb       	out	0x15, r24	; 21
			case DIO_PORTD:
			PORTD &= ~(DIO_MASK_BIT << Copy_u8PinID);
			PORTD |=  (Copy_u8Value << Copy_u8PinID);
			break;
		}
		Local_enuErrorState = ES_OK;
     83c:	80 e0       	ldi	r24, 0x00	; 0
			break;
			
			case DIO_PORTC:
			PORTC &= ~(DIO_MASK_BIT << Copy_u8PinID);
			PORTC |=  (Copy_u8Value << Copy_u8PinID);
			break;
     83e:	08 95       	ret
			
			case DIO_PORTD:
			PORTD &= ~(DIO_MASK_BIT << Copy_u8PinID);
     840:	21 e0       	ldi	r18, 0x01	; 1
     842:	30 e0       	ldi	r19, 0x00	; 0
     844:	06 2e       	mov	r0, r22
     846:	02 c0       	rjmp	.+4      	; 0x84c <__DATA_REGION_LENGTH__+0x4c>
     848:	22 0f       	add	r18, r18
     84a:	33 1f       	adc	r19, r19
     84c:	0a 94       	dec	r0
     84e:	e2 f7       	brpl	.-8      	; 0x848 <__DATA_REGION_LENGTH__+0x48>
     850:	20 95       	com	r18
     852:	82 b3       	in	r24, 0x12	; 18
     854:	28 23       	and	r18, r24
			PORTD |=  (Copy_u8Value << Copy_u8PinID);
     856:	84 2f       	mov	r24, r20
     858:	90 e0       	ldi	r25, 0x00	; 0
     85a:	02 c0       	rjmp	.+4      	; 0x860 <__stack+0x1>
     85c:	88 0f       	add	r24, r24
     85e:	99 1f       	adc	r25, r25
     860:	6a 95       	dec	r22
     862:	e2 f7       	brpl	.-8      	; 0x85c <__DATA_REGION_LENGTH__+0x5c>
     864:	82 2b       	or	r24, r18
     866:	82 bb       	out	0x12, r24	; 18
			break;
		}
		Local_enuErrorState = ES_OK;
     868:	80 e0       	ldi	r24, 0x00	; 0
			break;
			
			case DIO_PORTD:
			PORTD &= ~(DIO_MASK_BIT << Copy_u8PinID);
			PORTD |=  (Copy_u8Value << Copy_u8PinID);
			break;
     86a:	08 95       	ret
		}
		Local_enuErrorState = ES_OK;
	}
	else
	{
		Local_enuErrorState = ES_OUT_OF_RANGE;
     86c:	83 e0       	ldi	r24, 0x03	; 3
     86e:	08 95       	ret
     870:	83 e0       	ldi	r24, 0x03	; 3
     872:	08 95       	ret
     874:	83 e0       	ldi	r24, 0x03	; 3
     876:	08 95       	ret
			case DIO_PORTD:
			PORTD &= ~(DIO_MASK_BIT << Copy_u8PinID);
			PORTD |=  (Copy_u8Value << Copy_u8PinID);
			break;
		}
		Local_enuErrorState = ES_OK;
     878:	80 e0       	ldi	r24, 0x00	; 0
	{
		Local_enuErrorState = ES_OUT_OF_RANGE;
	}
	
	return Local_enuErrorState;
}
     87a:	08 95       	ret

0000087c <EXTI_enuInit>:
	{
		Local_enuErrorState = ES_NULL_POINTER;
	}
	
	return Local_enuErrorState;
}
     87c:	ac 01       	movw	r20, r24
     87e:	89 2b       	or	r24, r25
     880:	09 f0       	breq	.+2      	; 0x884 <EXTI_enuInit+0x8>
     882:	86 c0       	rjmp	.+268    	; 0x990 <EXTI_enuInit+0x114>
     884:	82 e0       	ldi	r24, 0x02	; 2
     886:	08 95       	ret
     888:	e9 2f       	mov	r30, r25
     88a:	f0 e0       	ldi	r31, 0x00	; 0
     88c:	9f 01       	movw	r18, r30
     88e:	22 0f       	add	r18, r18
     890:	33 1f       	adc	r19, r19
     892:	e2 0f       	add	r30, r18
     894:	f3 1f       	adc	r31, r19
     896:	e4 0f       	add	r30, r20
     898:	f5 1f       	adc	r31, r21
     89a:	20 81       	ld	r18, Z
     89c:	21 30       	cpi	r18, 0x01	; 1
     89e:	81 f1       	breq	.+96     	; 0x900 <EXTI_enuInit+0x84>
     8a0:	20 f0       	brcs	.+8      	; 0x8aa <EXTI_enuInit+0x2e>
     8a2:	22 30       	cpi	r18, 0x02	; 2
     8a4:	09 f4       	brne	.+2      	; 0x8a8 <EXTI_enuInit+0x2c>
     8a6:	57 c0       	rjmp	.+174    	; 0x956 <EXTI_enuInit+0xda>
     8a8:	6a c0       	rjmp	.+212    	; 0x97e <EXTI_enuInit+0x102>
     8aa:	21 81       	ldd	r18, Z+1	; 0x01
     8ac:	21 11       	cpse	r18, r1
     8ae:	6e c0       	rjmp	.+220    	; 0x98c <EXTI_enuInit+0x110>
     8b0:	25 b7       	in	r18, 0x35	; 53
     8b2:	2c 7f       	andi	r18, 0xFC	; 252
     8b4:	25 bf       	out	0x35, r18	; 53
     8b6:	22 81       	ldd	r18, Z+2	; 0x02
     8b8:	21 30       	cpi	r18, 0x01	; 1
     8ba:	69 f0       	breq	.+26     	; 0x8d6 <EXTI_enuInit+0x5a>
     8bc:	28 f0       	brcs	.+10     	; 0x8c8 <EXTI_enuInit+0x4c>
     8be:	22 30       	cpi	r18, 0x02	; 2
     8c0:	89 f0       	breq	.+34     	; 0x8e4 <EXTI_enuInit+0x68>
     8c2:	23 30       	cpi	r18, 0x03	; 3
     8c4:	b1 f0       	breq	.+44     	; 0x8f2 <EXTI_enuInit+0x76>
     8c6:	5d c0       	rjmp	.+186    	; 0x982 <EXTI_enuInit+0x106>
     8c8:	25 b7       	in	r18, 0x35	; 53
     8ca:	2e 7f       	andi	r18, 0xFE	; 254
     8cc:	25 bf       	out	0x35, r18	; 53
     8ce:	25 b7       	in	r18, 0x35	; 53
     8d0:	2d 7f       	andi	r18, 0xFD	; 253
     8d2:	25 bf       	out	0x35, r18	; 53
     8d4:	5b c0       	rjmp	.+182    	; 0x98c <EXTI_enuInit+0x110>
     8d6:	25 b7       	in	r18, 0x35	; 53
     8d8:	21 60       	ori	r18, 0x01	; 1
     8da:	25 bf       	out	0x35, r18	; 53
     8dc:	25 b7       	in	r18, 0x35	; 53
     8de:	2d 7f       	andi	r18, 0xFD	; 253
     8e0:	25 bf       	out	0x35, r18	; 53
     8e2:	54 c0       	rjmp	.+168    	; 0x98c <EXTI_enuInit+0x110>
     8e4:	25 b7       	in	r18, 0x35	; 53
     8e6:	2e 7f       	andi	r18, 0xFE	; 254
     8e8:	25 bf       	out	0x35, r18	; 53
     8ea:	25 b7       	in	r18, 0x35	; 53
     8ec:	22 60       	ori	r18, 0x02	; 2
     8ee:	25 bf       	out	0x35, r18	; 53
     8f0:	4d c0       	rjmp	.+154    	; 0x98c <EXTI_enuInit+0x110>
     8f2:	25 b7       	in	r18, 0x35	; 53
     8f4:	21 60       	ori	r18, 0x01	; 1
     8f6:	25 bf       	out	0x35, r18	; 53
     8f8:	25 b7       	in	r18, 0x35	; 53
     8fa:	22 60       	ori	r18, 0x02	; 2
     8fc:	25 bf       	out	0x35, r18	; 53
     8fe:	46 c0       	rjmp	.+140    	; 0x98c <EXTI_enuInit+0x110>
     900:	21 81       	ldd	r18, Z+1	; 0x01
     902:	21 11       	cpse	r18, r1
     904:	43 c0       	rjmp	.+134    	; 0x98c <EXTI_enuInit+0x110>
     906:	25 b7       	in	r18, 0x35	; 53
     908:	23 7f       	andi	r18, 0xF3	; 243
     90a:	25 bf       	out	0x35, r18	; 53
     90c:	22 81       	ldd	r18, Z+2	; 0x02
     90e:	21 30       	cpi	r18, 0x01	; 1
     910:	69 f0       	breq	.+26     	; 0x92c <EXTI_enuInit+0xb0>
     912:	28 f0       	brcs	.+10     	; 0x91e <EXTI_enuInit+0xa2>
     914:	22 30       	cpi	r18, 0x02	; 2
     916:	89 f0       	breq	.+34     	; 0x93a <EXTI_enuInit+0xbe>
     918:	23 30       	cpi	r18, 0x03	; 3
     91a:	b1 f0       	breq	.+44     	; 0x948 <EXTI_enuInit+0xcc>
     91c:	34 c0       	rjmp	.+104    	; 0x986 <EXTI_enuInit+0x10a>
     91e:	25 b7       	in	r18, 0x35	; 53
     920:	2b 7f       	andi	r18, 0xFB	; 251
     922:	25 bf       	out	0x35, r18	; 53
     924:	25 b7       	in	r18, 0x35	; 53
     926:	27 7f       	andi	r18, 0xF7	; 247
     928:	25 bf       	out	0x35, r18	; 53
     92a:	30 c0       	rjmp	.+96     	; 0x98c <EXTI_enuInit+0x110>
     92c:	25 b7       	in	r18, 0x35	; 53
     92e:	24 60       	ori	r18, 0x04	; 4
     930:	25 bf       	out	0x35, r18	; 53
     932:	25 b7       	in	r18, 0x35	; 53
     934:	27 7f       	andi	r18, 0xF7	; 247
     936:	25 bf       	out	0x35, r18	; 53
     938:	29 c0       	rjmp	.+82     	; 0x98c <EXTI_enuInit+0x110>
     93a:	25 b7       	in	r18, 0x35	; 53
     93c:	2b 7f       	andi	r18, 0xFB	; 251
     93e:	25 bf       	out	0x35, r18	; 53
     940:	25 b7       	in	r18, 0x35	; 53
     942:	28 60       	ori	r18, 0x08	; 8
     944:	25 bf       	out	0x35, r18	; 53
     946:	22 c0       	rjmp	.+68     	; 0x98c <EXTI_enuInit+0x110>
     948:	25 b7       	in	r18, 0x35	; 53
     94a:	24 60       	ori	r18, 0x04	; 4
     94c:	25 bf       	out	0x35, r18	; 53
     94e:	25 b7       	in	r18, 0x35	; 53
     950:	28 60       	ori	r18, 0x08	; 8
     952:	25 bf       	out	0x35, r18	; 53
     954:	1b c0       	rjmp	.+54     	; 0x98c <EXTI_enuInit+0x110>
     956:	21 81       	ldd	r18, Z+1	; 0x01
     958:	21 11       	cpse	r18, r1
     95a:	18 c0       	rjmp	.+48     	; 0x98c <EXTI_enuInit+0x110>
     95c:	24 b7       	in	r18, 0x34	; 52
     95e:	2f 7b       	andi	r18, 0xBF	; 191
     960:	24 bf       	out	0x34, r18	; 52
     962:	22 81       	ldd	r18, Z+2	; 0x02
     964:	22 30       	cpi	r18, 0x02	; 2
     966:	19 f0       	breq	.+6      	; 0x96e <EXTI_enuInit+0xf2>
     968:	23 30       	cpi	r18, 0x03	; 3
     96a:	29 f0       	breq	.+10     	; 0x976 <EXTI_enuInit+0xfa>
     96c:	0e c0       	rjmp	.+28     	; 0x98a <EXTI_enuInit+0x10e>
     96e:	24 b7       	in	r18, 0x34	; 52
     970:	2f 7b       	andi	r18, 0xBF	; 191
     972:	24 bf       	out	0x34, r18	; 52
     974:	0b c0       	rjmp	.+22     	; 0x98c <EXTI_enuInit+0x110>
     976:	24 b7       	in	r18, 0x34	; 52
     978:	20 64       	ori	r18, 0x40	; 64
     97a:	24 bf       	out	0x34, r18	; 52
     97c:	07 c0       	rjmp	.+14     	; 0x98c <EXTI_enuInit+0x110>
     97e:	83 e0       	ldi	r24, 0x03	; 3
     980:	05 c0       	rjmp	.+10     	; 0x98c <EXTI_enuInit+0x110>
     982:	83 e0       	ldi	r24, 0x03	; 3
     984:	03 c0       	rjmp	.+6      	; 0x98c <EXTI_enuInit+0x110>
     986:	83 e0       	ldi	r24, 0x03	; 3
     988:	01 c0       	rjmp	.+2      	; 0x98c <EXTI_enuInit+0x110>
     98a:	83 e0       	ldi	r24, 0x03	; 3
     98c:	9f 5f       	subi	r25, 0xFF	; 255
     98e:	02 c0       	rjmp	.+4      	; 0x994 <EXTI_enuInit+0x118>
     990:	90 e0       	ldi	r25, 0x00	; 0
     992:	81 e0       	ldi	r24, 0x01	; 1
     994:	93 30       	cpi	r25, 0x03	; 3
     996:	08 f4       	brcc	.+2      	; 0x99a <EXTI_enuInit+0x11e>
     998:	77 cf       	rjmp	.-274    	; 0x888 <EXTI_enuInit+0xc>
     99a:	08 95       	ret

0000099c <EXTI_enuChange_Control_State>:
     99c:	83 30       	cpi	r24, 0x03	; 3
     99e:	08 f0       	brcs	.+2      	; 0x9a2 <EXTI_enuChange_Control_State+0x6>
     9a0:	6f c0       	rjmp	.+222    	; 0xa80 <EXTI_enuChange_Control_State+0xe4>
     9a2:	81 30       	cpi	r24, 0x01	; 1
     9a4:	81 f1       	breq	.+96     	; 0xa06 <EXTI_enuChange_Control_State+0x6a>
     9a6:	20 f0       	brcs	.+8      	; 0x9b0 <EXTI_enuChange_Control_State+0x14>
     9a8:	82 30       	cpi	r24, 0x02	; 2
     9aa:	09 f4       	brne	.+2      	; 0x9ae <EXTI_enuChange_Control_State+0x12>
     9ac:	57 c0       	rjmp	.+174    	; 0xa5c <EXTI_enuChange_Control_State+0xc0>
     9ae:	6a c0       	rjmp	.+212    	; 0xa84 <EXTI_enuChange_Control_State+0xe8>
     9b0:	85 b7       	in	r24, 0x35	; 53
     9b2:	8c 7f       	andi	r24, 0xFC	; 252
     9b4:	85 bf       	out	0x35, r24	; 53
     9b6:	61 30       	cpi	r22, 0x01	; 1
     9b8:	71 f0       	breq	.+28     	; 0x9d6 <EXTI_enuChange_Control_State+0x3a>
     9ba:	28 f0       	brcs	.+10     	; 0x9c6 <EXTI_enuChange_Control_State+0x2a>
     9bc:	62 30       	cpi	r22, 0x02	; 2
     9be:	99 f0       	breq	.+38     	; 0x9e6 <EXTI_enuChange_Control_State+0x4a>
     9c0:	63 30       	cpi	r22, 0x03	; 3
     9c2:	c9 f0       	breq	.+50     	; 0x9f6 <EXTI_enuChange_Control_State+0x5a>
     9c4:	61 c0       	rjmp	.+194    	; 0xa88 <EXTI_enuChange_Control_State+0xec>
     9c6:	85 b7       	in	r24, 0x35	; 53
     9c8:	8e 7f       	andi	r24, 0xFE	; 254
     9ca:	85 bf       	out	0x35, r24	; 53
     9cc:	85 b7       	in	r24, 0x35	; 53
     9ce:	8d 7f       	andi	r24, 0xFD	; 253
     9d0:	85 bf       	out	0x35, r24	; 53
     9d2:	81 e0       	ldi	r24, 0x01	; 1
     9d4:	08 95       	ret
     9d6:	85 b7       	in	r24, 0x35	; 53
     9d8:	81 60       	ori	r24, 0x01	; 1
     9da:	85 bf       	out	0x35, r24	; 53
     9dc:	85 b7       	in	r24, 0x35	; 53
     9de:	8d 7f       	andi	r24, 0xFD	; 253
     9e0:	85 bf       	out	0x35, r24	; 53
     9e2:	81 e0       	ldi	r24, 0x01	; 1
     9e4:	08 95       	ret
     9e6:	85 b7       	in	r24, 0x35	; 53
     9e8:	8e 7f       	andi	r24, 0xFE	; 254
     9ea:	85 bf       	out	0x35, r24	; 53
     9ec:	85 b7       	in	r24, 0x35	; 53
     9ee:	82 60       	ori	r24, 0x02	; 2
     9f0:	85 bf       	out	0x35, r24	; 53
     9f2:	81 e0       	ldi	r24, 0x01	; 1
     9f4:	08 95       	ret
     9f6:	85 b7       	in	r24, 0x35	; 53
     9f8:	81 60       	ori	r24, 0x01	; 1
     9fa:	85 bf       	out	0x35, r24	; 53
     9fc:	85 b7       	in	r24, 0x35	; 53
     9fe:	82 60       	ori	r24, 0x02	; 2
     a00:	85 bf       	out	0x35, r24	; 53
     a02:	81 e0       	ldi	r24, 0x01	; 1
     a04:	08 95       	ret
     a06:	85 b7       	in	r24, 0x35	; 53
     a08:	83 7f       	andi	r24, 0xF3	; 243
     a0a:	85 bf       	out	0x35, r24	; 53
     a0c:	61 30       	cpi	r22, 0x01	; 1
     a0e:	71 f0       	breq	.+28     	; 0xa2c <EXTI_enuChange_Control_State+0x90>
     a10:	28 f0       	brcs	.+10     	; 0xa1c <EXTI_enuChange_Control_State+0x80>
     a12:	62 30       	cpi	r22, 0x02	; 2
     a14:	99 f0       	breq	.+38     	; 0xa3c <EXTI_enuChange_Control_State+0xa0>
     a16:	63 30       	cpi	r22, 0x03	; 3
     a18:	c9 f0       	breq	.+50     	; 0xa4c <EXTI_enuChange_Control_State+0xb0>
     a1a:	38 c0       	rjmp	.+112    	; 0xa8c <EXTI_enuChange_Control_State+0xf0>
     a1c:	85 b7       	in	r24, 0x35	; 53
     a1e:	8b 7f       	andi	r24, 0xFB	; 251
     a20:	85 bf       	out	0x35, r24	; 53
     a22:	85 b7       	in	r24, 0x35	; 53
     a24:	87 7f       	andi	r24, 0xF7	; 247
     a26:	85 bf       	out	0x35, r24	; 53
     a28:	81 e0       	ldi	r24, 0x01	; 1
     a2a:	08 95       	ret
     a2c:	85 b7       	in	r24, 0x35	; 53
     a2e:	84 60       	ori	r24, 0x04	; 4
     a30:	85 bf       	out	0x35, r24	; 53
     a32:	85 b7       	in	r24, 0x35	; 53
     a34:	87 7f       	andi	r24, 0xF7	; 247
     a36:	85 bf       	out	0x35, r24	; 53
     a38:	81 e0       	ldi	r24, 0x01	; 1
     a3a:	08 95       	ret
     a3c:	85 b7       	in	r24, 0x35	; 53
     a3e:	8b 7f       	andi	r24, 0xFB	; 251
     a40:	85 bf       	out	0x35, r24	; 53
     a42:	85 b7       	in	r24, 0x35	; 53
     a44:	88 60       	ori	r24, 0x08	; 8
     a46:	85 bf       	out	0x35, r24	; 53
     a48:	81 e0       	ldi	r24, 0x01	; 1
     a4a:	08 95       	ret
     a4c:	85 b7       	in	r24, 0x35	; 53
     a4e:	84 60       	ori	r24, 0x04	; 4
     a50:	85 bf       	out	0x35, r24	; 53
     a52:	85 b7       	in	r24, 0x35	; 53
     a54:	88 60       	ori	r24, 0x08	; 8
     a56:	85 bf       	out	0x35, r24	; 53
     a58:	81 e0       	ldi	r24, 0x01	; 1
     a5a:	08 95       	ret
     a5c:	84 b7       	in	r24, 0x34	; 52
     a5e:	8f 7b       	andi	r24, 0xBF	; 191
     a60:	84 bf       	out	0x34, r24	; 52
     a62:	62 30       	cpi	r22, 0x02	; 2
     a64:	19 f0       	breq	.+6      	; 0xa6c <EXTI_enuChange_Control_State+0xd0>
     a66:	63 30       	cpi	r22, 0x03	; 3
     a68:	31 f0       	breq	.+12     	; 0xa76 <EXTI_enuChange_Control_State+0xda>
     a6a:	12 c0       	rjmp	.+36     	; 0xa90 <EXTI_enuChange_Control_State+0xf4>
     a6c:	84 b7       	in	r24, 0x34	; 52
     a6e:	8f 7b       	andi	r24, 0xBF	; 191
     a70:	84 bf       	out	0x34, r24	; 52
     a72:	81 e0       	ldi	r24, 0x01	; 1
     a74:	08 95       	ret
     a76:	84 b7       	in	r24, 0x34	; 52
     a78:	80 64       	ori	r24, 0x40	; 64
     a7a:	84 bf       	out	0x34, r24	; 52
     a7c:	81 e0       	ldi	r24, 0x01	; 1
     a7e:	08 95       	ret
     a80:	83 e0       	ldi	r24, 0x03	; 3
     a82:	08 95       	ret
     a84:	83 e0       	ldi	r24, 0x03	; 3
     a86:	08 95       	ret
     a88:	83 e0       	ldi	r24, 0x03	; 3
     a8a:	08 95       	ret
     a8c:	83 e0       	ldi	r24, 0x03	; 3
     a8e:	08 95       	ret
     a90:	83 e0       	ldi	r24, 0x03	; 3
     a92:	08 95       	ret

00000a94 <EXTI_enuEnable>:
     a94:	83 30       	cpi	r24, 0x03	; 3
     a96:	f0 f4       	brcc	.+60     	; 0xad4 <EXTI_enuEnable+0x40>
     a98:	81 30       	cpi	r24, 0x01	; 1
     a9a:	61 f0       	breq	.+24     	; 0xab4 <EXTI_enuEnable+0x20>
     a9c:	18 f0       	brcs	.+6      	; 0xaa4 <EXTI_enuEnable+0x10>
     a9e:	82 30       	cpi	r24, 0x02	; 2
     aa0:	89 f0       	breq	.+34     	; 0xac4 <EXTI_enuEnable+0x30>
     aa2:	1a c0       	rjmp	.+52     	; 0xad8 <EXTI_enuEnable+0x44>
     aa4:	8b b7       	in	r24, 0x3b	; 59
     aa6:	8f 7b       	andi	r24, 0xBF	; 191
     aa8:	8b bf       	out	0x3b, r24	; 59
     aaa:	8b b7       	in	r24, 0x3b	; 59
     aac:	80 64       	ori	r24, 0x40	; 64
     aae:	8b bf       	out	0x3b, r24	; 59
     ab0:	81 e0       	ldi	r24, 0x01	; 1
     ab2:	08 95       	ret
     ab4:	8b b7       	in	r24, 0x3b	; 59
     ab6:	8f 77       	andi	r24, 0x7F	; 127
     ab8:	8b bf       	out	0x3b, r24	; 59
     aba:	8b b7       	in	r24, 0x3b	; 59
     abc:	80 68       	ori	r24, 0x80	; 128
     abe:	8b bf       	out	0x3b, r24	; 59
     ac0:	81 e0       	ldi	r24, 0x01	; 1
     ac2:	08 95       	ret
     ac4:	8b b7       	in	r24, 0x3b	; 59
     ac6:	8f 7d       	andi	r24, 0xDF	; 223
     ac8:	8b bf       	out	0x3b, r24	; 59
     aca:	8b b7       	in	r24, 0x3b	; 59
     acc:	80 62       	ori	r24, 0x20	; 32
     ace:	8b bf       	out	0x3b, r24	; 59
     ad0:	81 e0       	ldi	r24, 0x01	; 1
     ad2:	08 95       	ret
     ad4:	83 e0       	ldi	r24, 0x03	; 3
     ad6:	08 95       	ret
     ad8:	81 e0       	ldi	r24, 0x01	; 1
     ada:	08 95       	ret

00000adc <__vector_1>:

/* ISR for EXTI0 */
ISR(VECT_INT0)
{	
     adc:	1f 92       	push	r1
     ade:	0f 92       	push	r0
     ae0:	0f b6       	in	r0, 0x3f	; 63
     ae2:	0f 92       	push	r0
     ae4:	11 24       	eor	r1, r1
     ae6:	2f 93       	push	r18
     ae8:	3f 93       	push	r19
     aea:	4f 93       	push	r20
     aec:	5f 93       	push	r21
     aee:	6f 93       	push	r22
     af0:	7f 93       	push	r23
     af2:	8f 93       	push	r24
     af4:	9f 93       	push	r25
     af6:	af 93       	push	r26
     af8:	bf 93       	push	r27
     afa:	ef 93       	push	r30
     afc:	ff 93       	push	r31
	if(EXTI_APFunc[EXTI0] != NULL)
     afe:	e0 91 77 00 	lds	r30, 0x0077	; 0x800077 <EXTI_APFunc>
     b02:	f0 91 78 00 	lds	r31, 0x0078	; 0x800078 <EXTI_APFunc+0x1>
     b06:	30 97       	sbiw	r30, 0x00	; 0
     b08:	29 f0       	breq	.+10     	; 0xb14 <__vector_1+0x38>
	{
		EXTI_APFunc[EXTI0](EXTI_APvidGenericParameters[EXTI0]);
     b0a:	80 91 71 00 	lds	r24, 0x0071	; 0x800071 <EXTI_APvidGenericParameters>
     b0e:	90 91 72 00 	lds	r25, 0x0072	; 0x800072 <EXTI_APvidGenericParameters+0x1>
     b12:	09 95       	icall
	}
}
     b14:	ff 91       	pop	r31
     b16:	ef 91       	pop	r30
     b18:	bf 91       	pop	r27
     b1a:	af 91       	pop	r26
     b1c:	9f 91       	pop	r25
     b1e:	8f 91       	pop	r24
     b20:	7f 91       	pop	r23
     b22:	6f 91       	pop	r22
     b24:	5f 91       	pop	r21
     b26:	4f 91       	pop	r20
     b28:	3f 91       	pop	r19
     b2a:	2f 91       	pop	r18
     b2c:	0f 90       	pop	r0
     b2e:	0f be       	out	0x3f, r0	; 63
     b30:	0f 90       	pop	r0
     b32:	1f 90       	pop	r1
     b34:	18 95       	reti

00000b36 <__vector_2>:

/* ISR for EXTI1 */
ISR(VECT_INT1)
{
     b36:	1f 92       	push	r1
     b38:	0f 92       	push	r0
     b3a:	0f b6       	in	r0, 0x3f	; 63
     b3c:	0f 92       	push	r0
     b3e:	11 24       	eor	r1, r1
     b40:	2f 93       	push	r18
     b42:	3f 93       	push	r19
     b44:	4f 93       	push	r20
     b46:	5f 93       	push	r21
     b48:	6f 93       	push	r22
     b4a:	7f 93       	push	r23
     b4c:	8f 93       	push	r24
     b4e:	9f 93       	push	r25
     b50:	af 93       	push	r26
     b52:	bf 93       	push	r27
     b54:	ef 93       	push	r30
     b56:	ff 93       	push	r31
	if(EXTI_APFunc[EXTI1] != NULL)
     b58:	e0 91 79 00 	lds	r30, 0x0079	; 0x800079 <EXTI_APFunc+0x2>
     b5c:	f0 91 7a 00 	lds	r31, 0x007A	; 0x80007a <EXTI_APFunc+0x3>
     b60:	30 97       	sbiw	r30, 0x00	; 0
     b62:	29 f0       	breq	.+10     	; 0xb6e <__vector_2+0x38>
	{
		EXTI_APFunc[EXTI1](EXTI_APvidGenericParameters[EXTI1]);
     b64:	80 91 73 00 	lds	r24, 0x0073	; 0x800073 <EXTI_APvidGenericParameters+0x2>
     b68:	90 91 74 00 	lds	r25, 0x0074	; 0x800074 <EXTI_APvidGenericParameters+0x3>
     b6c:	09 95       	icall
	}
}
     b6e:	ff 91       	pop	r31
     b70:	ef 91       	pop	r30
     b72:	bf 91       	pop	r27
     b74:	af 91       	pop	r26
     b76:	9f 91       	pop	r25
     b78:	8f 91       	pop	r24
     b7a:	7f 91       	pop	r23
     b7c:	6f 91       	pop	r22
     b7e:	5f 91       	pop	r21
     b80:	4f 91       	pop	r20
     b82:	3f 91       	pop	r19
     b84:	2f 91       	pop	r18
     b86:	0f 90       	pop	r0
     b88:	0f be       	out	0x3f, r0	; 63
     b8a:	0f 90       	pop	r0
     b8c:	1f 90       	pop	r1
     b8e:	18 95       	reti

00000b90 <__vector_3>:

/* ISR for EXTI2 */
ISR(VECT_INT2)
{	
     b90:	1f 92       	push	r1
     b92:	0f 92       	push	r0
     b94:	0f b6       	in	r0, 0x3f	; 63
     b96:	0f 92       	push	r0
     b98:	11 24       	eor	r1, r1
     b9a:	2f 93       	push	r18
     b9c:	3f 93       	push	r19
     b9e:	4f 93       	push	r20
     ba0:	5f 93       	push	r21
     ba2:	6f 93       	push	r22
     ba4:	7f 93       	push	r23
     ba6:	8f 93       	push	r24
     ba8:	9f 93       	push	r25
     baa:	af 93       	push	r26
     bac:	bf 93       	push	r27
     bae:	ef 93       	push	r30
     bb0:	ff 93       	push	r31
	if(EXTI_APFunc[EXTI2] != NULL)
     bb2:	e0 91 7b 00 	lds	r30, 0x007B	; 0x80007b <EXTI_APFunc+0x4>
     bb6:	f0 91 7c 00 	lds	r31, 0x007C	; 0x80007c <EXTI_APFunc+0x5>
     bba:	30 97       	sbiw	r30, 0x00	; 0
     bbc:	29 f0       	breq	.+10     	; 0xbc8 <__vector_3+0x38>
	{
		EXTI_APFunc[EXTI2](EXTI_APvidGenericParameters[EXTI2]);
     bbe:	80 91 75 00 	lds	r24, 0x0075	; 0x800075 <EXTI_APvidGenericParameters+0x4>
     bc2:	90 91 76 00 	lds	r25, 0x0076	; 0x800076 <EXTI_APvidGenericParameters+0x5>
     bc6:	09 95       	icall
	}
     bc8:	ff 91       	pop	r31
     bca:	ef 91       	pop	r30
     bcc:	bf 91       	pop	r27
     bce:	af 91       	pop	r26
     bd0:	9f 91       	pop	r25
     bd2:	8f 91       	pop	r24
     bd4:	7f 91       	pop	r23
     bd6:	6f 91       	pop	r22
     bd8:	5f 91       	pop	r21
     bda:	4f 91       	pop	r20
     bdc:	3f 91       	pop	r19
     bde:	2f 91       	pop	r18
     be0:	0f 90       	pop	r0
     be2:	0f be       	out	0x3f, r0	; 63
     be4:	0f 90       	pop	r0
     be6:	1f 90       	pop	r1
     be8:	18 95       	reti

00000bea <GIE_enuGloable_Interrupt_Enable>:

ES_t GIE_enuGloable_Interrupt_Enable(void)
{
	ES_t Local_enuErrorState = ES_NOK;
	
	SREG &= ~(MASK_BIT << GIE_I);
     bea:	8f b7       	in	r24, 0x3f	; 63
     bec:	8f 77       	andi	r24, 0x7F	; 127
     bee:	8f bf       	out	0x3f, r24	; 63
	SREG |= (MASK_BIT << GIE_I);
     bf0:	8f b7       	in	r24, 0x3f	; 63
     bf2:	80 68       	ori	r24, 0x80	; 128
     bf4:	8f bf       	out	0x3f, r24	; 63
	Local_enuErrorState = ES_OK;
	
	return Local_enuErrorState;
}
     bf6:	80 e0       	ldi	r24, 0x00	; 0
     bf8:	08 95       	ret

00000bfa <__tablejump2__>:
     bfa:	ee 0f       	add	r30, r30
     bfc:	ff 1f       	adc	r31, r31
     bfe:	05 90       	lpm	r0, Z+
     c00:	f4 91       	lpm	r31, Z
     c02:	e0 2d       	mov	r30, r0
     c04:	09 94       	ijmp

00000c06 <sprintf>:
     c06:	ae e0       	ldi	r26, 0x0E	; 14
     c08:	b0 e0       	ldi	r27, 0x00	; 0
     c0a:	e9 e0       	ldi	r30, 0x09	; 9
     c0c:	f6 e0       	ldi	r31, 0x06	; 6
     c0e:	0c 94 c4 08 	jmp	0x1188	; 0x1188 <__prologue_saves__+0x1c>
     c12:	0d 89       	ldd	r16, Y+21	; 0x15
     c14:	1e 89       	ldd	r17, Y+22	; 0x16
     c16:	86 e0       	ldi	r24, 0x06	; 6
     c18:	8c 83       	std	Y+4, r24	; 0x04
     c1a:	1a 83       	std	Y+2, r17	; 0x02
     c1c:	09 83       	std	Y+1, r16	; 0x01
     c1e:	8f ef       	ldi	r24, 0xFF	; 255
     c20:	9f e7       	ldi	r25, 0x7F	; 127
     c22:	9e 83       	std	Y+6, r25	; 0x06
     c24:	8d 83       	std	Y+5, r24	; 0x05
     c26:	ae 01       	movw	r20, r28
     c28:	47 5e       	subi	r20, 0xE7	; 231
     c2a:	5f 4f       	sbci	r21, 0xFF	; 255
     c2c:	6f 89       	ldd	r22, Y+23	; 0x17
     c2e:	78 8d       	ldd	r23, Y+24	; 0x18
     c30:	ce 01       	movw	r24, r28
     c32:	01 96       	adiw	r24, 0x01	; 1
     c34:	0e 94 25 06 	call	0xc4a	; 0xc4a <vfprintf>
     c38:	ef 81       	ldd	r30, Y+7	; 0x07
     c3a:	f8 85       	ldd	r31, Y+8	; 0x08
     c3c:	e0 0f       	add	r30, r16
     c3e:	f1 1f       	adc	r31, r17
     c40:	10 82       	st	Z, r1
     c42:	2e 96       	adiw	r28, 0x0e	; 14
     c44:	e4 e0       	ldi	r30, 0x04	; 4
     c46:	0c 94 e0 08 	jmp	0x11c0	; 0x11c0 <__epilogue_restores__+0x1c>

00000c4a <vfprintf>:
     c4a:	ab e0       	ldi	r26, 0x0B	; 11
     c4c:	b0 e0       	ldi	r27, 0x00	; 0
     c4e:	eb e2       	ldi	r30, 0x2B	; 43
     c50:	f6 e0       	ldi	r31, 0x06	; 6
     c52:	0c 94 b6 08 	jmp	0x116c	; 0x116c <__prologue_saves__>
     c56:	6c 01       	movw	r12, r24
     c58:	7b 01       	movw	r14, r22
     c5a:	8a 01       	movw	r16, r20
     c5c:	fc 01       	movw	r30, r24
     c5e:	17 82       	std	Z+7, r1	; 0x07
     c60:	16 82       	std	Z+6, r1	; 0x06
     c62:	83 81       	ldd	r24, Z+3	; 0x03
     c64:	81 ff       	sbrs	r24, 1
     c66:	cc c1       	rjmp	.+920    	; 0x1000 <vfprintf+0x3b6>
     c68:	ce 01       	movw	r24, r28
     c6a:	01 96       	adiw	r24, 0x01	; 1
     c6c:	3c 01       	movw	r6, r24
     c6e:	f6 01       	movw	r30, r12
     c70:	93 81       	ldd	r25, Z+3	; 0x03
     c72:	f7 01       	movw	r30, r14
     c74:	93 fd       	sbrc	r25, 3
     c76:	85 91       	lpm	r24, Z+
     c78:	93 ff       	sbrs	r25, 3
     c7a:	81 91       	ld	r24, Z+
     c7c:	7f 01       	movw	r14, r30
     c7e:	88 23       	and	r24, r24
     c80:	09 f4       	brne	.+2      	; 0xc84 <vfprintf+0x3a>
     c82:	ba c1       	rjmp	.+884    	; 0xff8 <vfprintf+0x3ae>
     c84:	85 32       	cpi	r24, 0x25	; 37
     c86:	39 f4       	brne	.+14     	; 0xc96 <vfprintf+0x4c>
     c88:	93 fd       	sbrc	r25, 3
     c8a:	85 91       	lpm	r24, Z+
     c8c:	93 ff       	sbrs	r25, 3
     c8e:	81 91       	ld	r24, Z+
     c90:	7f 01       	movw	r14, r30
     c92:	85 32       	cpi	r24, 0x25	; 37
     c94:	29 f4       	brne	.+10     	; 0xca0 <vfprintf+0x56>
     c96:	b6 01       	movw	r22, r12
     c98:	90 e0       	ldi	r25, 0x00	; 0
     c9a:	0e 94 1c 08 	call	0x1038	; 0x1038 <fputc>
     c9e:	e7 cf       	rjmp	.-50     	; 0xc6e <vfprintf+0x24>
     ca0:	91 2c       	mov	r9, r1
     ca2:	21 2c       	mov	r2, r1
     ca4:	31 2c       	mov	r3, r1
     ca6:	ff e1       	ldi	r31, 0x1F	; 31
     ca8:	f3 15       	cp	r31, r3
     caa:	d8 f0       	brcs	.+54     	; 0xce2 <vfprintf+0x98>
     cac:	8b 32       	cpi	r24, 0x2B	; 43
     cae:	79 f0       	breq	.+30     	; 0xcce <vfprintf+0x84>
     cb0:	38 f4       	brcc	.+14     	; 0xcc0 <vfprintf+0x76>
     cb2:	80 32       	cpi	r24, 0x20	; 32
     cb4:	79 f0       	breq	.+30     	; 0xcd4 <vfprintf+0x8a>
     cb6:	83 32       	cpi	r24, 0x23	; 35
     cb8:	a1 f4       	brne	.+40     	; 0xce2 <vfprintf+0x98>
     cba:	23 2d       	mov	r18, r3
     cbc:	20 61       	ori	r18, 0x10	; 16
     cbe:	1d c0       	rjmp	.+58     	; 0xcfa <vfprintf+0xb0>
     cc0:	8d 32       	cpi	r24, 0x2D	; 45
     cc2:	61 f0       	breq	.+24     	; 0xcdc <vfprintf+0x92>
     cc4:	80 33       	cpi	r24, 0x30	; 48
     cc6:	69 f4       	brne	.+26     	; 0xce2 <vfprintf+0x98>
     cc8:	23 2d       	mov	r18, r3
     cca:	21 60       	ori	r18, 0x01	; 1
     ccc:	16 c0       	rjmp	.+44     	; 0xcfa <vfprintf+0xb0>
     cce:	83 2d       	mov	r24, r3
     cd0:	82 60       	ori	r24, 0x02	; 2
     cd2:	38 2e       	mov	r3, r24
     cd4:	e3 2d       	mov	r30, r3
     cd6:	e4 60       	ori	r30, 0x04	; 4
     cd8:	3e 2e       	mov	r3, r30
     cda:	2a c0       	rjmp	.+84     	; 0xd30 <vfprintf+0xe6>
     cdc:	f3 2d       	mov	r31, r3
     cde:	f8 60       	ori	r31, 0x08	; 8
     ce0:	1d c0       	rjmp	.+58     	; 0xd1c <vfprintf+0xd2>
     ce2:	37 fc       	sbrc	r3, 7
     ce4:	2d c0       	rjmp	.+90     	; 0xd40 <vfprintf+0xf6>
     ce6:	20 ed       	ldi	r18, 0xD0	; 208
     ce8:	28 0f       	add	r18, r24
     cea:	2a 30       	cpi	r18, 0x0A	; 10
     cec:	40 f0       	brcs	.+16     	; 0xcfe <vfprintf+0xb4>
     cee:	8e 32       	cpi	r24, 0x2E	; 46
     cf0:	b9 f4       	brne	.+46     	; 0xd20 <vfprintf+0xd6>
     cf2:	36 fc       	sbrc	r3, 6
     cf4:	81 c1       	rjmp	.+770    	; 0xff8 <vfprintf+0x3ae>
     cf6:	23 2d       	mov	r18, r3
     cf8:	20 64       	ori	r18, 0x40	; 64
     cfa:	32 2e       	mov	r3, r18
     cfc:	19 c0       	rjmp	.+50     	; 0xd30 <vfprintf+0xe6>
     cfe:	36 fe       	sbrs	r3, 6
     d00:	06 c0       	rjmp	.+12     	; 0xd0e <vfprintf+0xc4>
     d02:	8a e0       	ldi	r24, 0x0A	; 10
     d04:	98 9e       	mul	r9, r24
     d06:	20 0d       	add	r18, r0
     d08:	11 24       	eor	r1, r1
     d0a:	92 2e       	mov	r9, r18
     d0c:	11 c0       	rjmp	.+34     	; 0xd30 <vfprintf+0xe6>
     d0e:	ea e0       	ldi	r30, 0x0A	; 10
     d10:	2e 9e       	mul	r2, r30
     d12:	20 0d       	add	r18, r0
     d14:	11 24       	eor	r1, r1
     d16:	22 2e       	mov	r2, r18
     d18:	f3 2d       	mov	r31, r3
     d1a:	f0 62       	ori	r31, 0x20	; 32
     d1c:	3f 2e       	mov	r3, r31
     d1e:	08 c0       	rjmp	.+16     	; 0xd30 <vfprintf+0xe6>
     d20:	8c 36       	cpi	r24, 0x6C	; 108
     d22:	21 f4       	brne	.+8      	; 0xd2c <vfprintf+0xe2>
     d24:	83 2d       	mov	r24, r3
     d26:	80 68       	ori	r24, 0x80	; 128
     d28:	38 2e       	mov	r3, r24
     d2a:	02 c0       	rjmp	.+4      	; 0xd30 <vfprintf+0xe6>
     d2c:	88 36       	cpi	r24, 0x68	; 104
     d2e:	41 f4       	brne	.+16     	; 0xd40 <vfprintf+0xf6>
     d30:	f7 01       	movw	r30, r14
     d32:	93 fd       	sbrc	r25, 3
     d34:	85 91       	lpm	r24, Z+
     d36:	93 ff       	sbrs	r25, 3
     d38:	81 91       	ld	r24, Z+
     d3a:	7f 01       	movw	r14, r30
     d3c:	81 11       	cpse	r24, r1
     d3e:	b3 cf       	rjmp	.-154    	; 0xca6 <vfprintf+0x5c>
     d40:	98 2f       	mov	r25, r24
     d42:	9f 7d       	andi	r25, 0xDF	; 223
     d44:	95 54       	subi	r25, 0x45	; 69
     d46:	93 30       	cpi	r25, 0x03	; 3
     d48:	28 f4       	brcc	.+10     	; 0xd54 <vfprintf+0x10a>
     d4a:	0c 5f       	subi	r16, 0xFC	; 252
     d4c:	1f 4f       	sbci	r17, 0xFF	; 255
     d4e:	9f e3       	ldi	r25, 0x3F	; 63
     d50:	99 83       	std	Y+1, r25	; 0x01
     d52:	0d c0       	rjmp	.+26     	; 0xd6e <vfprintf+0x124>
     d54:	83 36       	cpi	r24, 0x63	; 99
     d56:	31 f0       	breq	.+12     	; 0xd64 <vfprintf+0x11a>
     d58:	83 37       	cpi	r24, 0x73	; 115
     d5a:	71 f0       	breq	.+28     	; 0xd78 <vfprintf+0x12e>
     d5c:	83 35       	cpi	r24, 0x53	; 83
     d5e:	09 f0       	breq	.+2      	; 0xd62 <vfprintf+0x118>
     d60:	59 c0       	rjmp	.+178    	; 0xe14 <vfprintf+0x1ca>
     d62:	21 c0       	rjmp	.+66     	; 0xda6 <vfprintf+0x15c>
     d64:	f8 01       	movw	r30, r16
     d66:	80 81       	ld	r24, Z
     d68:	89 83       	std	Y+1, r24	; 0x01
     d6a:	0e 5f       	subi	r16, 0xFE	; 254
     d6c:	1f 4f       	sbci	r17, 0xFF	; 255
     d6e:	88 24       	eor	r8, r8
     d70:	83 94       	inc	r8
     d72:	91 2c       	mov	r9, r1
     d74:	53 01       	movw	r10, r6
     d76:	13 c0       	rjmp	.+38     	; 0xd9e <vfprintf+0x154>
     d78:	28 01       	movw	r4, r16
     d7a:	f2 e0       	ldi	r31, 0x02	; 2
     d7c:	4f 0e       	add	r4, r31
     d7e:	51 1c       	adc	r5, r1
     d80:	f8 01       	movw	r30, r16
     d82:	a0 80       	ld	r10, Z
     d84:	b1 80       	ldd	r11, Z+1	; 0x01
     d86:	36 fe       	sbrs	r3, 6
     d88:	03 c0       	rjmp	.+6      	; 0xd90 <vfprintf+0x146>
     d8a:	69 2d       	mov	r22, r9
     d8c:	70 e0       	ldi	r23, 0x00	; 0
     d8e:	02 c0       	rjmp	.+4      	; 0xd94 <vfprintf+0x14a>
     d90:	6f ef       	ldi	r22, 0xFF	; 255
     d92:	7f ef       	ldi	r23, 0xFF	; 255
     d94:	c5 01       	movw	r24, r10
     d96:	0e 94 11 08 	call	0x1022	; 0x1022 <strnlen>
     d9a:	4c 01       	movw	r8, r24
     d9c:	82 01       	movw	r16, r4
     d9e:	f3 2d       	mov	r31, r3
     da0:	ff 77       	andi	r31, 0x7F	; 127
     da2:	3f 2e       	mov	r3, r31
     da4:	16 c0       	rjmp	.+44     	; 0xdd2 <vfprintf+0x188>
     da6:	28 01       	movw	r4, r16
     da8:	22 e0       	ldi	r18, 0x02	; 2
     daa:	42 0e       	add	r4, r18
     dac:	51 1c       	adc	r5, r1
     dae:	f8 01       	movw	r30, r16
     db0:	a0 80       	ld	r10, Z
     db2:	b1 80       	ldd	r11, Z+1	; 0x01
     db4:	36 fe       	sbrs	r3, 6
     db6:	03 c0       	rjmp	.+6      	; 0xdbe <vfprintf+0x174>
     db8:	69 2d       	mov	r22, r9
     dba:	70 e0       	ldi	r23, 0x00	; 0
     dbc:	02 c0       	rjmp	.+4      	; 0xdc2 <vfprintf+0x178>
     dbe:	6f ef       	ldi	r22, 0xFF	; 255
     dc0:	7f ef       	ldi	r23, 0xFF	; 255
     dc2:	c5 01       	movw	r24, r10
     dc4:	0e 94 06 08 	call	0x100c	; 0x100c <strnlen_P>
     dc8:	4c 01       	movw	r8, r24
     dca:	f3 2d       	mov	r31, r3
     dcc:	f0 68       	ori	r31, 0x80	; 128
     dce:	3f 2e       	mov	r3, r31
     dd0:	82 01       	movw	r16, r4
     dd2:	33 fc       	sbrc	r3, 3
     dd4:	1b c0       	rjmp	.+54     	; 0xe0c <vfprintf+0x1c2>
     dd6:	82 2d       	mov	r24, r2
     dd8:	90 e0       	ldi	r25, 0x00	; 0
     dda:	88 16       	cp	r8, r24
     ddc:	99 06       	cpc	r9, r25
     dde:	b0 f4       	brcc	.+44     	; 0xe0c <vfprintf+0x1c2>
     de0:	b6 01       	movw	r22, r12
     de2:	80 e2       	ldi	r24, 0x20	; 32
     de4:	90 e0       	ldi	r25, 0x00	; 0
     de6:	0e 94 1c 08 	call	0x1038	; 0x1038 <fputc>
     dea:	2a 94       	dec	r2
     dec:	f4 cf       	rjmp	.-24     	; 0xdd6 <vfprintf+0x18c>
     dee:	f5 01       	movw	r30, r10
     df0:	37 fc       	sbrc	r3, 7
     df2:	85 91       	lpm	r24, Z+
     df4:	37 fe       	sbrs	r3, 7
     df6:	81 91       	ld	r24, Z+
     df8:	5f 01       	movw	r10, r30
     dfa:	b6 01       	movw	r22, r12
     dfc:	90 e0       	ldi	r25, 0x00	; 0
     dfe:	0e 94 1c 08 	call	0x1038	; 0x1038 <fputc>
     e02:	21 10       	cpse	r2, r1
     e04:	2a 94       	dec	r2
     e06:	21 e0       	ldi	r18, 0x01	; 1
     e08:	82 1a       	sub	r8, r18
     e0a:	91 08       	sbc	r9, r1
     e0c:	81 14       	cp	r8, r1
     e0e:	91 04       	cpc	r9, r1
     e10:	71 f7       	brne	.-36     	; 0xdee <vfprintf+0x1a4>
     e12:	e8 c0       	rjmp	.+464    	; 0xfe4 <vfprintf+0x39a>
     e14:	84 36       	cpi	r24, 0x64	; 100
     e16:	11 f0       	breq	.+4      	; 0xe1c <vfprintf+0x1d2>
     e18:	89 36       	cpi	r24, 0x69	; 105
     e1a:	41 f5       	brne	.+80     	; 0xe6c <vfprintf+0x222>
     e1c:	f8 01       	movw	r30, r16
     e1e:	37 fe       	sbrs	r3, 7
     e20:	07 c0       	rjmp	.+14     	; 0xe30 <vfprintf+0x1e6>
     e22:	60 81       	ld	r22, Z
     e24:	71 81       	ldd	r23, Z+1	; 0x01
     e26:	82 81       	ldd	r24, Z+2	; 0x02
     e28:	93 81       	ldd	r25, Z+3	; 0x03
     e2a:	0c 5f       	subi	r16, 0xFC	; 252
     e2c:	1f 4f       	sbci	r17, 0xFF	; 255
     e2e:	08 c0       	rjmp	.+16     	; 0xe40 <vfprintf+0x1f6>
     e30:	60 81       	ld	r22, Z
     e32:	71 81       	ldd	r23, Z+1	; 0x01
     e34:	07 2e       	mov	r0, r23
     e36:	00 0c       	add	r0, r0
     e38:	88 0b       	sbc	r24, r24
     e3a:	99 0b       	sbc	r25, r25
     e3c:	0e 5f       	subi	r16, 0xFE	; 254
     e3e:	1f 4f       	sbci	r17, 0xFF	; 255
     e40:	f3 2d       	mov	r31, r3
     e42:	ff 76       	andi	r31, 0x6F	; 111
     e44:	3f 2e       	mov	r3, r31
     e46:	97 ff       	sbrs	r25, 7
     e48:	09 c0       	rjmp	.+18     	; 0xe5c <vfprintf+0x212>
     e4a:	90 95       	com	r25
     e4c:	80 95       	com	r24
     e4e:	70 95       	com	r23
     e50:	61 95       	neg	r22
     e52:	7f 4f       	sbci	r23, 0xFF	; 255
     e54:	8f 4f       	sbci	r24, 0xFF	; 255
     e56:	9f 4f       	sbci	r25, 0xFF	; 255
     e58:	f0 68       	ori	r31, 0x80	; 128
     e5a:	3f 2e       	mov	r3, r31
     e5c:	2a e0       	ldi	r18, 0x0A	; 10
     e5e:	30 e0       	ldi	r19, 0x00	; 0
     e60:	a3 01       	movw	r20, r6
     e62:	0e 94 58 08 	call	0x10b0	; 0x10b0 <__ultoa_invert>
     e66:	88 2e       	mov	r8, r24
     e68:	86 18       	sub	r8, r6
     e6a:	45 c0       	rjmp	.+138    	; 0xef6 <vfprintf+0x2ac>
     e6c:	85 37       	cpi	r24, 0x75	; 117
     e6e:	31 f4       	brne	.+12     	; 0xe7c <vfprintf+0x232>
     e70:	23 2d       	mov	r18, r3
     e72:	2f 7e       	andi	r18, 0xEF	; 239
     e74:	b2 2e       	mov	r11, r18
     e76:	2a e0       	ldi	r18, 0x0A	; 10
     e78:	30 e0       	ldi	r19, 0x00	; 0
     e7a:	25 c0       	rjmp	.+74     	; 0xec6 <vfprintf+0x27c>
     e7c:	93 2d       	mov	r25, r3
     e7e:	99 7f       	andi	r25, 0xF9	; 249
     e80:	b9 2e       	mov	r11, r25
     e82:	8f 36       	cpi	r24, 0x6F	; 111
     e84:	c1 f0       	breq	.+48     	; 0xeb6 <vfprintf+0x26c>
     e86:	18 f4       	brcc	.+6      	; 0xe8e <vfprintf+0x244>
     e88:	88 35       	cpi	r24, 0x58	; 88
     e8a:	79 f0       	breq	.+30     	; 0xeaa <vfprintf+0x260>
     e8c:	b5 c0       	rjmp	.+362    	; 0xff8 <vfprintf+0x3ae>
     e8e:	80 37       	cpi	r24, 0x70	; 112
     e90:	19 f0       	breq	.+6      	; 0xe98 <vfprintf+0x24e>
     e92:	88 37       	cpi	r24, 0x78	; 120
     e94:	21 f0       	breq	.+8      	; 0xe9e <vfprintf+0x254>
     e96:	b0 c0       	rjmp	.+352    	; 0xff8 <vfprintf+0x3ae>
     e98:	e9 2f       	mov	r30, r25
     e9a:	e0 61       	ori	r30, 0x10	; 16
     e9c:	be 2e       	mov	r11, r30
     e9e:	b4 fe       	sbrs	r11, 4
     ea0:	0d c0       	rjmp	.+26     	; 0xebc <vfprintf+0x272>
     ea2:	fb 2d       	mov	r31, r11
     ea4:	f4 60       	ori	r31, 0x04	; 4
     ea6:	bf 2e       	mov	r11, r31
     ea8:	09 c0       	rjmp	.+18     	; 0xebc <vfprintf+0x272>
     eaa:	34 fe       	sbrs	r3, 4
     eac:	0a c0       	rjmp	.+20     	; 0xec2 <vfprintf+0x278>
     eae:	29 2f       	mov	r18, r25
     eb0:	26 60       	ori	r18, 0x06	; 6
     eb2:	b2 2e       	mov	r11, r18
     eb4:	06 c0       	rjmp	.+12     	; 0xec2 <vfprintf+0x278>
     eb6:	28 e0       	ldi	r18, 0x08	; 8
     eb8:	30 e0       	ldi	r19, 0x00	; 0
     eba:	05 c0       	rjmp	.+10     	; 0xec6 <vfprintf+0x27c>
     ebc:	20 e1       	ldi	r18, 0x10	; 16
     ebe:	30 e0       	ldi	r19, 0x00	; 0
     ec0:	02 c0       	rjmp	.+4      	; 0xec6 <vfprintf+0x27c>
     ec2:	20 e1       	ldi	r18, 0x10	; 16
     ec4:	32 e0       	ldi	r19, 0x02	; 2
     ec6:	f8 01       	movw	r30, r16
     ec8:	b7 fe       	sbrs	r11, 7
     eca:	07 c0       	rjmp	.+14     	; 0xeda <vfprintf+0x290>
     ecc:	60 81       	ld	r22, Z
     ece:	71 81       	ldd	r23, Z+1	; 0x01
     ed0:	82 81       	ldd	r24, Z+2	; 0x02
     ed2:	93 81       	ldd	r25, Z+3	; 0x03
     ed4:	0c 5f       	subi	r16, 0xFC	; 252
     ed6:	1f 4f       	sbci	r17, 0xFF	; 255
     ed8:	06 c0       	rjmp	.+12     	; 0xee6 <vfprintf+0x29c>
     eda:	60 81       	ld	r22, Z
     edc:	71 81       	ldd	r23, Z+1	; 0x01
     ede:	80 e0       	ldi	r24, 0x00	; 0
     ee0:	90 e0       	ldi	r25, 0x00	; 0
     ee2:	0e 5f       	subi	r16, 0xFE	; 254
     ee4:	1f 4f       	sbci	r17, 0xFF	; 255
     ee6:	a3 01       	movw	r20, r6
     ee8:	0e 94 58 08 	call	0x10b0	; 0x10b0 <__ultoa_invert>
     eec:	88 2e       	mov	r8, r24
     eee:	86 18       	sub	r8, r6
     ef0:	fb 2d       	mov	r31, r11
     ef2:	ff 77       	andi	r31, 0x7F	; 127
     ef4:	3f 2e       	mov	r3, r31
     ef6:	36 fe       	sbrs	r3, 6
     ef8:	0d c0       	rjmp	.+26     	; 0xf14 <vfprintf+0x2ca>
     efa:	23 2d       	mov	r18, r3
     efc:	2e 7f       	andi	r18, 0xFE	; 254
     efe:	a2 2e       	mov	r10, r18
     f00:	89 14       	cp	r8, r9
     f02:	58 f4       	brcc	.+22     	; 0xf1a <vfprintf+0x2d0>
     f04:	34 fe       	sbrs	r3, 4
     f06:	0b c0       	rjmp	.+22     	; 0xf1e <vfprintf+0x2d4>
     f08:	32 fc       	sbrc	r3, 2
     f0a:	09 c0       	rjmp	.+18     	; 0xf1e <vfprintf+0x2d4>
     f0c:	83 2d       	mov	r24, r3
     f0e:	8e 7e       	andi	r24, 0xEE	; 238
     f10:	a8 2e       	mov	r10, r24
     f12:	05 c0       	rjmp	.+10     	; 0xf1e <vfprintf+0x2d4>
     f14:	b8 2c       	mov	r11, r8
     f16:	a3 2c       	mov	r10, r3
     f18:	03 c0       	rjmp	.+6      	; 0xf20 <vfprintf+0x2d6>
     f1a:	b8 2c       	mov	r11, r8
     f1c:	01 c0       	rjmp	.+2      	; 0xf20 <vfprintf+0x2d6>
     f1e:	b9 2c       	mov	r11, r9
     f20:	a4 fe       	sbrs	r10, 4
     f22:	0f c0       	rjmp	.+30     	; 0xf42 <vfprintf+0x2f8>
     f24:	fe 01       	movw	r30, r28
     f26:	e8 0d       	add	r30, r8
     f28:	f1 1d       	adc	r31, r1
     f2a:	80 81       	ld	r24, Z
     f2c:	80 33       	cpi	r24, 0x30	; 48
     f2e:	21 f4       	brne	.+8      	; 0xf38 <vfprintf+0x2ee>
     f30:	9a 2d       	mov	r25, r10
     f32:	99 7e       	andi	r25, 0xE9	; 233
     f34:	a9 2e       	mov	r10, r25
     f36:	09 c0       	rjmp	.+18     	; 0xf4a <vfprintf+0x300>
     f38:	a2 fe       	sbrs	r10, 2
     f3a:	06 c0       	rjmp	.+12     	; 0xf48 <vfprintf+0x2fe>
     f3c:	b3 94       	inc	r11
     f3e:	b3 94       	inc	r11
     f40:	04 c0       	rjmp	.+8      	; 0xf4a <vfprintf+0x300>
     f42:	8a 2d       	mov	r24, r10
     f44:	86 78       	andi	r24, 0x86	; 134
     f46:	09 f0       	breq	.+2      	; 0xf4a <vfprintf+0x300>
     f48:	b3 94       	inc	r11
     f4a:	a3 fc       	sbrc	r10, 3
     f4c:	11 c0       	rjmp	.+34     	; 0xf70 <vfprintf+0x326>
     f4e:	a0 fe       	sbrs	r10, 0
     f50:	06 c0       	rjmp	.+12     	; 0xf5e <vfprintf+0x314>
     f52:	b2 14       	cp	r11, r2
     f54:	88 f4       	brcc	.+34     	; 0xf78 <vfprintf+0x32e>
     f56:	28 0c       	add	r2, r8
     f58:	92 2c       	mov	r9, r2
     f5a:	9b 18       	sub	r9, r11
     f5c:	0e c0       	rjmp	.+28     	; 0xf7a <vfprintf+0x330>
     f5e:	b2 14       	cp	r11, r2
     f60:	60 f4       	brcc	.+24     	; 0xf7a <vfprintf+0x330>
     f62:	b6 01       	movw	r22, r12
     f64:	80 e2       	ldi	r24, 0x20	; 32
     f66:	90 e0       	ldi	r25, 0x00	; 0
     f68:	0e 94 1c 08 	call	0x1038	; 0x1038 <fputc>
     f6c:	b3 94       	inc	r11
     f6e:	f7 cf       	rjmp	.-18     	; 0xf5e <vfprintf+0x314>
     f70:	b2 14       	cp	r11, r2
     f72:	18 f4       	brcc	.+6      	; 0xf7a <vfprintf+0x330>
     f74:	2b 18       	sub	r2, r11
     f76:	02 c0       	rjmp	.+4      	; 0xf7c <vfprintf+0x332>
     f78:	98 2c       	mov	r9, r8
     f7a:	21 2c       	mov	r2, r1
     f7c:	a4 fe       	sbrs	r10, 4
     f7e:	10 c0       	rjmp	.+32     	; 0xfa0 <vfprintf+0x356>
     f80:	b6 01       	movw	r22, r12
     f82:	80 e3       	ldi	r24, 0x30	; 48
     f84:	90 e0       	ldi	r25, 0x00	; 0
     f86:	0e 94 1c 08 	call	0x1038	; 0x1038 <fputc>
     f8a:	a2 fe       	sbrs	r10, 2
     f8c:	17 c0       	rjmp	.+46     	; 0xfbc <vfprintf+0x372>
     f8e:	a1 fc       	sbrc	r10, 1
     f90:	03 c0       	rjmp	.+6      	; 0xf98 <vfprintf+0x34e>
     f92:	88 e7       	ldi	r24, 0x78	; 120
     f94:	90 e0       	ldi	r25, 0x00	; 0
     f96:	02 c0       	rjmp	.+4      	; 0xf9c <vfprintf+0x352>
     f98:	88 e5       	ldi	r24, 0x58	; 88
     f9a:	90 e0       	ldi	r25, 0x00	; 0
     f9c:	b6 01       	movw	r22, r12
     f9e:	0c c0       	rjmp	.+24     	; 0xfb8 <vfprintf+0x36e>
     fa0:	8a 2d       	mov	r24, r10
     fa2:	86 78       	andi	r24, 0x86	; 134
     fa4:	59 f0       	breq	.+22     	; 0xfbc <vfprintf+0x372>
     fa6:	a1 fe       	sbrs	r10, 1
     fa8:	02 c0       	rjmp	.+4      	; 0xfae <vfprintf+0x364>
     faa:	8b e2       	ldi	r24, 0x2B	; 43
     fac:	01 c0       	rjmp	.+2      	; 0xfb0 <vfprintf+0x366>
     fae:	80 e2       	ldi	r24, 0x20	; 32
     fb0:	a7 fc       	sbrc	r10, 7
     fb2:	8d e2       	ldi	r24, 0x2D	; 45
     fb4:	b6 01       	movw	r22, r12
     fb6:	90 e0       	ldi	r25, 0x00	; 0
     fb8:	0e 94 1c 08 	call	0x1038	; 0x1038 <fputc>
     fbc:	89 14       	cp	r8, r9
     fbe:	38 f4       	brcc	.+14     	; 0xfce <vfprintf+0x384>
     fc0:	b6 01       	movw	r22, r12
     fc2:	80 e3       	ldi	r24, 0x30	; 48
     fc4:	90 e0       	ldi	r25, 0x00	; 0
     fc6:	0e 94 1c 08 	call	0x1038	; 0x1038 <fputc>
     fca:	9a 94       	dec	r9
     fcc:	f7 cf       	rjmp	.-18     	; 0xfbc <vfprintf+0x372>
     fce:	8a 94       	dec	r8
     fd0:	f3 01       	movw	r30, r6
     fd2:	e8 0d       	add	r30, r8
     fd4:	f1 1d       	adc	r31, r1
     fd6:	80 81       	ld	r24, Z
     fd8:	b6 01       	movw	r22, r12
     fda:	90 e0       	ldi	r25, 0x00	; 0
     fdc:	0e 94 1c 08 	call	0x1038	; 0x1038 <fputc>
     fe0:	81 10       	cpse	r8, r1
     fe2:	f5 cf       	rjmp	.-22     	; 0xfce <vfprintf+0x384>
     fe4:	22 20       	and	r2, r2
     fe6:	09 f4       	brne	.+2      	; 0xfea <vfprintf+0x3a0>
     fe8:	42 ce       	rjmp	.-892    	; 0xc6e <vfprintf+0x24>
     fea:	b6 01       	movw	r22, r12
     fec:	80 e2       	ldi	r24, 0x20	; 32
     fee:	90 e0       	ldi	r25, 0x00	; 0
     ff0:	0e 94 1c 08 	call	0x1038	; 0x1038 <fputc>
     ff4:	2a 94       	dec	r2
     ff6:	f6 cf       	rjmp	.-20     	; 0xfe4 <vfprintf+0x39a>
     ff8:	f6 01       	movw	r30, r12
     ffa:	86 81       	ldd	r24, Z+6	; 0x06
     ffc:	97 81       	ldd	r25, Z+7	; 0x07
     ffe:	02 c0       	rjmp	.+4      	; 0x1004 <vfprintf+0x3ba>
    1000:	8f ef       	ldi	r24, 0xFF	; 255
    1002:	9f ef       	ldi	r25, 0xFF	; 255
    1004:	2b 96       	adiw	r28, 0x0b	; 11
    1006:	e2 e1       	ldi	r30, 0x12	; 18
    1008:	0c 94 d2 08 	jmp	0x11a4	; 0x11a4 <__epilogue_restores__>

0000100c <strnlen_P>:
    100c:	fc 01       	movw	r30, r24
    100e:	05 90       	lpm	r0, Z+
    1010:	61 50       	subi	r22, 0x01	; 1
    1012:	70 40       	sbci	r23, 0x00	; 0
    1014:	01 10       	cpse	r0, r1
    1016:	d8 f7       	brcc	.-10     	; 0x100e <strnlen_P+0x2>
    1018:	80 95       	com	r24
    101a:	90 95       	com	r25
    101c:	8e 0f       	add	r24, r30
    101e:	9f 1f       	adc	r25, r31
    1020:	08 95       	ret

00001022 <strnlen>:
    1022:	fc 01       	movw	r30, r24
    1024:	61 50       	subi	r22, 0x01	; 1
    1026:	70 40       	sbci	r23, 0x00	; 0
    1028:	01 90       	ld	r0, Z+
    102a:	01 10       	cpse	r0, r1
    102c:	d8 f7       	brcc	.-10     	; 0x1024 <strnlen+0x2>
    102e:	80 95       	com	r24
    1030:	90 95       	com	r25
    1032:	8e 0f       	add	r24, r30
    1034:	9f 1f       	adc	r25, r31
    1036:	08 95       	ret

00001038 <fputc>:
    1038:	0f 93       	push	r16
    103a:	1f 93       	push	r17
    103c:	cf 93       	push	r28
    103e:	df 93       	push	r29
    1040:	fb 01       	movw	r30, r22
    1042:	23 81       	ldd	r18, Z+3	; 0x03
    1044:	21 fd       	sbrc	r18, 1
    1046:	03 c0       	rjmp	.+6      	; 0x104e <fputc+0x16>
    1048:	8f ef       	ldi	r24, 0xFF	; 255
    104a:	9f ef       	ldi	r25, 0xFF	; 255
    104c:	2c c0       	rjmp	.+88     	; 0x10a6 <fputc+0x6e>
    104e:	22 ff       	sbrs	r18, 2
    1050:	16 c0       	rjmp	.+44     	; 0x107e <fputc+0x46>
    1052:	46 81       	ldd	r20, Z+6	; 0x06
    1054:	57 81       	ldd	r21, Z+7	; 0x07
    1056:	24 81       	ldd	r18, Z+4	; 0x04
    1058:	35 81       	ldd	r19, Z+5	; 0x05
    105a:	42 17       	cp	r20, r18
    105c:	53 07       	cpc	r21, r19
    105e:	44 f4       	brge	.+16     	; 0x1070 <fputc+0x38>
    1060:	a0 81       	ld	r26, Z
    1062:	b1 81       	ldd	r27, Z+1	; 0x01
    1064:	9d 01       	movw	r18, r26
    1066:	2f 5f       	subi	r18, 0xFF	; 255
    1068:	3f 4f       	sbci	r19, 0xFF	; 255
    106a:	31 83       	std	Z+1, r19	; 0x01
    106c:	20 83       	st	Z, r18
    106e:	8c 93       	st	X, r24
    1070:	26 81       	ldd	r18, Z+6	; 0x06
    1072:	37 81       	ldd	r19, Z+7	; 0x07
    1074:	2f 5f       	subi	r18, 0xFF	; 255
    1076:	3f 4f       	sbci	r19, 0xFF	; 255
    1078:	37 83       	std	Z+7, r19	; 0x07
    107a:	26 83       	std	Z+6, r18	; 0x06
    107c:	14 c0       	rjmp	.+40     	; 0x10a6 <fputc+0x6e>
    107e:	8b 01       	movw	r16, r22
    1080:	ec 01       	movw	r28, r24
    1082:	fb 01       	movw	r30, r22
    1084:	00 84       	ldd	r0, Z+8	; 0x08
    1086:	f1 85       	ldd	r31, Z+9	; 0x09
    1088:	e0 2d       	mov	r30, r0
    108a:	09 95       	icall
    108c:	89 2b       	or	r24, r25
    108e:	e1 f6       	brne	.-72     	; 0x1048 <fputc+0x10>
    1090:	d8 01       	movw	r26, r16
    1092:	16 96       	adiw	r26, 0x06	; 6
    1094:	8d 91       	ld	r24, X+
    1096:	9c 91       	ld	r25, X
    1098:	17 97       	sbiw	r26, 0x07	; 7
    109a:	01 96       	adiw	r24, 0x01	; 1
    109c:	17 96       	adiw	r26, 0x07	; 7
    109e:	9c 93       	st	X, r25
    10a0:	8e 93       	st	-X, r24
    10a2:	16 97       	sbiw	r26, 0x06	; 6
    10a4:	ce 01       	movw	r24, r28
    10a6:	df 91       	pop	r29
    10a8:	cf 91       	pop	r28
    10aa:	1f 91       	pop	r17
    10ac:	0f 91       	pop	r16
    10ae:	08 95       	ret

000010b0 <__ultoa_invert>:
    10b0:	fa 01       	movw	r30, r20
    10b2:	aa 27       	eor	r26, r26
    10b4:	28 30       	cpi	r18, 0x08	; 8
    10b6:	51 f1       	breq	.+84     	; 0x110c <__ultoa_invert+0x5c>
    10b8:	20 31       	cpi	r18, 0x10	; 16
    10ba:	81 f1       	breq	.+96     	; 0x111c <__ultoa_invert+0x6c>
    10bc:	e8 94       	clt
    10be:	6f 93       	push	r22
    10c0:	6e 7f       	andi	r22, 0xFE	; 254
    10c2:	6e 5f       	subi	r22, 0xFE	; 254
    10c4:	7f 4f       	sbci	r23, 0xFF	; 255
    10c6:	8f 4f       	sbci	r24, 0xFF	; 255
    10c8:	9f 4f       	sbci	r25, 0xFF	; 255
    10ca:	af 4f       	sbci	r26, 0xFF	; 255
    10cc:	b1 e0       	ldi	r27, 0x01	; 1
    10ce:	3e d0       	rcall	.+124    	; 0x114c <__ultoa_invert+0x9c>
    10d0:	b4 e0       	ldi	r27, 0x04	; 4
    10d2:	3c d0       	rcall	.+120    	; 0x114c <__ultoa_invert+0x9c>
    10d4:	67 0f       	add	r22, r23
    10d6:	78 1f       	adc	r23, r24
    10d8:	89 1f       	adc	r24, r25
    10da:	9a 1f       	adc	r25, r26
    10dc:	a1 1d       	adc	r26, r1
    10de:	68 0f       	add	r22, r24
    10e0:	79 1f       	adc	r23, r25
    10e2:	8a 1f       	adc	r24, r26
    10e4:	91 1d       	adc	r25, r1
    10e6:	a1 1d       	adc	r26, r1
    10e8:	6a 0f       	add	r22, r26
    10ea:	71 1d       	adc	r23, r1
    10ec:	81 1d       	adc	r24, r1
    10ee:	91 1d       	adc	r25, r1
    10f0:	a1 1d       	adc	r26, r1
    10f2:	20 d0       	rcall	.+64     	; 0x1134 <__ultoa_invert+0x84>
    10f4:	09 f4       	brne	.+2      	; 0x10f8 <__ultoa_invert+0x48>
    10f6:	68 94       	set
    10f8:	3f 91       	pop	r19
    10fa:	2a e0       	ldi	r18, 0x0A	; 10
    10fc:	26 9f       	mul	r18, r22
    10fe:	11 24       	eor	r1, r1
    1100:	30 19       	sub	r19, r0
    1102:	30 5d       	subi	r19, 0xD0	; 208
    1104:	31 93       	st	Z+, r19
    1106:	de f6       	brtc	.-74     	; 0x10be <__ultoa_invert+0xe>
    1108:	cf 01       	movw	r24, r30
    110a:	08 95       	ret
    110c:	46 2f       	mov	r20, r22
    110e:	47 70       	andi	r20, 0x07	; 7
    1110:	40 5d       	subi	r20, 0xD0	; 208
    1112:	41 93       	st	Z+, r20
    1114:	b3 e0       	ldi	r27, 0x03	; 3
    1116:	0f d0       	rcall	.+30     	; 0x1136 <__ultoa_invert+0x86>
    1118:	c9 f7       	brne	.-14     	; 0x110c <__ultoa_invert+0x5c>
    111a:	f6 cf       	rjmp	.-20     	; 0x1108 <__ultoa_invert+0x58>
    111c:	46 2f       	mov	r20, r22
    111e:	4f 70       	andi	r20, 0x0F	; 15
    1120:	40 5d       	subi	r20, 0xD0	; 208
    1122:	4a 33       	cpi	r20, 0x3A	; 58
    1124:	18 f0       	brcs	.+6      	; 0x112c <__ultoa_invert+0x7c>
    1126:	49 5d       	subi	r20, 0xD9	; 217
    1128:	31 fd       	sbrc	r19, 1
    112a:	40 52       	subi	r20, 0x20	; 32
    112c:	41 93       	st	Z+, r20
    112e:	02 d0       	rcall	.+4      	; 0x1134 <__ultoa_invert+0x84>
    1130:	a9 f7       	brne	.-22     	; 0x111c <__ultoa_invert+0x6c>
    1132:	ea cf       	rjmp	.-44     	; 0x1108 <__ultoa_invert+0x58>
    1134:	b4 e0       	ldi	r27, 0x04	; 4
    1136:	a6 95       	lsr	r26
    1138:	97 95       	ror	r25
    113a:	87 95       	ror	r24
    113c:	77 95       	ror	r23
    113e:	67 95       	ror	r22
    1140:	ba 95       	dec	r27
    1142:	c9 f7       	brne	.-14     	; 0x1136 <__ultoa_invert+0x86>
    1144:	00 97       	sbiw	r24, 0x00	; 0
    1146:	61 05       	cpc	r22, r1
    1148:	71 05       	cpc	r23, r1
    114a:	08 95       	ret
    114c:	9b 01       	movw	r18, r22
    114e:	ac 01       	movw	r20, r24
    1150:	0a 2e       	mov	r0, r26
    1152:	06 94       	lsr	r0
    1154:	57 95       	ror	r21
    1156:	47 95       	ror	r20
    1158:	37 95       	ror	r19
    115a:	27 95       	ror	r18
    115c:	ba 95       	dec	r27
    115e:	c9 f7       	brne	.-14     	; 0x1152 <__ultoa_invert+0xa2>
    1160:	62 0f       	add	r22, r18
    1162:	73 1f       	adc	r23, r19
    1164:	84 1f       	adc	r24, r20
    1166:	95 1f       	adc	r25, r21
    1168:	a0 1d       	adc	r26, r0
    116a:	08 95       	ret

0000116c <__prologue_saves__>:
    116c:	2f 92       	push	r2
    116e:	3f 92       	push	r3
    1170:	4f 92       	push	r4
    1172:	5f 92       	push	r5
    1174:	6f 92       	push	r6
    1176:	7f 92       	push	r7
    1178:	8f 92       	push	r8
    117a:	9f 92       	push	r9
    117c:	af 92       	push	r10
    117e:	bf 92       	push	r11
    1180:	cf 92       	push	r12
    1182:	df 92       	push	r13
    1184:	ef 92       	push	r14
    1186:	ff 92       	push	r15
    1188:	0f 93       	push	r16
    118a:	1f 93       	push	r17
    118c:	cf 93       	push	r28
    118e:	df 93       	push	r29
    1190:	cd b7       	in	r28, 0x3d	; 61
    1192:	de b7       	in	r29, 0x3e	; 62
    1194:	ca 1b       	sub	r28, r26
    1196:	db 0b       	sbc	r29, r27
    1198:	0f b6       	in	r0, 0x3f	; 63
    119a:	f8 94       	cli
    119c:	de bf       	out	0x3e, r29	; 62
    119e:	0f be       	out	0x3f, r0	; 63
    11a0:	cd bf       	out	0x3d, r28	; 61
    11a2:	09 94       	ijmp

000011a4 <__epilogue_restores__>:
    11a4:	2a 88       	ldd	r2, Y+18	; 0x12
    11a6:	39 88       	ldd	r3, Y+17	; 0x11
    11a8:	48 88       	ldd	r4, Y+16	; 0x10
    11aa:	5f 84       	ldd	r5, Y+15	; 0x0f
    11ac:	6e 84       	ldd	r6, Y+14	; 0x0e
    11ae:	7d 84       	ldd	r7, Y+13	; 0x0d
    11b0:	8c 84       	ldd	r8, Y+12	; 0x0c
    11b2:	9b 84       	ldd	r9, Y+11	; 0x0b
    11b4:	aa 84       	ldd	r10, Y+10	; 0x0a
    11b6:	b9 84       	ldd	r11, Y+9	; 0x09
    11b8:	c8 84       	ldd	r12, Y+8	; 0x08
    11ba:	df 80       	ldd	r13, Y+7	; 0x07
    11bc:	ee 80       	ldd	r14, Y+6	; 0x06
    11be:	fd 80       	ldd	r15, Y+5	; 0x05
    11c0:	0c 81       	ldd	r16, Y+4	; 0x04
    11c2:	1b 81       	ldd	r17, Y+3	; 0x03
    11c4:	aa 81       	ldd	r26, Y+2	; 0x02
    11c6:	b9 81       	ldd	r27, Y+1	; 0x01
    11c8:	ce 0f       	add	r28, r30
    11ca:	d1 1d       	adc	r29, r1
    11cc:	0f b6       	in	r0, 0x3f	; 63
    11ce:	f8 94       	cli
    11d0:	de bf       	out	0x3e, r29	; 62
    11d2:	0f be       	out	0x3f, r0	; 63
    11d4:	cd bf       	out	0x3d, r28	; 61
    11d6:	ed 01       	movw	r28, r26
    11d8:	08 95       	ret

000011da <_exit>:
    11da:	f8 94       	cli

000011dc <__stop_program>:
    11dc:	ff cf       	rjmp	.-2      	; 0x11dc <__stop_program>
