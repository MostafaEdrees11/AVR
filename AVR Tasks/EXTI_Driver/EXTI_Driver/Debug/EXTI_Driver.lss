
EXTI_Driver.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .text         000005c2  00000000  00000000  00000094  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  1 .data         0000000a  00800060  000005c2  00000656  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  2 .bss          00000006  0080006a  0080006a  00000660  2**0
                  ALLOC
  3 .comment      00000030  00000000  00000000  00000660  2**0
                  CONTENTS, READONLY
  4 .note.gnu.avr.deviceinfo 0000003c  00000000  00000000  00000690  2**2
                  CONTENTS, READONLY
  5 .debug_aranges 00000120  00000000  00000000  000006cc  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_info   000010be  00000000  00000000  000007ec  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_abbrev 0000091d  00000000  00000000  000018aa  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_line   00000c75  00000000  00000000  000021c7  2**0
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_frame  00000278  00000000  00000000  00002e3c  2**2
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_str    00000661  00000000  00000000  000030b4  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_loc    00000c34  00000000  00000000  00003715  2**0
                  CONTENTS, READONLY, DEBUGGING
 12 .debug_ranges 000000e0  00000000  00000000  00004349  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
   0:	0c 94 2a 00 	jmp	0x54	; 0x54 <__ctors_end>
   4:	0c 94 58 02 	jmp	0x4b0	; 0x4b0 <__vector_1>
   8:	0c 94 81 02 	jmp	0x502	; 0x502 <__vector_2>
   c:	0c 94 aa 02 	jmp	0x554	; 0x554 <__vector_3>
  10:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  14:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  18:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  1c:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  20:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  24:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  28:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  2c:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  30:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  34:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  38:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  3c:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  40:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  44:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  48:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  4c:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  50:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>

00000054 <__ctors_end>:
  54:	11 24       	eor	r1, r1
  56:	1f be       	out	0x3f, r1	; 63
  58:	cf e5       	ldi	r28, 0x5F	; 95
  5a:	d8 e0       	ldi	r29, 0x08	; 8
  5c:	de bf       	out	0x3e, r29	; 62
  5e:	cd bf       	out	0x3d, r28	; 61

00000060 <__do_copy_data>:
  60:	10 e0       	ldi	r17, 0x00	; 0
  62:	a0 e6       	ldi	r26, 0x60	; 96
  64:	b0 e0       	ldi	r27, 0x00	; 0
  66:	e2 ec       	ldi	r30, 0xC2	; 194
  68:	f5 e0       	ldi	r31, 0x05	; 5
  6a:	02 c0       	rjmp	.+4      	; 0x70 <__do_copy_data+0x10>
  6c:	05 90       	lpm	r0, Z+
  6e:	0d 92       	st	X+, r0
  70:	aa 36       	cpi	r26, 0x6A	; 106
  72:	b1 07       	cpc	r27, r17
  74:	d9 f7       	brne	.-10     	; 0x6c <__do_copy_data+0xc>

00000076 <__do_clear_bss>:
  76:	20 e0       	ldi	r18, 0x00	; 0
  78:	aa e6       	ldi	r26, 0x6A	; 106
  7a:	b0 e0       	ldi	r27, 0x00	; 0
  7c:	01 c0       	rjmp	.+2      	; 0x80 <.do_clear_bss_start>

0000007e <.do_clear_bss_loop>:
  7e:	1d 92       	st	X+, r1

00000080 <.do_clear_bss_start>:
  80:	a0 37       	cpi	r26, 0x70	; 112
  82:	b2 07       	cpc	r27, r18
  84:	e1 f7       	brne	.-8      	; 0x7e <.do_clear_bss_loop>
  86:	0e 94 4e 00 	call	0x9c	; 0x9c <main>
  8a:	0c 94 df 02 	jmp	0x5be	; 0x5be <_exit>

0000008e <__bad_interrupt>:
  8e:	0c 94 00 00 	jmp	0	; 0x0 <__vectors>

00000092 <Toggle_Led>:
    }
}

void Toggle_Led(void)
{
	DIO_enuTogPinVal(DIO_u8PORTA,DIO_u8PIN7);
  92:	67 e0       	ldi	r22, 0x07	; 7
  94:	80 e0       	ldi	r24, 0x00	; 0
  96:	0e 94 55 01 	call	0x2aa	; 0x2aa <DIO_enuTogPinVal>
  9a:	08 95       	ret

0000009c <main>:
void Toggle_Led(void);

int main(void)
{
	/* initialize the pins of led & button */
	DIO_enuSetPinDirection(DIO_u8PORTD, DIO_u8PIN2, DIO_u8INPUT);
  9c:	40 e0       	ldi	r20, 0x00	; 0
  9e:	62 e0       	ldi	r22, 0x02	; 2
  a0:	83 e0       	ldi	r24, 0x03	; 3
  a2:	0e 94 71 00 	call	0xe2	; 0xe2 <DIO_enuSetPinDirection>
	DIO_enuSetPinVal(DIO_u8PORTD, DIO_u8PIN2, DIO_u8PULL_UP);
  a6:	41 e0       	ldi	r20, 0x01	; 1
  a8:	62 e0       	ldi	r22, 0x02	; 2
  aa:	83 e0       	ldi	r24, 0x03	; 3
  ac:	0e 94 e3 00 	call	0x1c6	; 0x1c6 <DIO_enuSetPinVal>
	DIO_enuSetPinDirection(DIO_u8PORTA, DIO_u8PIN7, DIO_u8OUTPUT);
  b0:	41 e0       	ldi	r20, 0x01	; 1
  b2:	67 e0       	ldi	r22, 0x07	; 7
  b4:	80 e0       	ldi	r24, 0x00	; 0
  b6:	0e 94 71 00 	call	0xe2	; 0xe2 <DIO_enuSetPinDirection>
	
	/* initialize External interrupt */
	EXTI_enuInit(EXTI_AStrEXTI_Config);
  ba:	80 e6       	ldi	r24, 0x60	; 96
  bc:	90 e0       	ldi	r25, 0x00	; 0
  be:	0e 94 97 01 	call	0x32e	; 0x32e <EXTI_enuInit>
	
	/* CallBack Function for EXTI0 */
	EXTI_enuCallBackFunc(&Toggle_Led,0);
  c2:	60 e0       	ldi	r22, 0x00	; 0
  c4:	89 e4       	ldi	r24, 0x49	; 73
  c6:	90 e0       	ldi	r25, 0x00	; 0
  c8:	0e 94 4b 02 	call	0x496	; 0x496 <EXTI_enuCallBackFunc>
	
	/* Enable INT0 */
	EXTI_enuEnable(EXTI0);
  cc:	80 e0       	ldi	r24, 0x00	; 0
  ce:	0e 94 27 02 	call	0x44e	; 0x44e <EXTI_enuEnable>
	
	/* enable global interrupt */
	GIE_enuGloable_Interrupt_Enable();
  d2:	0e 94 d7 02 	call	0x5ae	; 0x5ae <GIE_enuGloable_Interrupt_Enable>
	
	DIO_enuSetPinVal(DIO_u8PORTA,DIO_u8PIN7, DIO_u8LOW);
  d6:	40 e0       	ldi	r20, 0x00	; 0
  d8:	67 e0       	ldi	r22, 0x07	; 7
  da:	80 e0       	ldi	r24, 0x00	; 0
  dc:	0e 94 e3 00 	call	0x1c6	; 0x1c6 <DIO_enuSetPinVal>
  e0:	ff cf       	rjmp	.-2      	; 0xe0 <main+0x44>

000000e2 <DIO_enuSetPinDirection>:
	{
		Local_enuErrorState = ES_NULL_POINTER;
	}
	
	return Local_enuErrorState;
}
  e2:	84 30       	cpi	r24, 0x04	; 4
  e4:	08 f0       	brcs	.+2      	; 0xe8 <DIO_enuSetPinDirection+0x6>
  e6:	67 c0       	rjmp	.+206    	; 0x1b6 <DIO_enuSetPinDirection+0xd4>
  e8:	68 30       	cpi	r22, 0x08	; 8
  ea:	08 f0       	brcs	.+2      	; 0xee <DIO_enuSetPinDirection+0xc>
  ec:	66 c0       	rjmp	.+204    	; 0x1ba <DIO_enuSetPinDirection+0xd8>
  ee:	42 30       	cpi	r20, 0x02	; 2
  f0:	08 f0       	brcs	.+2      	; 0xf4 <DIO_enuSetPinDirection+0x12>
  f2:	65 c0       	rjmp	.+202    	; 0x1be <DIO_enuSetPinDirection+0xdc>
  f4:	81 30       	cpi	r24, 0x01	; 1
  f6:	e9 f0       	breq	.+58     	; 0x132 <DIO_enuSetPinDirection+0x50>
  f8:	30 f0       	brcs	.+12     	; 0x106 <DIO_enuSetPinDirection+0x24>
  fa:	82 30       	cpi	r24, 0x02	; 2
  fc:	81 f1       	breq	.+96     	; 0x15e <DIO_enuSetPinDirection+0x7c>
  fe:	83 30       	cpi	r24, 0x03	; 3
 100:	09 f4       	brne	.+2      	; 0x104 <DIO_enuSetPinDirection+0x22>
 102:	43 c0       	rjmp	.+134    	; 0x18a <DIO_enuSetPinDirection+0xa8>
 104:	5e c0       	rjmp	.+188    	; 0x1c2 <DIO_enuSetPinDirection+0xe0>
 106:	81 e0       	ldi	r24, 0x01	; 1
 108:	90 e0       	ldi	r25, 0x00	; 0
 10a:	06 2e       	mov	r0, r22
 10c:	02 c0       	rjmp	.+4      	; 0x112 <DIO_enuSetPinDirection+0x30>
 10e:	88 0f       	add	r24, r24
 110:	99 1f       	adc	r25, r25
 112:	0a 94       	dec	r0
 114:	e2 f7       	brpl	.-8      	; 0x10e <DIO_enuSetPinDirection+0x2c>
 116:	80 95       	com	r24
 118:	2a b3       	in	r18, 0x1a	; 26
 11a:	28 23       	and	r18, r24
 11c:	84 2f       	mov	r24, r20
 11e:	90 e0       	ldi	r25, 0x00	; 0
 120:	02 c0       	rjmp	.+4      	; 0x126 <DIO_enuSetPinDirection+0x44>
 122:	88 0f       	add	r24, r24
 124:	99 1f       	adc	r25, r25
 126:	6a 95       	dec	r22
 128:	e2 f7       	brpl	.-8      	; 0x122 <DIO_enuSetPinDirection+0x40>
 12a:	82 2b       	or	r24, r18
 12c:	8a bb       	out	0x1a, r24	; 26
 12e:	80 e0       	ldi	r24, 0x00	; 0
 130:	08 95       	ret
 132:	21 e0       	ldi	r18, 0x01	; 1
 134:	30 e0       	ldi	r19, 0x00	; 0
 136:	06 2e       	mov	r0, r22
 138:	02 c0       	rjmp	.+4      	; 0x13e <DIO_enuSetPinDirection+0x5c>
 13a:	22 0f       	add	r18, r18
 13c:	33 1f       	adc	r19, r19
 13e:	0a 94       	dec	r0
 140:	e2 f7       	brpl	.-8      	; 0x13a <DIO_enuSetPinDirection+0x58>
 142:	20 95       	com	r18
 144:	87 b3       	in	r24, 0x17	; 23
 146:	28 23       	and	r18, r24
 148:	84 2f       	mov	r24, r20
 14a:	90 e0       	ldi	r25, 0x00	; 0
 14c:	02 c0       	rjmp	.+4      	; 0x152 <DIO_enuSetPinDirection+0x70>
 14e:	88 0f       	add	r24, r24
 150:	99 1f       	adc	r25, r25
 152:	6a 95       	dec	r22
 154:	e2 f7       	brpl	.-8      	; 0x14e <DIO_enuSetPinDirection+0x6c>
 156:	82 2b       	or	r24, r18
 158:	87 bb       	out	0x17, r24	; 23
 15a:	80 e0       	ldi	r24, 0x00	; 0
 15c:	08 95       	ret
 15e:	21 e0       	ldi	r18, 0x01	; 1
 160:	30 e0       	ldi	r19, 0x00	; 0
 162:	06 2e       	mov	r0, r22
 164:	02 c0       	rjmp	.+4      	; 0x16a <DIO_enuSetPinDirection+0x88>
 166:	22 0f       	add	r18, r18
 168:	33 1f       	adc	r19, r19
 16a:	0a 94       	dec	r0
 16c:	e2 f7       	brpl	.-8      	; 0x166 <DIO_enuSetPinDirection+0x84>
 16e:	20 95       	com	r18
 170:	84 b3       	in	r24, 0x14	; 20
 172:	28 23       	and	r18, r24
 174:	84 2f       	mov	r24, r20
 176:	90 e0       	ldi	r25, 0x00	; 0
 178:	02 c0       	rjmp	.+4      	; 0x17e <DIO_enuSetPinDirection+0x9c>
 17a:	88 0f       	add	r24, r24
 17c:	99 1f       	adc	r25, r25
 17e:	6a 95       	dec	r22
 180:	e2 f7       	brpl	.-8      	; 0x17a <DIO_enuSetPinDirection+0x98>
 182:	82 2b       	or	r24, r18
 184:	84 bb       	out	0x14, r24	; 20
 186:	80 e0       	ldi	r24, 0x00	; 0
 188:	08 95       	ret
 18a:	21 e0       	ldi	r18, 0x01	; 1
 18c:	30 e0       	ldi	r19, 0x00	; 0
 18e:	06 2e       	mov	r0, r22
 190:	02 c0       	rjmp	.+4      	; 0x196 <DIO_enuSetPinDirection+0xb4>
 192:	22 0f       	add	r18, r18
 194:	33 1f       	adc	r19, r19
 196:	0a 94       	dec	r0
 198:	e2 f7       	brpl	.-8      	; 0x192 <DIO_enuSetPinDirection+0xb0>
 19a:	20 95       	com	r18
 19c:	81 b3       	in	r24, 0x11	; 17
 19e:	28 23       	and	r18, r24
 1a0:	84 2f       	mov	r24, r20
 1a2:	90 e0       	ldi	r25, 0x00	; 0
 1a4:	02 c0       	rjmp	.+4      	; 0x1aa <DIO_enuSetPinDirection+0xc8>
 1a6:	88 0f       	add	r24, r24
 1a8:	99 1f       	adc	r25, r25
 1aa:	6a 95       	dec	r22
 1ac:	e2 f7       	brpl	.-8      	; 0x1a6 <DIO_enuSetPinDirection+0xc4>
 1ae:	82 2b       	or	r24, r18
 1b0:	81 bb       	out	0x11, r24	; 17
 1b2:	80 e0       	ldi	r24, 0x00	; 0
 1b4:	08 95       	ret
 1b6:	83 e0       	ldi	r24, 0x03	; 3
 1b8:	08 95       	ret
 1ba:	83 e0       	ldi	r24, 0x03	; 3
 1bc:	08 95       	ret
 1be:	83 e0       	ldi	r24, 0x03	; 3
 1c0:	08 95       	ret
 1c2:	80 e0       	ldi	r24, 0x00	; 0
 1c4:	08 95       	ret

000001c6 <DIO_enuSetPinVal>:
 1c6:	84 30       	cpi	r24, 0x04	; 4
 1c8:	08 f0       	brcs	.+2      	; 0x1cc <DIO_enuSetPinVal+0x6>
 1ca:	67 c0       	rjmp	.+206    	; 0x29a <DIO_enuSetPinVal+0xd4>
 1cc:	68 30       	cpi	r22, 0x08	; 8
 1ce:	08 f0       	brcs	.+2      	; 0x1d2 <DIO_enuSetPinVal+0xc>
 1d0:	66 c0       	rjmp	.+204    	; 0x29e <DIO_enuSetPinVal+0xd8>
 1d2:	42 30       	cpi	r20, 0x02	; 2
 1d4:	08 f0       	brcs	.+2      	; 0x1d8 <DIO_enuSetPinVal+0x12>
 1d6:	65 c0       	rjmp	.+202    	; 0x2a2 <DIO_enuSetPinVal+0xdc>
 1d8:	81 30       	cpi	r24, 0x01	; 1
 1da:	e9 f0       	breq	.+58     	; 0x216 <DIO_enuSetPinVal+0x50>
 1dc:	30 f0       	brcs	.+12     	; 0x1ea <DIO_enuSetPinVal+0x24>
 1de:	82 30       	cpi	r24, 0x02	; 2
 1e0:	81 f1       	breq	.+96     	; 0x242 <DIO_enuSetPinVal+0x7c>
 1e2:	83 30       	cpi	r24, 0x03	; 3
 1e4:	09 f4       	brne	.+2      	; 0x1e8 <DIO_enuSetPinVal+0x22>
 1e6:	43 c0       	rjmp	.+134    	; 0x26e <DIO_enuSetPinVal+0xa8>
 1e8:	5e c0       	rjmp	.+188    	; 0x2a6 <DIO_enuSetPinVal+0xe0>
 1ea:	81 e0       	ldi	r24, 0x01	; 1
 1ec:	90 e0       	ldi	r25, 0x00	; 0
 1ee:	06 2e       	mov	r0, r22
 1f0:	02 c0       	rjmp	.+4      	; 0x1f6 <DIO_enuSetPinVal+0x30>
 1f2:	88 0f       	add	r24, r24
 1f4:	99 1f       	adc	r25, r25
 1f6:	0a 94       	dec	r0
 1f8:	e2 f7       	brpl	.-8      	; 0x1f2 <DIO_enuSetPinVal+0x2c>
 1fa:	80 95       	com	r24
 1fc:	2b b3       	in	r18, 0x1b	; 27
 1fe:	28 23       	and	r18, r24
 200:	84 2f       	mov	r24, r20
 202:	90 e0       	ldi	r25, 0x00	; 0
 204:	02 c0       	rjmp	.+4      	; 0x20a <DIO_enuSetPinVal+0x44>
 206:	88 0f       	add	r24, r24
 208:	99 1f       	adc	r25, r25
 20a:	6a 95       	dec	r22
 20c:	e2 f7       	brpl	.-8      	; 0x206 <DIO_enuSetPinVal+0x40>
 20e:	82 2b       	or	r24, r18
 210:	8b bb       	out	0x1b, r24	; 27
 212:	80 e0       	ldi	r24, 0x00	; 0
 214:	08 95       	ret
 216:	21 e0       	ldi	r18, 0x01	; 1
 218:	30 e0       	ldi	r19, 0x00	; 0
 21a:	06 2e       	mov	r0, r22
 21c:	02 c0       	rjmp	.+4      	; 0x222 <DIO_enuSetPinVal+0x5c>
 21e:	22 0f       	add	r18, r18
 220:	33 1f       	adc	r19, r19
 222:	0a 94       	dec	r0
 224:	e2 f7       	brpl	.-8      	; 0x21e <DIO_enuSetPinVal+0x58>
 226:	20 95       	com	r18
 228:	88 b3       	in	r24, 0x18	; 24
 22a:	28 23       	and	r18, r24
 22c:	84 2f       	mov	r24, r20
 22e:	90 e0       	ldi	r25, 0x00	; 0
 230:	02 c0       	rjmp	.+4      	; 0x236 <DIO_enuSetPinVal+0x70>
 232:	88 0f       	add	r24, r24
 234:	99 1f       	adc	r25, r25
 236:	6a 95       	dec	r22
 238:	e2 f7       	brpl	.-8      	; 0x232 <DIO_enuSetPinVal+0x6c>
 23a:	82 2b       	or	r24, r18
 23c:	88 bb       	out	0x18, r24	; 24
 23e:	80 e0       	ldi	r24, 0x00	; 0
 240:	08 95       	ret
 242:	21 e0       	ldi	r18, 0x01	; 1
 244:	30 e0       	ldi	r19, 0x00	; 0
 246:	06 2e       	mov	r0, r22
 248:	02 c0       	rjmp	.+4      	; 0x24e <DIO_enuSetPinVal+0x88>
 24a:	22 0f       	add	r18, r18
 24c:	33 1f       	adc	r19, r19
 24e:	0a 94       	dec	r0
 250:	e2 f7       	brpl	.-8      	; 0x24a <DIO_enuSetPinVal+0x84>
 252:	20 95       	com	r18
 254:	85 b3       	in	r24, 0x15	; 21
 256:	28 23       	and	r18, r24
 258:	84 2f       	mov	r24, r20
 25a:	90 e0       	ldi	r25, 0x00	; 0
 25c:	02 c0       	rjmp	.+4      	; 0x262 <DIO_enuSetPinVal+0x9c>
 25e:	88 0f       	add	r24, r24
 260:	99 1f       	adc	r25, r25
 262:	6a 95       	dec	r22
 264:	e2 f7       	brpl	.-8      	; 0x25e <DIO_enuSetPinVal+0x98>
 266:	82 2b       	or	r24, r18
 268:	85 bb       	out	0x15, r24	; 21
 26a:	80 e0       	ldi	r24, 0x00	; 0
 26c:	08 95       	ret
 26e:	21 e0       	ldi	r18, 0x01	; 1
 270:	30 e0       	ldi	r19, 0x00	; 0
 272:	06 2e       	mov	r0, r22
 274:	02 c0       	rjmp	.+4      	; 0x27a <DIO_enuSetPinVal+0xb4>
 276:	22 0f       	add	r18, r18
 278:	33 1f       	adc	r19, r19
 27a:	0a 94       	dec	r0
 27c:	e2 f7       	brpl	.-8      	; 0x276 <DIO_enuSetPinVal+0xb0>
 27e:	20 95       	com	r18
 280:	82 b3       	in	r24, 0x12	; 18
 282:	28 23       	and	r18, r24
 284:	84 2f       	mov	r24, r20
 286:	90 e0       	ldi	r25, 0x00	; 0
 288:	02 c0       	rjmp	.+4      	; 0x28e <DIO_enuSetPinVal+0xc8>
 28a:	88 0f       	add	r24, r24
 28c:	99 1f       	adc	r25, r25
 28e:	6a 95       	dec	r22
 290:	e2 f7       	brpl	.-8      	; 0x28a <DIO_enuSetPinVal+0xc4>
 292:	82 2b       	or	r24, r18
 294:	82 bb       	out	0x12, r24	; 18
 296:	80 e0       	ldi	r24, 0x00	; 0
 298:	08 95       	ret
 29a:	83 e0       	ldi	r24, 0x03	; 3
 29c:	08 95       	ret
 29e:	83 e0       	ldi	r24, 0x03	; 3
 2a0:	08 95       	ret
 2a2:	83 e0       	ldi	r24, 0x03	; 3
 2a4:	08 95       	ret
 2a6:	80 e0       	ldi	r24, 0x00	; 0
 2a8:	08 95       	ret

000002aa <DIO_enuTogPinVal>:
**/
ES_t DIO_enuTogPinVal(u8 Copy_u8PortID, u8 Copy_u8PinID)
{
	ES_t Local_enuErrorState = ES_NOK;
	
	if(Copy_u8PortID <= DIO_PORTD && Copy_u8PinID <= DIO_PIN7)
 2aa:	84 30       	cpi	r24, 0x04	; 4
 2ac:	d0 f5       	brcc	.+116    	; 0x322 <DIO_enuTogPinVal+0x78>
 2ae:	68 30       	cpi	r22, 0x08	; 8
 2b0:	d0 f5       	brcc	.+116    	; 0x326 <DIO_enuTogPinVal+0x7c>
	{
		switch(Copy_u8PortID)
 2b2:	81 30       	cpi	r24, 0x01	; 1
 2b4:	91 f0       	breq	.+36     	; 0x2da <DIO_enuTogPinVal+0x30>
 2b6:	28 f0       	brcs	.+10     	; 0x2c2 <DIO_enuTogPinVal+0x18>
 2b8:	82 30       	cpi	r24, 0x02	; 2
 2ba:	d9 f0       	breq	.+54     	; 0x2f2 <DIO_enuTogPinVal+0x48>
 2bc:	83 30       	cpi	r24, 0x03	; 3
 2be:	29 f1       	breq	.+74     	; 0x30a <DIO_enuTogPinVal+0x60>
 2c0:	34 c0       	rjmp	.+104    	; 0x32a <DIO_enuTogPinVal+0x80>
		{
			case DIO_PORTA:
			PORTA ^= (DIO_MASK_BIT << Copy_u8PinID);
 2c2:	81 e0       	ldi	r24, 0x01	; 1
 2c4:	90 e0       	ldi	r25, 0x00	; 0
 2c6:	02 c0       	rjmp	.+4      	; 0x2cc <DIO_enuTogPinVal+0x22>
 2c8:	88 0f       	add	r24, r24
 2ca:	99 1f       	adc	r25, r25
 2cc:	6a 95       	dec	r22
 2ce:	e2 f7       	brpl	.-8      	; 0x2c8 <DIO_enuTogPinVal+0x1e>
 2d0:	9b b3       	in	r25, 0x1b	; 27
 2d2:	89 27       	eor	r24, r25
 2d4:	8b bb       	out	0x1b, r24	; 27
			
			case DIO_PORTD:
			PORTD ^= (DIO_MASK_BIT << Copy_u8PinID);
			break;
		}
		Local_enuErrorState = ES_OK;
 2d6:	80 e0       	ldi	r24, 0x00	; 0
	{
		switch(Copy_u8PortID)
		{
			case DIO_PORTA:
			PORTA ^= (DIO_MASK_BIT << Copy_u8PinID);
			break;
 2d8:	08 95       	ret
			
			case DIO_PORTB:
			PORTB ^= (DIO_MASK_BIT << Copy_u8PinID);
 2da:	81 e0       	ldi	r24, 0x01	; 1
 2dc:	90 e0       	ldi	r25, 0x00	; 0
 2de:	02 c0       	rjmp	.+4      	; 0x2e4 <DIO_enuTogPinVal+0x3a>
 2e0:	88 0f       	add	r24, r24
 2e2:	99 1f       	adc	r25, r25
 2e4:	6a 95       	dec	r22
 2e6:	e2 f7       	brpl	.-8      	; 0x2e0 <DIO_enuTogPinVal+0x36>
 2e8:	98 b3       	in	r25, 0x18	; 24
 2ea:	89 27       	eor	r24, r25
 2ec:	88 bb       	out	0x18, r24	; 24
			
			case DIO_PORTD:
			PORTD ^= (DIO_MASK_BIT << Copy_u8PinID);
			break;
		}
		Local_enuErrorState = ES_OK;
 2ee:	80 e0       	ldi	r24, 0x00	; 0
			PORTA ^= (DIO_MASK_BIT << Copy_u8PinID);
			break;
			
			case DIO_PORTB:
			PORTB ^= (DIO_MASK_BIT << Copy_u8PinID);
			break;
 2f0:	08 95       	ret
			
			case DIO_PORTC:
			PORTC ^= (DIO_MASK_BIT << Copy_u8PinID);
 2f2:	81 e0       	ldi	r24, 0x01	; 1
 2f4:	90 e0       	ldi	r25, 0x00	; 0
 2f6:	02 c0       	rjmp	.+4      	; 0x2fc <DIO_enuTogPinVal+0x52>
 2f8:	88 0f       	add	r24, r24
 2fa:	99 1f       	adc	r25, r25
 2fc:	6a 95       	dec	r22
 2fe:	e2 f7       	brpl	.-8      	; 0x2f8 <DIO_enuTogPinVal+0x4e>
 300:	95 b3       	in	r25, 0x15	; 21
 302:	89 27       	eor	r24, r25
 304:	85 bb       	out	0x15, r24	; 21
			
			case DIO_PORTD:
			PORTD ^= (DIO_MASK_BIT << Copy_u8PinID);
			break;
		}
		Local_enuErrorState = ES_OK;
 306:	80 e0       	ldi	r24, 0x00	; 0
			PORTB ^= (DIO_MASK_BIT << Copy_u8PinID);
			break;
			
			case DIO_PORTC:
			PORTC ^= (DIO_MASK_BIT << Copy_u8PinID);
			break;
 308:	08 95       	ret
			
			case DIO_PORTD:
			PORTD ^= (DIO_MASK_BIT << Copy_u8PinID);
 30a:	81 e0       	ldi	r24, 0x01	; 1
 30c:	90 e0       	ldi	r25, 0x00	; 0
 30e:	02 c0       	rjmp	.+4      	; 0x314 <DIO_enuTogPinVal+0x6a>
 310:	88 0f       	add	r24, r24
 312:	99 1f       	adc	r25, r25
 314:	6a 95       	dec	r22
 316:	e2 f7       	brpl	.-8      	; 0x310 <DIO_enuTogPinVal+0x66>
 318:	92 b3       	in	r25, 0x12	; 18
 31a:	89 27       	eor	r24, r25
 31c:	82 bb       	out	0x12, r24	; 18
			break;
		}
		Local_enuErrorState = ES_OK;
 31e:	80 e0       	ldi	r24, 0x00	; 0
			PORTC ^= (DIO_MASK_BIT << Copy_u8PinID);
			break;
			
			case DIO_PORTD:
			PORTD ^= (DIO_MASK_BIT << Copy_u8PinID);
			break;
 320:	08 95       	ret
		}
		Local_enuErrorState = ES_OK;
	}
	else
	{
		Local_enuErrorState = ES_OUT_OF_RANGE;
 322:	83 e0       	ldi	r24, 0x03	; 3
 324:	08 95       	ret
 326:	83 e0       	ldi	r24, 0x03	; 3
 328:	08 95       	ret
			
			case DIO_PORTD:
			PORTD ^= (DIO_MASK_BIT << Copy_u8PinID);
			break;
		}
		Local_enuErrorState = ES_OK;
 32a:	80 e0       	ldi	r24, 0x00	; 0
	{
		Local_enuErrorState = ES_OUT_OF_RANGE;
	}
	
	return Local_enuErrorState;
 32c:	08 95       	ret

0000032e <EXTI_enuInit>:
	{
		Local_enuErrorState = ES_OUT_OF_RANGE;
	}
	
	return Local_enuErrorState;
}
 32e:	ac 01       	movw	r20, r24
 330:	89 2b       	or	r24, r25
 332:	09 f0       	breq	.+2      	; 0x336 <EXTI_enuInit+0x8>
 334:	86 c0       	rjmp	.+268    	; 0x442 <__EEPROM_REGION_LENGTH__+0x42>
 336:	82 e0       	ldi	r24, 0x02	; 2
 338:	08 95       	ret
 33a:	e9 2f       	mov	r30, r25
 33c:	f0 e0       	ldi	r31, 0x00	; 0
 33e:	9f 01       	movw	r18, r30
 340:	22 0f       	add	r18, r18
 342:	33 1f       	adc	r19, r19
 344:	e2 0f       	add	r30, r18
 346:	f3 1f       	adc	r31, r19
 348:	e4 0f       	add	r30, r20
 34a:	f5 1f       	adc	r31, r21
 34c:	20 81       	ld	r18, Z
 34e:	21 30       	cpi	r18, 0x01	; 1
 350:	81 f1       	breq	.+96     	; 0x3b2 <EXTI_enuInit+0x84>
 352:	20 f0       	brcs	.+8      	; 0x35c <EXTI_enuInit+0x2e>
 354:	22 30       	cpi	r18, 0x02	; 2
 356:	09 f4       	brne	.+2      	; 0x35a <EXTI_enuInit+0x2c>
 358:	57 c0       	rjmp	.+174    	; 0x408 <__EEPROM_REGION_LENGTH__+0x8>
 35a:	6a c0       	rjmp	.+212    	; 0x430 <__EEPROM_REGION_LENGTH__+0x30>
 35c:	21 81       	ldd	r18, Z+1	; 0x01
 35e:	21 11       	cpse	r18, r1
 360:	6e c0       	rjmp	.+220    	; 0x43e <__EEPROM_REGION_LENGTH__+0x3e>
 362:	25 b7       	in	r18, 0x35	; 53
 364:	2c 7f       	andi	r18, 0xFC	; 252
 366:	25 bf       	out	0x35, r18	; 53
 368:	22 81       	ldd	r18, Z+2	; 0x02
 36a:	21 30       	cpi	r18, 0x01	; 1
 36c:	69 f0       	breq	.+26     	; 0x388 <EXTI_enuInit+0x5a>
 36e:	28 f0       	brcs	.+10     	; 0x37a <EXTI_enuInit+0x4c>
 370:	22 30       	cpi	r18, 0x02	; 2
 372:	89 f0       	breq	.+34     	; 0x396 <EXTI_enuInit+0x68>
 374:	23 30       	cpi	r18, 0x03	; 3
 376:	b1 f0       	breq	.+44     	; 0x3a4 <EXTI_enuInit+0x76>
 378:	5d c0       	rjmp	.+186    	; 0x434 <__EEPROM_REGION_LENGTH__+0x34>
 37a:	25 b7       	in	r18, 0x35	; 53
 37c:	2e 7f       	andi	r18, 0xFE	; 254
 37e:	25 bf       	out	0x35, r18	; 53
 380:	25 b7       	in	r18, 0x35	; 53
 382:	2d 7f       	andi	r18, 0xFD	; 253
 384:	25 bf       	out	0x35, r18	; 53
 386:	5b c0       	rjmp	.+182    	; 0x43e <__EEPROM_REGION_LENGTH__+0x3e>
 388:	25 b7       	in	r18, 0x35	; 53
 38a:	21 60       	ori	r18, 0x01	; 1
 38c:	25 bf       	out	0x35, r18	; 53
 38e:	25 b7       	in	r18, 0x35	; 53
 390:	2d 7f       	andi	r18, 0xFD	; 253
 392:	25 bf       	out	0x35, r18	; 53
 394:	54 c0       	rjmp	.+168    	; 0x43e <__EEPROM_REGION_LENGTH__+0x3e>
 396:	25 b7       	in	r18, 0x35	; 53
 398:	2e 7f       	andi	r18, 0xFE	; 254
 39a:	25 bf       	out	0x35, r18	; 53
 39c:	25 b7       	in	r18, 0x35	; 53
 39e:	22 60       	ori	r18, 0x02	; 2
 3a0:	25 bf       	out	0x35, r18	; 53
 3a2:	4d c0       	rjmp	.+154    	; 0x43e <__EEPROM_REGION_LENGTH__+0x3e>
 3a4:	25 b7       	in	r18, 0x35	; 53
 3a6:	21 60       	ori	r18, 0x01	; 1
 3a8:	25 bf       	out	0x35, r18	; 53
 3aa:	25 b7       	in	r18, 0x35	; 53
 3ac:	22 60       	ori	r18, 0x02	; 2
 3ae:	25 bf       	out	0x35, r18	; 53
 3b0:	46 c0       	rjmp	.+140    	; 0x43e <__EEPROM_REGION_LENGTH__+0x3e>
 3b2:	21 81       	ldd	r18, Z+1	; 0x01
 3b4:	21 11       	cpse	r18, r1
 3b6:	43 c0       	rjmp	.+134    	; 0x43e <__EEPROM_REGION_LENGTH__+0x3e>
 3b8:	25 b7       	in	r18, 0x35	; 53
 3ba:	23 7f       	andi	r18, 0xF3	; 243
 3bc:	25 bf       	out	0x35, r18	; 53
 3be:	22 81       	ldd	r18, Z+2	; 0x02
 3c0:	21 30       	cpi	r18, 0x01	; 1
 3c2:	69 f0       	breq	.+26     	; 0x3de <EXTI_enuInit+0xb0>
 3c4:	28 f0       	brcs	.+10     	; 0x3d0 <EXTI_enuInit+0xa2>
 3c6:	22 30       	cpi	r18, 0x02	; 2
 3c8:	89 f0       	breq	.+34     	; 0x3ec <EXTI_enuInit+0xbe>
 3ca:	23 30       	cpi	r18, 0x03	; 3
 3cc:	b1 f0       	breq	.+44     	; 0x3fa <EXTI_enuInit+0xcc>
 3ce:	34 c0       	rjmp	.+104    	; 0x438 <__EEPROM_REGION_LENGTH__+0x38>
 3d0:	25 b7       	in	r18, 0x35	; 53
 3d2:	2b 7f       	andi	r18, 0xFB	; 251
 3d4:	25 bf       	out	0x35, r18	; 53
 3d6:	25 b7       	in	r18, 0x35	; 53
 3d8:	27 7f       	andi	r18, 0xF7	; 247
 3da:	25 bf       	out	0x35, r18	; 53
 3dc:	30 c0       	rjmp	.+96     	; 0x43e <__EEPROM_REGION_LENGTH__+0x3e>
 3de:	25 b7       	in	r18, 0x35	; 53
 3e0:	24 60       	ori	r18, 0x04	; 4
 3e2:	25 bf       	out	0x35, r18	; 53
 3e4:	25 b7       	in	r18, 0x35	; 53
 3e6:	27 7f       	andi	r18, 0xF7	; 247
 3e8:	25 bf       	out	0x35, r18	; 53
 3ea:	29 c0       	rjmp	.+82     	; 0x43e <__EEPROM_REGION_LENGTH__+0x3e>
 3ec:	25 b7       	in	r18, 0x35	; 53
 3ee:	2b 7f       	andi	r18, 0xFB	; 251
 3f0:	25 bf       	out	0x35, r18	; 53
 3f2:	25 b7       	in	r18, 0x35	; 53
 3f4:	28 60       	ori	r18, 0x08	; 8
 3f6:	25 bf       	out	0x35, r18	; 53
 3f8:	22 c0       	rjmp	.+68     	; 0x43e <__EEPROM_REGION_LENGTH__+0x3e>
 3fa:	25 b7       	in	r18, 0x35	; 53
 3fc:	24 60       	ori	r18, 0x04	; 4
 3fe:	25 bf       	out	0x35, r18	; 53
 400:	25 b7       	in	r18, 0x35	; 53
 402:	28 60       	ori	r18, 0x08	; 8
 404:	25 bf       	out	0x35, r18	; 53
 406:	1b c0       	rjmp	.+54     	; 0x43e <__EEPROM_REGION_LENGTH__+0x3e>
 408:	21 81       	ldd	r18, Z+1	; 0x01
 40a:	21 11       	cpse	r18, r1
 40c:	18 c0       	rjmp	.+48     	; 0x43e <__EEPROM_REGION_LENGTH__+0x3e>
 40e:	24 b7       	in	r18, 0x34	; 52
 410:	2f 7b       	andi	r18, 0xBF	; 191
 412:	24 bf       	out	0x34, r18	; 52
 414:	22 81       	ldd	r18, Z+2	; 0x02
 416:	22 30       	cpi	r18, 0x02	; 2
 418:	19 f0       	breq	.+6      	; 0x420 <__EEPROM_REGION_LENGTH__+0x20>
 41a:	23 30       	cpi	r18, 0x03	; 3
 41c:	29 f0       	breq	.+10     	; 0x428 <__EEPROM_REGION_LENGTH__+0x28>
 41e:	0e c0       	rjmp	.+28     	; 0x43c <__EEPROM_REGION_LENGTH__+0x3c>
 420:	24 b7       	in	r18, 0x34	; 52
 422:	2f 7b       	andi	r18, 0xBF	; 191
 424:	24 bf       	out	0x34, r18	; 52
 426:	0b c0       	rjmp	.+22     	; 0x43e <__EEPROM_REGION_LENGTH__+0x3e>
 428:	24 b7       	in	r18, 0x34	; 52
 42a:	20 64       	ori	r18, 0x40	; 64
 42c:	24 bf       	out	0x34, r18	; 52
 42e:	07 c0       	rjmp	.+14     	; 0x43e <__EEPROM_REGION_LENGTH__+0x3e>
 430:	83 e0       	ldi	r24, 0x03	; 3
 432:	05 c0       	rjmp	.+10     	; 0x43e <__EEPROM_REGION_LENGTH__+0x3e>
 434:	83 e0       	ldi	r24, 0x03	; 3
 436:	03 c0       	rjmp	.+6      	; 0x43e <__EEPROM_REGION_LENGTH__+0x3e>
 438:	83 e0       	ldi	r24, 0x03	; 3
 43a:	01 c0       	rjmp	.+2      	; 0x43e <__EEPROM_REGION_LENGTH__+0x3e>
 43c:	83 e0       	ldi	r24, 0x03	; 3
 43e:	9f 5f       	subi	r25, 0xFF	; 255
 440:	02 c0       	rjmp	.+4      	; 0x446 <__EEPROM_REGION_LENGTH__+0x46>
 442:	90 e0       	ldi	r25, 0x00	; 0
 444:	81 e0       	ldi	r24, 0x01	; 1
 446:	93 30       	cpi	r25, 0x03	; 3
 448:	08 f4       	brcc	.+2      	; 0x44c <__EEPROM_REGION_LENGTH__+0x4c>
 44a:	77 cf       	rjmp	.-274    	; 0x33a <EXTI_enuInit+0xc>
 44c:	08 95       	ret

0000044e <EXTI_enuEnable>:
 44e:	83 30       	cpi	r24, 0x03	; 3
 450:	f0 f4       	brcc	.+60     	; 0x48e <EXTI_enuEnable+0x40>
 452:	81 30       	cpi	r24, 0x01	; 1
 454:	61 f0       	breq	.+24     	; 0x46e <EXTI_enuEnable+0x20>
 456:	18 f0       	brcs	.+6      	; 0x45e <EXTI_enuEnable+0x10>
 458:	82 30       	cpi	r24, 0x02	; 2
 45a:	89 f0       	breq	.+34     	; 0x47e <EXTI_enuEnable+0x30>
 45c:	1a c0       	rjmp	.+52     	; 0x492 <EXTI_enuEnable+0x44>
 45e:	8b b7       	in	r24, 0x3b	; 59
 460:	8f 7b       	andi	r24, 0xBF	; 191
 462:	8b bf       	out	0x3b, r24	; 59
 464:	8b b7       	in	r24, 0x3b	; 59
 466:	80 64       	ori	r24, 0x40	; 64
 468:	8b bf       	out	0x3b, r24	; 59
 46a:	81 e0       	ldi	r24, 0x01	; 1
 46c:	08 95       	ret
 46e:	8b b7       	in	r24, 0x3b	; 59
 470:	8f 77       	andi	r24, 0x7F	; 127
 472:	8b bf       	out	0x3b, r24	; 59
 474:	8b b7       	in	r24, 0x3b	; 59
 476:	80 68       	ori	r24, 0x80	; 128
 478:	8b bf       	out	0x3b, r24	; 59
 47a:	81 e0       	ldi	r24, 0x01	; 1
 47c:	08 95       	ret
 47e:	8b b7       	in	r24, 0x3b	; 59
 480:	8f 7d       	andi	r24, 0xDF	; 223
 482:	8b bf       	out	0x3b, r24	; 59
 484:	8b b7       	in	r24, 0x3b	; 59
 486:	80 62       	ori	r24, 0x20	; 32
 488:	8b bf       	out	0x3b, r24	; 59
 48a:	81 e0       	ldi	r24, 0x01	; 1
 48c:	08 95       	ret
 48e:	83 e0       	ldi	r24, 0x03	; 3
 490:	08 95       	ret
 492:	81 e0       	ldi	r24, 0x01	; 1
 494:	08 95       	ret

00000496 <EXTI_enuCallBackFunc>:

ES_t EXTI_enuCallBackFunc(void (*Copy_PFunc)(void),EXTI_ID_t Copy_enuEXTI_Id)
{
	ES_t Local_enuErrorState = ES_NOK;
	
	if(Copy_PFunc != NULL)
 496:	00 97       	sbiw	r24, 0x00	; 0
 498:	51 f0       	breq	.+20     	; 0x4ae <EXTI_enuCallBackFunc+0x18>
	{
		if(Copy_enuEXTI_Id < MAX_NUM_EXTI)
 49a:	63 30       	cpi	r22, 0x03	; 3
 49c:	40 f4       	brcc	.+16     	; 0x4ae <EXTI_enuCallBackFunc+0x18>
		{
			EXTI_APFunc[Copy_enuEXTI_Id] = Copy_PFunc;
 49e:	e6 2f       	mov	r30, r22
 4a0:	f0 e0       	ldi	r31, 0x00	; 0
 4a2:	ee 0f       	add	r30, r30
 4a4:	ff 1f       	adc	r31, r31
 4a6:	e6 59       	subi	r30, 0x96	; 150
 4a8:	ff 4f       	sbci	r31, 0xFF	; 255
 4aa:	91 83       	std	Z+1, r25	; 0x01
 4ac:	80 83       	st	Z, r24
	}
	else
	{
		Local_enuErrorState = ES_NULL_POINTER;
	}
}
 4ae:	08 95       	ret

000004b0 <__vector_1>:

/* ISR for EXTI0 */
void __vector_1(void) __attribute__((signal));
void __vector_1(void)
{	
 4b0:	1f 92       	push	r1
 4b2:	0f 92       	push	r0
 4b4:	0f b6       	in	r0, 0x3f	; 63
 4b6:	0f 92       	push	r0
 4b8:	11 24       	eor	r1, r1
 4ba:	2f 93       	push	r18
 4bc:	3f 93       	push	r19
 4be:	4f 93       	push	r20
 4c0:	5f 93       	push	r21
 4c2:	6f 93       	push	r22
 4c4:	7f 93       	push	r23
 4c6:	8f 93       	push	r24
 4c8:	9f 93       	push	r25
 4ca:	af 93       	push	r26
 4cc:	bf 93       	push	r27
 4ce:	ef 93       	push	r30
 4d0:	ff 93       	push	r31
	if(EXTI_APFunc[EXTI0] != NULL)
 4d2:	e0 91 6a 00 	lds	r30, 0x006A	; 0x80006a <__data_end>
 4d6:	f0 91 6b 00 	lds	r31, 0x006B	; 0x80006b <__data_end+0x1>
 4da:	30 97       	sbiw	r30, 0x00	; 0
 4dc:	09 f0       	breq	.+2      	; 0x4e0 <__vector_1+0x30>
	{
		EXTI_APFunc[0]();
 4de:	09 95       	icall
	}
}
 4e0:	ff 91       	pop	r31
 4e2:	ef 91       	pop	r30
 4e4:	bf 91       	pop	r27
 4e6:	af 91       	pop	r26
 4e8:	9f 91       	pop	r25
 4ea:	8f 91       	pop	r24
 4ec:	7f 91       	pop	r23
 4ee:	6f 91       	pop	r22
 4f0:	5f 91       	pop	r21
 4f2:	4f 91       	pop	r20
 4f4:	3f 91       	pop	r19
 4f6:	2f 91       	pop	r18
 4f8:	0f 90       	pop	r0
 4fa:	0f be       	out	0x3f, r0	; 63
 4fc:	0f 90       	pop	r0
 4fe:	1f 90       	pop	r1
 500:	18 95       	reti

00000502 <__vector_2>:

/* ISR for EXTI1 */
void __vector_2(void) __attribute__((signal));
void __vector_2(void)
{
 502:	1f 92       	push	r1
 504:	0f 92       	push	r0
 506:	0f b6       	in	r0, 0x3f	; 63
 508:	0f 92       	push	r0
 50a:	11 24       	eor	r1, r1
 50c:	2f 93       	push	r18
 50e:	3f 93       	push	r19
 510:	4f 93       	push	r20
 512:	5f 93       	push	r21
 514:	6f 93       	push	r22
 516:	7f 93       	push	r23
 518:	8f 93       	push	r24
 51a:	9f 93       	push	r25
 51c:	af 93       	push	r26
 51e:	bf 93       	push	r27
 520:	ef 93       	push	r30
 522:	ff 93       	push	r31
	if(EXTI_APFunc[EXTI1] != NULL)
 524:	e0 91 6c 00 	lds	r30, 0x006C	; 0x80006c <__data_end+0x2>
 528:	f0 91 6d 00 	lds	r31, 0x006D	; 0x80006d <__data_end+0x3>
 52c:	30 97       	sbiw	r30, 0x00	; 0
 52e:	09 f0       	breq	.+2      	; 0x532 <__vector_2+0x30>
	{
		EXTI_APFunc[1]();
 530:	09 95       	icall
	}
}
 532:	ff 91       	pop	r31
 534:	ef 91       	pop	r30
 536:	bf 91       	pop	r27
 538:	af 91       	pop	r26
 53a:	9f 91       	pop	r25
 53c:	8f 91       	pop	r24
 53e:	7f 91       	pop	r23
 540:	6f 91       	pop	r22
 542:	5f 91       	pop	r21
 544:	4f 91       	pop	r20
 546:	3f 91       	pop	r19
 548:	2f 91       	pop	r18
 54a:	0f 90       	pop	r0
 54c:	0f be       	out	0x3f, r0	; 63
 54e:	0f 90       	pop	r0
 550:	1f 90       	pop	r1
 552:	18 95       	reti

00000554 <__vector_3>:

/* ISR for EXTI2 */
void __vector_3(void) __attribute__((signal));
void __vector_3(void)
{	
 554:	1f 92       	push	r1
 556:	0f 92       	push	r0
 558:	0f b6       	in	r0, 0x3f	; 63
 55a:	0f 92       	push	r0
 55c:	11 24       	eor	r1, r1
 55e:	2f 93       	push	r18
 560:	3f 93       	push	r19
 562:	4f 93       	push	r20
 564:	5f 93       	push	r21
 566:	6f 93       	push	r22
 568:	7f 93       	push	r23
 56a:	8f 93       	push	r24
 56c:	9f 93       	push	r25
 56e:	af 93       	push	r26
 570:	bf 93       	push	r27
 572:	ef 93       	push	r30
 574:	ff 93       	push	r31
	if(EXTI_APFunc[EXTI1] != NULL)
 576:	80 91 6c 00 	lds	r24, 0x006C	; 0x80006c <__data_end+0x2>
 57a:	90 91 6d 00 	lds	r25, 0x006D	; 0x80006d <__data_end+0x3>
 57e:	89 2b       	or	r24, r25
 580:	29 f0       	breq	.+10     	; 0x58c <__vector_3+0x38>
	{
		EXTI_APFunc[2]();
 582:	e0 91 6e 00 	lds	r30, 0x006E	; 0x80006e <__data_end+0x4>
 586:	f0 91 6f 00 	lds	r31, 0x006F	; 0x80006f <__data_end+0x5>
 58a:	09 95       	icall
	}
 58c:	ff 91       	pop	r31
 58e:	ef 91       	pop	r30
 590:	bf 91       	pop	r27
 592:	af 91       	pop	r26
 594:	9f 91       	pop	r25
 596:	8f 91       	pop	r24
 598:	7f 91       	pop	r23
 59a:	6f 91       	pop	r22
 59c:	5f 91       	pop	r21
 59e:	4f 91       	pop	r20
 5a0:	3f 91       	pop	r19
 5a2:	2f 91       	pop	r18
 5a4:	0f 90       	pop	r0
 5a6:	0f be       	out	0x3f, r0	; 63
 5a8:	0f 90       	pop	r0
 5aa:	1f 90       	pop	r1
 5ac:	18 95       	reti

000005ae <GIE_enuGloable_Interrupt_Enable>:

ES_t GIE_enuGloable_Interrupt_Enable(void)
{
	ES_t Local_enuErrorState = ES_NOK;
	
	SREG &= ~(MASK_BIT << GIE_I);
 5ae:	8f b7       	in	r24, 0x3f	; 63
 5b0:	8f 77       	andi	r24, 0x7F	; 127
 5b2:	8f bf       	out	0x3f, r24	; 63
	SREG |= (MASK_BIT << GIE_I);
 5b4:	8f b7       	in	r24, 0x3f	; 63
 5b6:	80 68       	ori	r24, 0x80	; 128
 5b8:	8f bf       	out	0x3f, r24	; 63
	Local_enuErrorState = ES_OK;
	
	return Local_enuErrorState;
}
 5ba:	80 e0       	ldi	r24, 0x00	; 0
 5bc:	08 95       	ret

000005be <_exit>:
 5be:	f8 94       	cli

000005c0 <__stop_program>:
 5c0:	ff cf       	rjmp	.-2      	; 0x5c0 <__stop_program>
